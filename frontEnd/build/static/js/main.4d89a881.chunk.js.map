{"version":3,"sources":["logo.svg","firebase.js","components/TeacherHome.js","components/BadgeAdmin.js","components/RewardAdmin.js","components/RewardAdminEdit.js","components/StudentDashboard.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","TeacherAdministration","navigate","useNavigate","Button","onClick","BadgeAdmin","state","data","name","requirements","pic_url","badgeClassID","handleName","event","setState","target","value","handleRequirement","handleBadgeClassID","handleURL","files","handleSubmit","preventDefault","storage","getStorage","storageRef","ref","file","metadata","contentType","type","console","log","uploadBytes","badge","JSON","stringify","axios","post","headers","then","res","get","length","this","className","onSubmit","onChange","map","item","src","style","height","width","to","badgeID","React","Component","RewardAdmin","rewardName","ptsRequired","url","rewardID","UploadReward","require","rewardPoints","redirectToReferrer","handlePoints","reward","put","window","location","href","split","slice","handleDelete","delete","StudentDashboard","streaks","totalPts","redeemedPts","progress","handleChange","e","id","classes","props","Container","fluid","Slider","root","defaultValue","color","Row","xs","Col","md","Card","Body","Title","Text","Nav","activeKey","onSelect","selectedKey","alert","Item","activeClassName","Link","eventKey","Header","variant","max","min","orientation","reversed","ListGroup","studentID","App","useState","setUser","onAuthStateChanged","currentUser","error","errorCode","code","errorMessage","message","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d89a881.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAFY9L3JNCYGf5APtJM9QallQ8TLXvFWDU\",\n  authDomain: \"quizment-ae4a6.firebaseapp.com\",\n  projectId: \"quizment-ae4a6\",\n  storageBucket: \"quizment-ae4a6.appspot.com\",\n  messagingSenderId: \"774729961857\",\n  appId: \"1:774729961857:web:87e44344039ae5dd875880\",\n  measurementId: \"G-4GXXKNTKV9\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\n//authentication\nconst auth = getAuth(firebaseApp);\n\n// export\nexport { auth };\n\n","import React from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\n// Rewards\n\nexport default function TeacherAdministration() {\n    let navigate = useNavigate();\n    return (\n        <div>\n            <h1>Teacher Administration</h1>\n            <Button onClick={() => {\n            navigate('/studentAdmin');\n          }}>Student Administration</Button>\n          <Button onClick={() => {\n            navigate('/rewardsAdmin');\n          }}>Rewards Administration</Button>\n            <Button onClick={() => {\n            navigate('/badgesAdmin');\n          }}>Badges Administration</Button>\n            <Button onClick={() => {\n            navigate('/mazeAdmin');\n          }}>Maze Administration</Button>\n          <Button onClick={() => {\n            navigate('/leaderboardAdmin');\n          }}>Leaderboard Administration</Button>\n            \n        </div>\n    );\n}","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { getStorage, ref, uploadBytes } from \"firebase/storage\";\nimport Button from 'react-bootstrap/Button';\n\n\nexport default class BadgeAdmin extends React.Component {\n  state = {\n    data: [],\n    name: '',\n    requirements: '',\n    pic_url: '',\n    badgeClassID: ''\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:8081/badges`)\n      .then(res => {\n        console.log(res.data.length);\n       \n        this.setState({ data: res.data });\n      })\n  }\n\n  handleName = event => {\n    this.setState({ name: event.target.value });\n  }\n\n  handleRequirement = event => {\n    this.setState({ requirements: event.target.value });\n  }\n\n  handleBadgeClassID = event => {\n    this.setState({ badgeClassID: event.target.value });\n  }\n\n  handleURL = event => {\n    this.setState({ pic_url: event.target.files[0], });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    //data extraction (combining data)\n    // file upload\n    const storage = getStorage();\n    const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\n    var file = this.state.pic_url;\n    // Create file metadata including the content type\n    /** @type {any} */\n    const metadata = {\n      contentType: this.state.pic_url.type,\n    };\n    console.log(\"yes\");\n    uploadBytes(storageRef, file, metadata);\n    const badge = {\n      name: this.state.name,\n      requirements: this.state.requirements,\n      pic_url: this.state.pic_url.name,\n      badgeClassID: this.state.badgeClassID\n    };\n    console.log(\"BADGEEEE\" + JSON.stringify(badge))\n\n    const config = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    }\n\n    axios.post('http://localhost:8081/newBadge', badge, config)\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      })\n  }\n\n  render() {\n    const data = this.state.data;\n    return (\n      <div>\n        <h1>Badges Administration</h1>\n        <div className=\"viewBadges\">\n          <div>\n            <h2>Add Badge</h2>\n            <form onSubmit={this.handleSubmit}>\n              <label>\n                Badge Name:\n            <input type=\"text\" name=\"name\" onChange={this.handleName} />\n              </label>\n              <label>\n                Badge Requirement:\n            <input type=\"text\" name=\"requirements\" onChange={this.handleRequirement} />\n              </label>\n              <label>\n                Pic URL:\n            <input type=\"file\" name=\"pic_url\" onChange={this.handleURL} />\n              </label>\n              {/* Please remember to change and do JOIN table for it to not display as ID */}\n              <label>\n                Badge Class ID:\n            <input type=\"text\" name=\"badgeClassID\" onChange={this.handleBadgeClassID} />\n              </label>\n              <button type=\"submit\">Add</button>\n            </form>\n          </div>\n          <h2>View Badges</h2>\n          {data && data.map(item =>\n            <tr key={item.badgeID}>\n              <td>{item.name}</td>\n              <td>{item.requirements}</td>\n              <td>{item.badgeClassID}</td>\n              <td><img src={'../images/' + item.pic_url} style={{ height: 200, width: 200 }}></img></td>\n              <td>\n                <Link to={`/EditBadge?id=${item.badgeID}`}>\n                  <Button>Edit</Button>\n                </Link>\n              </td>            </tr>\n          )}\n        </div>\n      </div>\n    )\n  }\n}","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nexport default class RewardAdmin extends React.Component {\n    state = {\n        data: []\n    }\n\n    componentDidMount(){\n        axios.get('http://localhost:8081/api/rewards')\n        .then(res => {\n            this.setState({ data : res.data });\n        })\n    }\n\n    \n    render() {\n        const data = this.state.data ;\n        return (\n            <div className=\"viewReward\">\n            <h3 className=\"p-3 text-center\">React - Display a list of items</h3>\n            <Link to=\"/uploadReward\">\n                <Button>Upload Reward</Button>\n            </Link>\n            <table className=\"table table-striped table-bordered\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Points</th>\n                        <th>Picture</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data && data.map(item =>\n                        <tr key={item.rewardID}>\n                            <td>{item.rewardName}</td>\n                            <td>{item.ptsRequired}</td>\n                            <td><img src={'../images/'+ item.url} style={{height: 200, width: 200}}></img></td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n          </div>\n        )\n    }\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nconst FormData = require('form-data');\nconst fs = require('fs');\n\nexport default class UploadReward extends React.Component {\n  state = {\n    rewardName: [],\n    ptsRequired:[],\n    rewardPoints: '',\n    redirectToReferrer: false,\n  }\n  \n  componentDidMount(){\n    axios.get('http://localhost:8081/rewards/' + window.location.href.split('/')[3].slice(14))\n    .then(res => {\n       console.log(\"the data  name of reward\"+res.data[0].rewardName)\n       const rewardName=res.data[0].rewardName;\n       const ptsRequired=res.data[0].ptsRequired;\n\n       this.setState({rewardName});\n       this.setState({ptsRequired})\n\n    })\n    \n}\n\n\n  handleName = event => {\n    this.setState({ rewardName : event.target.value, });\n  }\n\n  handlePoints = event => {\n    this.setState({ rewardPoints : event.target.value, });\n  }\n\n  handleURL = event => {\n    this.setState({ file : event.target.files[0], });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const reward = {\n        ptsRequired : this.state.rewardPoints\n    }\n  \n    console.log(\"reward : \" + JSON.stringify(reward));\n\n    const config = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    }\n\n    \n    \n    axios.put('http://localhost:8081/rewards/' +  window.location.href.split('/')[3].slice(14),  reward, config)\n    .then(res => {\n      console.log(res);\n      console.log(res.data);\n    })\n}\n\n\nhandleDelete = event => {\n\n    this.setState({\n        redirectToReferrer: true\n\n    })\n  \n\n    axios.delete('http://localhost:8081/rewards/' +  window.location.href.split('/')[3].slice(14))\n    .then(res => {\n      console.log(res);\n      console.log(res.data);\n\n    })\n\n\n\n}\n  render() {\n    const redirectToReferrer = this.state.redirectToReferrer;\n    if (redirectToReferrer === true) {\n        <Link to=\"/rewardsAdmin\" />\n    }\n\n  return (\n      <div className=\"viewReward\">\n      <h3 className=\"p-3 text-center\">React - Display a list of items</h3>\n   \n      <table className=\"table table-striped table-bordered\">\n          <thead>\n              <tr>\n                  <th>Name</th>\n                  <th>Points</th>\n              </tr>\n          </thead>\n          <tbody>\n                  <tr>\n                      <td>{this.state.rewardName}</td>\n                      <td>{this.state.ptsRequired}</td>\n                  </tr>\n           \n          </tbody>\n      </table>\n\n      <h4>Would you like to change the points</h4>\n      <div className=\"uploadReward\">\n  <form onSubmit={this.handleSubmit}>\n    <label>\n      Points Required :\n      <input type=\"number\" name=\"ptsRequired\" onChange={this.handlePoints} />\n    </label>\n\n    <button type=\"submit\">Save Changes</button>\n  </form>\n\n  <form onSubmit={this.handleDelete}>\n\n    <button  type=\"submit\">Delete</button>\n  </form>\n</div>\n    </div>\n  )\n}\n}\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Button, Container, Row, Col, Glyphicon, Sidebar, Nav, NavItem, Card, ListGroup } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nimport { Progress } from 'antd';\nimport { Stepper, Step } from 'react-form-stepper';\nimport Slider from '@mui/material/Slider';\n\n\n\nimport Box from '@mui/material/Box';\n\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\n\nimport Typography from '@mui/material/Typography';\n\n\n\nimport '../styling.css'\n\n\n\n// const { Step } = Steps\n\nclass StudentDashboard extends React.Component {\n    state = {\n        data: [],\n        streaks: 0,\n        totalPts: [],\n        redeemedPts: [],\n        name: [],\n\n        progress: 0,\n\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:8081/students/topStudents/')\n            .then(res => {\n                this.setState({ data: res.data });\n            })\n\n        axios.get('http://localhost:8081/students/streaks/' + 2)\n            .then(res => {\n                console.log(\"number of streak \" + res.data[0].streaks)\n                const streaks = res.data[0].streaks;\n\n\n\n\n                this.setState({ streaks });\n\n                // let progress = 0;\n                // if (this.state.streaks === 1) {\n                //     progress += 20\n                //     this.setState({ progress: progress })\n                // }\n                // if (this.state.streaks === 2) {\n                //     progress += 40\n                //     this.setState({ progress: progress })\n                // }\n                // if (this.state.streaks === 3) {\n                //     progress += 60\n                //     this.setState({ progress: progress })\n                // }\n                // if (this.state.streaks === 4) {\n                //     progress += 80\n                //     this.setState({ progress: progress })\n                // }\n                // if (this.state.streaks === 5) {\n                //     progress += 100\n                //     this.setState({ progress: progress })\n                // }\n\n\n            })\n\n        axios.get('http://localhost:8081/students/points/' + 2)\n            .then(res => {\n                console.log(\"number of streak \" + res.data[0].totalPts)\n                console.log(\"number of streak \" + res.data[0].redeemedPts)\n                const totalPts = res.data[0].totalPts;\n                const redeemedPts = res.data[0].redeemedPts;\n                const name = res.data[0].name;\n\n                this.setState({ totalPts });\n\n                this.setState({ redeemedPts });\n\n                this.setState({ name });\n\n            })\n\n\n\n\n    }\n\n\n\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n\n    }\n\n\n\n    render() {\n        const data = this.state.data;\n        const { classes } = this.props;\n        return (\n\n\n            <Container className=\"toatalContainer\" fluid>\n\n                <Slider\n                    className={classes.root}\n                    aria-label=\"Temperature\"\n                    defaultValue={30}\n                    color=\"secondary\"\n                />\n\n                <Row xs={1} className=\"row\">\n                    <Col md={4} className=\"c1 column\">\n                        <h3 className=\"p-3 text-center\">Student dashboard</h3>\n\n                        <h4>{this.state.name}</h4>\n\n                        <Card className=\"mb-3 points\">\n                            <Card.Body>\n                                <Card.Title className=\"cardContext\">Total Points:</Card.Title>\n\n                                <Card.Text className=\"cardContext\">\n                                    {this.state.totalPts}\n\n                                </Card.Text>\n\n                            </Card.Body>\n\n                        </Card>\n\n                        <Card className=\"mb-3 points\">\n                            <Card.Body>\n                                <Card.Title className=\"cardContext\">Redeemable Points</Card.Title>\n\n                                <Card.Text className=\"cardContext\">\n                                    {this.state.redeemedPts}\n\n                                </Card.Text>\n\n                            </Card.Body>\n\n                        </Card>\n\n\n                        <div className=\"box\">\n\n\n\n\n                            <hr />\n\n\n                            <Nav className=\"col-md-12 d-none d-md-block sidebar navCustomise sideNavItem\"\n                                activeKey=\"/home\"\n                                onSelect={selectedKey => alert(`selected ${selectedKey}`)}\n                            >\n\n                                <div className=\"sidebar-sticky\"></div>\n                                <Nav.Item className=\"navItem \" activeClassName=\"active\" >\n                                    <Nav.Link className=\"linkCustomise\" href=\"/home\">Dashboard</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item className=\"navItem\">\n                                    <Nav.Link className=\"linkCustomise\" eventKey=\"link-1\">Reward</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item className=\"navItem\">\n                                    <Nav.Link className=\"linkCustomise\" eventKey=\"link-2\">Maze</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item className=\"navItem\">\n                                    <Nav.Link className=\"linkCustomise\" eventKey=\"link-2\">Badges</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item className=\"navItem\">\n                                    <Nav.Link className=\"linkCustomise\" eventKey=\"link-2\">Streak</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n\n\n                        </div>\n                    </Col>\n                    <Col md={4} className=\"box2 column\">\n\n                        <h4>Assignments To Do:</h4>\n\n                        <Card className=\"mt-3\">\n                            <Card.Header>Math</Card.Header>\n                            <Card.Body>\n                                <Card.Title>Integration Homework 2</Card.Title>\n                                <Card.Text>\n                                    Learn how to do Integration\n                                </Card.Text>\n                                <Button variant=\"danger\">Do Now</Button>\n                            </Card.Body>\n                        </Card>\n\n                        <Card className=\"mt-3\">\n                            <Card.Header>Math</Card.Header>\n                            <Card.Body>\n                                <Card.Title>Integration Homework 3</Card.Title>\n                                <Card.Text>\n                                    Learn how to do Integration part 3\n                                </Card.Text>\n                                <Button variant=\"danger\">Do Now</Button>\n                            </Card.Body>\n                        </Card>\n\n\n                        <Card className=\"mt-3\">\n                            <Card.Header>Math</Card.Header>\n                            <Card.Body>\n                                <Card.Title>Integration Homework 2</Card.Title>\n                                <Card.Text>\n                                    Learn how to do Integration\n                                </Card.Text>\n                                <Button variant=\"danger\">Do Now</Button>\n                            </Card.Body>\n                        </Card>\n\n\n                    </Col>\n                    <Col md={3} className=\" box3 column\">\n                        <Col>\n                            <input type=\"range\"\n                                value={this.state.streaks}\n                                width=\"80px\"\n\n                                max=\"5\"\n                                min=\"0\"\n                                orientation=\"vertical\"\n                                reversed={true}\n                                //  disabled=\"disabled\"\n\n                                className=\"custom-range\" id=\"customRange1\" />\n\n\n\n                            <h5>{this.state.streaks} </h5>\n\n\n\n                            {/* <StreakSlider/> */}\n\n                        </Col>\n\n                        <Card className=\"leaderBoardBox\"  >\n                            <Card.Header className=\"leaderBoardTitle\">\n                                Leaderboard\n                            </Card.Header>\n                            <Card.Body>\n                                {data && data.map(item =>\n                                    <Card className=\"m-2 \" style={{ width: '16rem' }} key={item.studentID}>\n\n                                        <ListGroup variant=\"flush\" >\n\n                                            <ListGroup.Item  >\n                                                <Row className=\"leaderBoardItem\">\n                                                    <Col>\n                                                        {item.name}\n                                                    </Col>\n                                                    <Col>\n                                                        {item.totalPts}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                        </ListGroup>\n\n                                    </Card>\n                                )}\n\n                            </Card.Body>\n                        </Card>\n\n\n                    </Col>\n                </Row>\n\n\n                {/* <input type=\"range\" className=\"custom-range\" id=\"customRange1\" /> */}\n            </Container>\n\n\n\n\n\n\n\n            //                     <Progress\n            //                         type=\"line\"\n            //                         height='30px'\n            //                         strokeColor={{\n            //                             '0%': '#f0bb31',\n            //                             '50%': '#e39c4f',\n            //                             '100%': '#db8427',\n            //                         }}\n\n            //                         percent={this.state.progress}\n            //                         status=\"active\"\n            //                     >\n\n            //                     </Progress>\n\n\n\n\n\n\n\n\n\n\n\n\n        )\n    }\n}\n\n// function RenderComponent(props) {\n//     return (\n//         <Slider\n//             aria-label=\"Streaks\"\n//             defaultValue={this.state.slider1}\n//             step={10}\n//             valueLabelDisplay=\"auto\"\n//             marks={30}\n//         />\n//     );\n// }\n\n\nStudentDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n  export default (StudentDashboard);","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport SignIn from './components/SignIn';\nimport TeacherAdministration from './components/TeacherHome';\nimport BadgeAdmin from './components/BadgeAdmin';\nimport RewardAdmin from './components/RewardAdmin';\n// import UploadReward from './components/UploadReward';\nimport RewardAdminEdit from './components/RewardAdminEdit';\n// import TeacherViewStudentProgress from './components/TeacherViewStudentProgress'\nimport StudentDashboard from './components/StudentDashboard';\n\nimport {\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { auth } from './firebase.js';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  const [user, setUser] = useState({});\n  onAuthStateChanged(auth, (currentUser) => {\n    try {\n      setUser(currentUser);\n      console.log(currentUser);\n    } catch (error) {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n    }\n  });\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/teacherAdmin\" element={<TeacherAdministration/>}></Route>\n        <Route path=\"/badgesAdmin\" element={<BadgeAdmin/>}></Route>\n        <Route path=\"/rewardsAdmin\" element={<RewardAdmin/>}></Route>\n        <Route path=\"/rewardsAdminEdit\" element={<RewardAdminEdit/>}></Route>\n        {/* <Route path=\"/uploadReward\" element={<UploadReward/>}></Route> */}\n        <Route path=\"/editReward\" element={<RewardAdminEdit/>}></Route>\n        {/* <Route path=\"/teacherViewStudentProgress\" element={<TeacherViewStudentProgress/>}></Route> */}\n        <Route path=\"/studentDashBoard\" element={<StudentDashboard/>}></Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}