{"version":3,"sources":["logo.svg","firebase.js","components/SignIn.js","components/StudentDashboard.js","components/TeacherHome.js","components/BadgeAdmin.js","components/RewardAdmin.js","components/UploadReward.js","components/MazeAdmin.js","components/EditMazeContent.js","components/EditBadge.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","SignIn","useState","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","loginEmail","setLoginEmail","loginPassword","setLoginPassword","email","setEmail","navigate","useNavigate","register","a","createUserWithEmailAndPassword","user","config","headers","dateData","JSON","stringify","metadata","createdAt","parseInt","parse","personalDetails","name","Uid","uid","streaks","totalPts","mazeLvl","redeemedPts","type","lastLogin","axios","post","then","res","console","log","data","errorCode","code","errorMessage","message","login","signInWithEmailAndPassword","get","forgotPassword","sendPasswordResetEmail","className","placeholder","onChange","event","target","value","onClick","marks","label","logout","signOut","window","location","replace","StudentDashboard","state","fullStreaks","showStreak","lastLoginData","currentLogin","Date","getTime","handleChange","e","setState","id","diffTime","lastLog","put","this","classes","props","Container","fluid","Row","xs","Col","md","Card","Body","Title","Text","Nav","activeKey","Item","activeClassName","Link","href","eventKey","Header","Button","variant","Slider","root","step","min","max","valueLabelDisplay","map","item","style","width","ListGroup","studentID","React","Component","withStyles","theme","marginTop","marginLeft","TeacherAdministration","BadgeAdmin","class","requirements","pic_url","badgeClassID","handleName","handleRequirement","handleURL","files","handleSubmit","preventDefault","storage","getStorage","storageRef","ref","file","contentType","uploadBytes","getDownloadURL","downloadURL","bID","document","getElementById","badge","reload","length","data2","fontFamily","color","onSubmit","handleBadgeClassID","classDescription","item2","src","height","alt","to","badgeID","RewardAdmin","rewardName","ptsRequired","url","rewardID","FormData","require","UploadReward","rewardPoints","handlePoints","reward","append","points","EditMazeContent","mazeContent","lvl","split","slice","EditBadge","App","setUser","onAuthStateChanged","currentUser","error","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.e35ee995.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAFY9L3JNCYGf5APtJM9QallQ8TLXvFWDU\",\n  authDomain: \"quizment-ae4a6.firebaseapp.com\",\n  projectId: \"quizment-ae4a6\",\n  storageBucket: \"quizment-ae4a6.appspot.com\",\n  messagingSenderId: \"774729961857\",\n  appId: \"1:774729961857:web:87e44344039ae5dd875880\",\n  measurementId: \"G-4GXXKNTKV9\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\n//authentication\nconst auth = getAuth(firebaseApp);\n\n// export\nexport { auth };\n\n","import '../SignIn.css';\nimport {\n    createUserWithEmailAndPassword,\n    sendPasswordResetEmail,\n    signInWithEmailAndPassword\n} from \"firebase/auth\";\nimport { auth } from '../firebase.js';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n\nconst SignIn = () => {\n    const [registerEmail, setRegisterEmail] = useState(\"\");\n    const [registerPassword, setRegisterPassword] = useState(\"\");\n    const [loginEmail, setLoginEmail] = useState(\"\");\n    const [loginPassword, setLoginPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    let navigate = useNavigate();\n\n    const register = async () => {\n        try {\n            const user = await createUserWithEmailAndPassword(\n                auth,\n                registerEmail,\n                registerPassword\n            );\n            const config = {\n                headers: {\n                    'content-type': 'application/json'\n                }\n            }\n\n            var dateData = JSON.stringify(user.user.metadata.createdAt);\n            dateData = parseInt(JSON.parse(dateData));\n            const personalDetails = {\n                name: JSON.parse(JSON.stringify(user.user.email)),\n                Uid: JSON.parse(JSON.stringify(user.user.uid)),\n                streaks: 0,\n                totalPts: 0,\n                mazeLvl: 1,\n                redeemedPts: 0,\n                type: 1,\n                lastLogin: dateData\n            };\n            axios.post('http://localhost:8081/api/newStudent', personalDetails, config)\n                .then(res => {\n                    console.log(res);\n                    console.log(res.data);\n                    navigate('/studentDashboard');\n                })\n        } catch (error) {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            console.log(JSON.stringify(errorCode));\n            console.log(JSON.stringify(errorMessage));\n        }\n    };\n\n    const login = async () => {\n        try {\n            const user = await signInWithEmailAndPassword(\n                auth,\n                loginEmail,\n                loginPassword\n            );\n            const config = {\n                headers: {\n                    'content-type': 'application/json'\n                }\n            }\n            var uid = JSON.parse(JSON.stringify(user.user.uid));\n            axios.get(`http://localhost:8081/api/userType/` + uid, config)\n                .then(res => {\n                    if (res.data.type == 1) {\n                        navigate('/studentDashboard');\n                    } else if (res.data.type == 2) {\n                        navigate('/teacherAdmin');\n                    } else {\n                        navigate('/');\n                    }\n                })\n        } catch (error) {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            console.log(JSON.stringify(errorCode));\n            console.log(JSON.stringify(errorMessage));\n        }\n    };\n\n    const forgotPassword = async () => {\n        try {\n            const user = await sendPasswordResetEmail(\n                auth,\n                email);\n        } catch(error) {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            console.log(JSON.stringify(errorCode));\n            console.log(JSON.stringify(errorMessage));\n        }\n    };\n\n    return (\n        <div className=\"signin\">\n            <h1>Sign in</h1>\n            <input placeholder=\"email\" type=\"email\" onChange={(event) => {\n                setLoginEmail(event.target.value);\n            }} />\n            <input placeholder=\"password\" type=\"password\" onChange={(event) => {\n                setLoginPassword(event.target.value);\n            }} />\n            <button onClick={login}> Sign In</button>\n\n            <h1>Sign up</h1>\n            <input placeholder=\"email\" type=\"email\" onChange={(event) => {\n                setRegisterEmail(event.target.value);\n            }} />\n            <input placeholder=\"password\" type=\"password\" onChange={(event) => {\n                setRegisterPassword(event.target.value);\n            }} />\n            <button onClick={register}>Sign Up</button>\n\n            <h1>Forgot Password</h1>\n            <input placeholder=\"email\" type=\"email\" onChange={(event) => {\n                setEmail(event.target.value);\n            }} />\n            <button onClick={forgotPassword}>Forgot Password</button>\n        </div>\n    )\n}\nexport default SignIn;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { Button, Container, Row, Col, Sidebar, Nav, NavItem, Card, ListGroup } from 'react-bootstrap';\nimport { signOut } from \"firebase/auth\";\nimport { auth } from '../firebase.js';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport Slider from '@material-ui/core/Slider';\nimport '../styling.css'\n\nconst styles = theme => ({\n    root: {\n        // paddingTop: '100px',\n        marginTop: \"60px\",\n        width: \"250px\",\n        marginLeft: \"40px\",\n    },\n});\n\nconst marks = [\n    {\n        value: 0,\n        label: '',\n    },\n    {\n        value: 1,\n        label: '',\n    },\n    {\n        value: 2,\n        label: '',\n    },\n    {\n        value: 3,\n        label: '',\n    },\n    {\n        value: 4,\n        label: '',\n    },\n    {\n        value: 5,\n        label: '',\n    }\n];\n\nconst logout = async () => {\n    await signOut(auth);\n    window.location.replace(\"http://localhost:8081/quizment\");\n};\n\n\nclass StudentDashboard extends React.Component {\n    state = {\n        data: [],\n        streaks: 0,\n        fullStreaks: 0,\n        totalPts: [],\n        redeemedPts: [],\n        name: [],\n        showStreak: false,\n        lastLoginData: [],\n        currentLogin: new Date().getTime(),\n        Uid: 0\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:8081/api/students/topStudents/')\n            .then(res => {\n                this.setState({ data: res.data });\n            })\n\n        axios.get('http://localhost:8081/api/students/streaks/' + 4)\n            .then(res => {\n                console.log(\"number of streak \" + res.data[0].streaks)\n                const streaks = res.data[0].streaks;\n                this.setState({ streaks });\n            })\n\n        axios.get('http://localhost:8081/api/students/points/' + 4)\n            .then(res => {\n                console.log(\"number of streak \" + res.data[0].totalPts)\n                console.log(\"number of streak \" + res.data[0].redeemedPts)\n                const totalPts = res.data[0].totalPts;\n                const redeemedPts = res.data[0].redeemedPts;\n                const name = res.data[0].name;\n                this.setState({ totalPts });\n                this.setState({ redeemedPts });\n                this.setState({ name });\n            })\n\n        axios.get('http://localhost:8081/api/students/lastLogin/' + 4)\n            .then(res => {\n                console.log(\"LAST LOGIN \" + res.data[0].lastLogin)\n                this.setState({ lastLoginData: res.data[0].lastLogin })\n                console.log(\"Current login stored: \" + this.state.currentLogin)\n                console.log(\"Last login stored: \" + this.state.lastLoginData)\n                var diffTime = this.state.currentLogin - this.state.lastLoginData;\n                var streak=this.state.streaks;\n                const config = {\n                    headers: {\n                        'content-type': 'application/json'\n                    }\n                }\n                const lastLog = {\n                    lastLogin: this.state.currentLogin\n                }\n                if (diffTime >= 28800000 && diffTime <= 86400000) {\n                    console.log(\"Yassss\");\n                    // AXIOS PUT STREAK + NEW LOGIN TIME\n                    axios.put('http://localhost:8081/api/students/lastLoginStreak/' + 4, lastLog, config)\n                    .then(res => {\n                        console.log(\"RESULTS: \" + res);\n                        console.log(res);\n                        console.log(\"RESULT: \" + res.data);\n                    })\n\n                    axios.put('http://localhost:8081/api/students/updatePoints/' + 4)\n                    .then(res => {\n                        console.log(\"RESULTS: \" + res);\n                        console.log(res);\n                        console.log(\"RESULT: \" + res.data);\n                    })\n                    \n                } else if (diffTime>86400000) {\n                    console.log(\"harooo\");\n                    axios.put('http://localhost:8081/api/students/lastLoginLostStreak/' + 4, lastLog, config)\n                        .then(res => {\n                            console.log(\"RESULTS: \" + res);\n                            console.log(res);\n                            console.log(\"RESULT: \" + res.data);\n                        })\n\n                } else {\n                    console.log(\"BYE\");\n                    axios.put('http://localhost:8081/api/students/lastLogin/' + 4, lastLog, config)\n                        .then(res => {\n                            console.log(\"RESULTS: \" + res);\n                            console.log(res);\n                            console.log(\"RESULT: \" + res.data);\n                        })\n                }\n            })\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    render() {\n        const data = this.state.data;\n        const { classes } = this.props;\n        return (\n\n            <Container className=\"toatalContainer\" fluid>\n                <Row xs={1} className=\"row\">\n                    <Col md={3} className=\"c1 column\">\n                        <h4 className=\"mt-5 mb-5\">{this.state.name}</h4>\n                        <Card className=\"mb-3 points\">\n                            <Card.Body>\n                                <Card.Title className=\"cardContext\">Total Points:</Card.Title>\n                                <Card.Text className=\"cardContext\">\n                                    {this.state.totalPts}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                        <Card className=\"mb-3 points\">\n                            <Card.Body>\n                                <Card.Title className=\"cardContext\">Redeemable Points</Card.Title>\n                                <Card.Text className=\"cardContext\">\n                                    {this.state.redeemedPts}\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                        <div className=\"box\">\n                            <hr />\n                            <Nav className=\"col-md-12 d-none d-md-block sidebar navCustomise sideNavItem\"\n                                activeKey=\"/home\"\n                                // onSelect={selectedKey => alert(`selected ${selectedKey}`)}\n                            >\n                                <div className=\"sidebar-sticky\"></div>\n                                <Nav.Item className=\"navItem \" activeClassName=\"active\" >\n                                    <Nav.Link className=\"linkCustomise\" href=\"/quizment/studentDashboard\">Dashboard</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item className=\"navItem\">\n                                    <Nav.Link className=\"linkCustomise\" eventKey=\"link-1\">Reward</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item className=\"navItem\">\n                                    <Nav.Link className=\"linkCustomise\" eventKey=\"link-2\">Maze</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item className=\"navItem\">\n                                    <Nav.Link className=\"linkCustomise\" eventKey=\"link-2\">Badges</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item className=\"navItem\">\n                                    <Nav.Link className=\"linkCustomise\" eventKey=\"link-2\">Streak</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item  onClick={logout} className=\"navItem\">\n                                    <Nav.Link className=\"linkCustomise\" eventKey=\"link-2\">Sign Out</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </div>\n                    </Col>\n                    <Col md={4} className=\"box2 column\">\n                        <h4>Assignments To Do:</h4>\n                        <Card className=\"mt-3\">\n                            <Card.Header>Math</Card.Header>\n                            <Card.Body>\n                                <Card.Title>Integration Homework 2</Card.Title>\n                                <Card.Text>\n                                    Learn how to do Integration\n                                </Card.Text>\n                                <Button variant=\"danger\">Do Now</Button>\n                            </Card.Body>\n                        </Card>\n                        <Card className=\"mt-3\">\n                            <Card.Header>Math</Card.Header>\n                            <Card.Body>\n                                <Card.Title>Integration Homework 3</Card.Title>\n                                <Card.Text>\n                                    Learn how to do Integration part 3\n                                </Card.Text>\n                                <Button variant=\"danger\">Do Now</Button>\n                            </Card.Body>\n                        </Card>\n                        <Card className=\"mt-3\">\n                            <Card.Header>Math</Card.Header>\n                            <Card.Body>\n                                <Card.Title>Integration Homework 2</Card.Title>\n                                <Card.Text>\n                                    Learn how to do Integration\n                                </Card.Text>\n                                <Button variant=\"danger\">Do Now</Button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md={3} className=\" box3 column\">\n                        <Col>\n                            <Row className=\"sliderStreak\">\n                                <Col>\n                                    <Slider\n                                        className={classes.root}\n                                        aria-label=\"Always visible\"\n                                        value={this.state.streaks}\n                                        step={1}\n                                        min={0}\n                                        max={5}\n                                        marks={marks}\n                                        valueLabelDisplay=\"off\"\n                                    />\n                                </Col>\n                                <Col className=\"streakNum\">\n                                    <h6>Streaks: {this.state.streaks} </h6>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Card className=\"leaderBoardBox\"  >\n                            <Card.Header className=\"leaderBoardTitle\">\n                                Leaderboard\n                            </Card.Header>\n                            <Card.Body>\n                                {data && data.map(item =>\n                                    <Card className=\"m-2 \" style={{ width: '16rem' }} key={item.studentID}>\n                                        <ListGroup variant=\"flush\" >\n                                            <ListGroup.Item>\n                                                <Row className=\"leaderBoardItem\">\n                                                    <Col>\n                                                        {item.name}\n                                                    </Col>\n                                                    <Col>\n                                                        {item.totalPts}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                )}\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nStudentDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(StudentDashboard);","import React from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\n// Rewards\n\nexport default function TeacherAdministration() {\n    let navigate = useNavigate();\n    return (\n        <div>\n            <h1>Teacher Administration</h1>\n            <Button onClick={() => {\n            navigate('/studentAdmin');\n          }}>Student Administration</Button>\n          <Button onClick={() => {\n            navigate('/rewardsAdmin');\n          }}>Rewards Administration</Button>\n            <Button onClick={() => {\n            navigate('/badgesAdmin');\n          }}>Badges Administration</Button>\n            <Button onClick={() => {\n            navigate('/mazeAdmin');\n          }}>Maze Administration</Button>\n          <Button onClick={() => {\n            navigate('/leaderboardAdmin');\n          }}>Leaderboard Administration</Button>\n            \n        </div>\n    );\n}","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport Button from 'react-bootstrap/Button';\nimport '../css/Table&Add.css';\n\n\nexport default class BadgeAdmin extends React.Component {\n  state = {\n    data: [],\n    class: [],\n    name: '',\n    requirements: '',\n    pic_url: '',\n    badgeClassID: ''\n  }\n\n  componentDidMount() {\n    axios.get(`https://ades-ca1-project.herokuapp.com/api/badges`)\n      .then(res => {\n        console.log(res.data.length);\n        this.setState({ data: res.data });\n      })\n\n    axios.get(`https://ades-ca1-project.herokuapp.com/api/badgeClass`)\n      .then(res => {\n        console.log(res.data.length);\n        this.setState({ class: res.data });\n      })\n  }\n\n\n  handleName = event => {\n    this.setState({ name: event.target.value });\n  }\n\n  handleRequirement = event => {\n    this.setState({ requirements: event.target.value });\n  }\n\n \n\n  handleURL = event => {\n    this.setState({ pic_url: event.target.files[0], });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    //data extraction (combining data)\n    // file upload\n    const storage = getStorage();\n    const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\n    var file = this.state.pic_url;\n    // Create file metadata including the content type\n    /** @type {any} */\n    const metadata = {\n      contentType: this.state.pic_url.type,\n    };\n   \n    uploadBytes(storageRef, file, metadata);\n\n    getDownloadURL(storageRef).then((downloadURL) => {\n      console.log('File available at', downloadURL);\n\n      var bcID = document.getElementById(\"dropDown\");\n      var bID = bcID.value;\n      var badgeClassID = parseInt(bID);\n      console.log(badgeClassID + \"classBADGE\")\n      const badge = {\n        name: this.state.name,\n        requirements: this.state.requirements,\n        pic_url: downloadURL,\n        badgeClassID: badgeClassID\n      };\n      console.log(\"BADGEEEE\" + JSON.stringify(badge))\n\n      const config = {\n        headers: {\n          'content-type': 'application/json'\n        }\n      }\n      axios.post('https://ades-ca1-project.herokuapp.com/api/newBadge', badge, config)\n        .then(res => {\n          console.log(res);\n          console.log(res.data);\n          window.location.reload();\n        })\n    });\n  }\n\n  render() {\n    const data = this.state.data;\n    const data2 = this.state.class;\n    return (\n\n      <div id=\"body\">\n        <div id=\"div\">\n          <h1 style={{ fontFamily: \"sans-serif \", color: 'blue' }}>Badges Administration</h1>\n          <div className=\"viewBadges\">\n            <div id=\"divForm\">\n              <h2 id=\"add\">Add Badge</h2>\n              <form onSubmit={this.handleSubmit} id=\"form\" >\n                <label>\n                  Badge Name:\n                  <input type=\"text\" name=\"name\" onChange={this.handleName} />\n                </label>\n                <br/>\n                <label>\n                  Badge Requirement:\n                  <input type=\"text\" name=\"requirements\" onChange={this.handleRequirement} />\n                </label>\n                <br/>\n                <label>\n                  Pic URL:\n                  <input type=\"file\" name=\"pic_url\" onChange={this.handleURL} />\n                </label>\n                {/* Please remember to change and do JOIN table for it to not display as ID */}\n                <br/>\n                <label>\n                  Badge Class ID:\n                  <select name=\"badgeClassID\" onChange={this.handleBadgeClassID} id=\"dropDown\">\n                    <option value=\"1\">Air</option>\n                    <option value=\"2\">Water</option>\n                    <option value=\"3\">Fire</option>\n                    <option value=\"4\">Geo</option>\n                  </select>\n                  {/* <input type=\"text\" name=\"badgeClassID\" onChange={this.handleBadgeClassID} /> */}\n                </label>\n                <button  type=\"submit\">Add</button>\n              </form>\n            </div>\n\n            <div> <div>\n              <h2>Badge Class</h2>\n              <table class=\"table\">\n                <tr>\n                  <th>Class Name</th>\n                  <th>Describtion </th>\n\n                </tr>\n                {data2 && data2.map(item =>\n                  <tr id='tableRow' class=\"spaceUnder\">\n                    <td>{item.className}</td>\n                    <td>{item.classDescription}</td>\n\n                  </tr>\n                )}\n              </table>\n            </div></div>\n            <div>\n              <h2>View Badges</h2>\n              <table class=\"table\">\n                <tr>\n                  <th>Badge Name</th>\n                  <th>Requirements</th>\n                  <th>badgeClass</th>\n                  <th>Picture</th>\n                </tr>\n                {data && data.map(item2 =>\n                  <tr key={item2.badgeID} id='tableRow' class=\"spaceUnder\">\n                    <td>{item2.name}</td>\n                    <td>{item2.requirements}</td>\n                    <td>{item2.className}</td>\n                    <td><img src={item2.pic_url} style={{ height: 200, width: 200 }} alt=\"\"></img></td>\n                    <td><Link to={`/EditBadge?id=${item2.badgeID}`}>\n                      <Button>Edit</Button>\n                    </Link>\n                    </td>\n                  </tr>\n                )}\n              </table>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nexport default class RewardAdmin extends React.Component {\n    state = {\n        data: []\n    }\n\n    componentDidMount(){\n        axios.get('https://ades-ca1-project.herokuapp.com/api/rewards')\n        .then(res => {\n            this.setState({ data : res.data });\n        })\n    }\n\n    \n    render() {\n        const data = this.state.data ;\n        return (\n            <div className=\"viewReward\">\n            <h3 className=\"p-3 text-center\">React - Display a list of items</h3>\n            <Link to=\"/uploadReward\">\n                <Button>Upload Reward</Button>\n            </Link>\n            <table className=\"table table-striped table-bordered\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Points</th>\n                        <th>Picture</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data && data.map(item =>\n                        <tr key={item.rewardID}>\n                            <td>{item.rewardName}</td>\n                            <td>{item.ptsRequired}</td>\n                            <td><img src={'../images/'+ item.url} style={{height: 200, width: 200}}></img></td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n          </div>\n        )\n    }\n}","import React from 'react';\nimport axios from 'axios';\nconst FormData = require('form-data');\nconst fs = require('fs');\n\nexport default class UploadReward extends React.Component {\n    state = {\n        rewardName: '',\n        rewardPoints: '',\n        file: '',\n    }\n\n    handleName = event => {\n        this.setState({ rewardName: event.target.value, });\n    }\n\n    handlePoints = event => {\n        this.setState({ rewardPoints: event.target.value, });\n    }\n\n    handleURL = event => {\n        this.setState({ file: event.target.files[0], });\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const reward = new FormData();\n        reward.append('myImage', this.state.file);\n        reward.append('rewardName', this.state.rewardName);\n        reward.append('ptsRequired', this.state.rewardPoints)\n\n        console.log(\"reward : \" + reward);\n\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n\n        axios.post('https://ades-ca1-project.herokuapp.com/api/rewards', reward, config)\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n            })\n    }\n    render() {\n        return (\n            <div className=\"uploadReward\">\n                <h1>Upload Reward</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Reward Name :\n            <input type=\"text\" name=\"rewardName\" onChange={this.handleName} />\n                    </label>\n                    <label>\n                        Points Required :\n            <input type=\"number\" name=\"ptsRequired\" onChange={this.handlePoints} />\n                    </label>\n                    <label>\n                        Picture URL :\n            <input type=\"file\" name=\"myImage\" onChange={this.handleURL} />\n                    </label>\n                    <button type=\"submit\">Add</button>\n                </form>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport '../css/Table&Add.css';\nexport default class RewardAdmin extends React.Component {\n\n    state = {\n        data: []\n    }\n\n    componentDidMount() {\n        axios.get('https://ades-ca1-project.herokuapp.com/api/mazeContent')\n            .then(res => {\n                this.setState({ data: res.data });\n            })\n    }\n\n    render() {\n        const data = this.state.data;\n        return (\n            <div id=\"body\">\n                <div id=\"div\">\n                    <div className=\"viewMazeLvl\">\n                        <h3 className=\"p-3 text-center\">Map of Maze Content</h3>\n\n                        <table className=\"table table-striped table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Maze Level</th>\n                                    <th>Points</th>\n                                </tr>\n                            </thead>\n\n                            {data && data.map(item =>\n                                <tr id='tableRow' class=\"spaceUnder\">\n                                    <td>{item.mazeLvl}</td>\n                                    <td>{item.points}</td>\n                                    <td>\n                                        <Link to={`/EditMazeContent?lvl=${item.mazeLvl}`}>\n                                            <Button>Edit</Button>\n                                        </Link>\n                                    </td>\n\n                                </tr>\n                            )}\n\n                        </table>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport axios from 'axios';\n\n\nexport default class EditMazeContent extends React.Component {\n\n    state = {\n        points: ''\n    }\n\n    handlePoints = event => {\n        this.setState({ points: event.target.value, });\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        const mazeContent = {\n            points: this.state.points\n        };\n        console.log(\"MAZE____\" + JSON.stringify(mazeContent))\n\n        const config = {\n            headers: {\n                'content-type': 'application/json'\n            }\n        }\n        const lvl = window.location.href.split('/')[3].slice(20);\n        const baseUrl = \"https://ades-ca1-project.herokuapp.com/api\";\n\n\n        axios.put(`${baseUrl}/mazeContent/${lvl}`, mazeContent, config)\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n            })\n    }\n    render() {\n        const lvl = window.location.href.split('/')[3].slice(20);\n        return (\n            <div id=\"bodyEdit\">\n                <div id=\"divEdit\">\n                    <div className=\"editReward\">\n                        <h1>Edit Points on Level {lvl}</h1>\n                        <form onSubmit={this.handleSubmit} id=\"formEdit\">\n                            {/* <label>\n                         :\n            <input type=\"text\" name=\"mazeLvl\" onChange={this.handleLvl} />\n                    </label> */}\n                            <label>\n                                Points Required :\n            <input type=\"number\" name=\"points\" onChange={this.handlePoints} />\n                            </label>\n\n                            <button type=\"submit\">Update</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport axios from 'axios';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport '../css/badgemazeEdit.css';\n\n\nexport default class EditBadge extends React.Component {\n\n    state = {\n        data: [],\n        name: '',\n        requirements: '',\n        pic_url: '',\n        badgeClassID: ''\n    }\n\n\n\n    handleName = event => {\n        this.setState({ name: event.target.value });\n    }\n\n    handleRequirement = event => {\n        this.setState({ requirements: event.target.value });\n    }\n\n    handleURL = event => {\n        this.setState({ pic_url: event.target.files[0], });\n    }\n\n    handleBadgeClassID = event => {\n        this.setState({ badgeClassID: event.target.value });\n    }\n\n\n    handleSubmit = event => {\n        event.preventDefault();\n        // file upload\n        const storage = getStorage();\n        const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\n        var file = this.state.pic_url;\n        // Create file metadata including the content type\n        /** @type {any} */\n        const metadata = {\n            contentType: this.state.pic_url.type,\n        };\n        \n        uploadBytes(storageRef, file, metadata);\n\n        getDownloadURL(storageRef).then((downloadURL) => {\n            console.log('File available at', downloadURL);\n\n            var bcID = document.getElementById(\"dropDown\");\n            var bID = bcID.value;\n            var badgeClassID = parseInt(bID);\n\n            const badge = {\n                name: this.state.name,\n                requirements: this.state.requirements,\n                pic_url: downloadURL,\n                badgeClassID: badgeClassID\n            };\n\n            console.log(\"BADGEEEE\" + JSON.stringify(badge))\n\n            const config = {\n                headers: {\n                    'content-type': 'application/json'\n                }\n            }\n\n            const badgeID = window.location.href.split('/')[3].slice(13);\n            const baseUrl = \"https://ades-ca1-project.herokuapp.com/api\";\n            console.log(badgeID);\n\n            axios.put(`${baseUrl}/editBadge/${badgeID}`, badge, config)\n                .then(res => {\n                    console.log(res);\n                    console.log(res.data);\n                    window.location.replace('https://ades-ca1-project.herokuapp.com/quizment/badgesAdmin')\n                })\n        });\n    }\n    render() {\n        return (\n            <div id=\"bodyEdit\">\n                <div id=\"divEdit\">\n                    <div className=\"editReward\">\n                        <h1>Edit Badge</h1>\n                        <form onSubmit={this.handleSubmit} id=\"formEdit\">\n                            <label class='label'>\n                                Badge Name:\n                                <input type=\"text\" name=\"name\" onChange={this.handleName} />\n                            </label>\n                            <br />\n                            <label class='label'>\n                                Badge Requirement:\n                                <input type=\"text\" name=\"requirements\" onChange={this.handleRequirement} />\n                            </label>\n                            <br />\n                            <label class='label'>\n                                Pic URL:\n                                <input type=\"file\" name=\"pic_url\" onChange={this.handleURL} />\n                            </label>\n                            <br />\n                            <label>\n                                Badge Class ID:\n                                <select name=\"badgeClassID\" onChange={this.handleBadgeClassID} id=\"dropDown\">\n                                    <option value=\"1\">Air</option>\n                                    <option value=\"2\">Water</option>\n                                    <option value=\"3\">Fire</option>\n                                    <option value=\"4\">Geo</option>\n                                </select>\n                                {/* <input type=\"text\" name=\"badgeClassID\" onChange={this.handleBadgeClassID} /> */}\n                            </label>\n                            <br />\n                            <button type=\"submit\">Add</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport SignIn from './components/SignIn';\nimport StudentDashboard from './components/StudentDashboard';\nimport TeacherAdministration from './components/TeacherHome';\nimport BadgeAdmin from './components/BadgeAdmin';\nimport RewardAdmin from './components/RewardAdmin';\nimport UploadReward from './components/UploadReward';\nimport MazeAdmin from './components/MazeAdmin';\nimport EditMaze from './components/EditMazeContent';\nimport EditBadge from './components/EditBadge';\nimport {\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { auth } from './firebase.js';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  const [user, setUser] = useState({});\n  onAuthStateChanged(auth, (currentUser) => {\n    try {\n      setUser(currentUser);\n    } catch (error) {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n    }\n  });\n\n  return (\n    // {user ? <Home />:<SignIn />}\n      <Routes>\n        <Route path=\"/\" element={<SignIn />}></Route>\n        <Route path=\"/studentDashboard\" element={<StudentDashboard />}></Route>\n        <Route path=\"/teacherAdmin\" element={<TeacherAdministration/>}></Route>\n        <Route path=\"/badgesAdmin\" element={<BadgeAdmin/>}></Route>\n        <Route path=\"/rewardsAdmin\" element={<RewardAdmin/>}></Route>\n        <Route path=\"/uploadReward\" element={<UploadReward/>}></Route>\n        <Route path=\"/mazeAdmin\" element={<MazeAdmin/>}></Route>\n        <Route path=\"/EditMazeContent\" element={<EditMaze/>}></Route>\n        <Route path=\"/EditBadge\" element={<EditBadge/>}></Route>\n      </Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { BrowserRouter} from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/quizment\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}