{"version":3,"sources":["logo.svg","firebase.js","components/RewardAdminEdit.js","components/RewardAdmin.js","components/TeacherLeaderboard.js","components/StudentPointsHistory.js","components/StudentReward.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","EditReward","React","Component","state","data","rewardName","rewardPoints","url","rewardID","handleName","event","setState","target","value","handlePoints","handleURL","files","handleSubmit","preventDefault","storage","getStorage","storageRef","ref","name","file","metadata","contentType","type","uploadBytes","getDownloadURL","then","downloadURL","console","log","reward","ptsRequired","JSON","stringify","axios","put","headers","res","window","location","reload","alert","id","className","onSubmit","this","class","onChange","App","useState","setUser","onAuthStateChanged","currentUser","error","errorCode","code","errorMessage","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAAe,I,qBCmBTA,EAAcC,YAXG,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOXC,EAAOC,YAAQV,G,4ECjBAW,G,MCEmBC,IAAMC,U,kNDA1CC,MAAQ,CACJC,KAAO,GACPC,WAAY,GACZC,aAAc,GACdC,IAAK,GACLC,SAAU,I,EAGZC,WAAa,SAAAC,GACX,EAAKC,SAAS,CAAEN,WAAaK,EAAME,OAAOC,S,EAG5CC,aAAe,SAAAJ,GACb,EAAKC,SAAS,CAAEL,aAAeI,EAAME,OAAOC,S,EAG9CE,UAAY,SAAAL,GACV,EAAKC,SAAS,CAAEJ,IAAMG,EAAME,OAAOI,MAAM,M,EAK/CC,aAAe,SAAAP,GACbA,EAAMQ,iBAGN,IAAMC,EAAUC,cACVC,EAAaC,YAAIH,EAAS,OAAS,EAAKhB,MAAMI,IAAIgB,MACpDC,EAAO,EAAKrB,MAAMI,IAGhBkB,EAAW,CACbC,YAAa,EAAKvB,MAAMI,IAAIoB,MAEhCC,YAAYP,EAAYG,EAAMC,GAE9BI,YAAeR,GAAYS,MAAK,SAACC,GAC7BC,QAAQC,IAAI,oBAAqBF,GAEjC,IAAMG,EAAS,CACX7B,WAAa,EAAKF,MAAME,WACxB8B,YAAc,EAAKhC,MAAMG,aACzBC,IAAMwB,GAEVC,QAAQC,IAAI,SAAWG,KAAKC,UAAUH,IAWtCI,IAAMC,IAAI,oCAAqC,EAAKpC,MAAMK,SAAU0B,EATrD,CACfM,QAAS,CACP,eAAgB,sBAQjBV,MAAK,SAAAW,GACJT,QAAQC,IAAIQ,GACZT,QAAQC,IAAIQ,EAAIrC,MAChBsC,OAAOC,SAASC,SAChBF,OAAOG,MAAM,8B,4CAKnB,WACI,OACI,qBAAKC,GAAG,WAAR,SACI,qBAAKA,GAAG,UAAR,SACI,sBAAKC,UAAU,aAAf,UACI,6CACA,uBAAMC,SAAUC,KAAKhC,aAAc6B,GAAG,WAAtC,UACI,wBAAOI,MAAM,QAAb,yBAEI,uBAAOvB,KAAK,OAAOJ,KAAK,aAAa4B,SAAUF,KAAKxC,gBAExD,uBACA,wBAAOyC,MAAM,QAAb,6BAEI,uBAAOvB,KAAK,SAASJ,KAAK,cAAc4B,SAAUF,KAAKnC,kBAE3D,uBACA,wBAAOoC,MAAM,QAAb,yBAEI,uBAAOvB,KAAK,OAAOJ,KAAK,MAAM4B,SAAUF,KAAKlC,eAEjD,uBACA,wBAAQY,KAAK,SAAb,gC,GAzFY1B,IAAMC,YEFDD,IAAMC,UCAXD,IAAMC,UCEND,IAAMC,UCEJD,IAAMC,U,YC4CjCkD,MAhCf,WACE,MAAwBC,mBAAS,IAAjC,mBAAaC,GAAb,WAaA,OAZAC,YAAmBzD,GAAM,SAAC0D,GACxB,IACEF,EAAQE,GACRxB,QAAQC,IAAIuB,GACZ,MAAOC,GACP,IAAMC,EAAYD,EAAME,KAClBC,EAAeH,EAAMI,QAC3B7B,QAAQC,IAAIyB,GACZ1B,QAAQC,IAAI2B,OAed,cAVA,CAUA,OAAKb,UAAU,MAAf,UACE,cAAC,IAAD,IACA,cAAC,EAAD,QClCSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4fa0e859.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAFY9L3JNCYGf5APtJM9QallQ8TLXvFWDU\",\r\n  authDomain: \"quizment-ae4a6.firebaseapp.com\",\r\n  projectId: \"quizment-ae4a6\",\r\n  storageBucket: \"quizment-ae4a6.appspot.com\",\r\n  messagingSenderId: \"774729961857\",\r\n  appId: \"1:774729961857:web:87e44344039ae5dd875880\",\r\n  measurementId: \"G-4GXXKNTKV9\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\n//authentication\r\nconst auth = getAuth(firebaseApp);\r\n\r\n// export\r\nexport { auth };\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport '../css/rewardEdit.css';\r\n\r\nexport default class EditReward extends React.Component {\r\n\r\n    state = {\r\n        data : [],\r\n        rewardName: '',\r\n        rewardPoints: '',\r\n        url: '',\r\n        rewardID: 33\r\n      }\r\n\r\n      handleName = event => {\r\n        this.setState({ rewardName : event.target.value });\r\n      }\r\n    \r\n      handlePoints = event => {\r\n        this.setState({ rewardPoints : event.target.value });\r\n      }\r\n    \r\n      handleURL = event => {\r\n        this.setState({ url : event.target.files[0], });\r\n      }\r\n\r\n\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    // file upload\r\n    // packing data    \r\n    const storage = getStorage();\r\n    const storageRef = ref(storage, 'img/' + this.state.url.name);\r\n    var file = this.state.url;\r\n    // Create file metadata including the content type\r\n    /** @type {any} */\r\n    const metadata = {\r\n        contentType: this.state.url.type,\r\n    };\r\n    uploadBytes(storageRef, file, metadata);\r\n\r\n    getDownloadURL(storageRef).then((downloadURL) => {\r\n        console.log('File available at', downloadURL);\r\n\r\n        const reward = {\r\n            rewardName : this.state.rewardName,\r\n            ptsRequired : this.state.rewardPoints,\r\n            url : downloadURL\r\n        };\r\n        console.log(\"reward\" + JSON.stringify(reward))\r\n        \r\n        const config = {\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        }\r\n        }\r\n\r\n        //const rewardID = window.location.href.split('/')[3].slice(19);\r\n        \r\n        //axios.pit('https://ades-ca1-heroku.herokuapp.com/api/rewards' + this.state.rewardID, reward, config )\r\n        axios.put('http://localhost:8081/api/rewards'+ this.state.rewardID, reward, config )\r\n        .then(res => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n          window.location.reload();\r\n          window.alert(\"Edit successfully !\");\r\n        })\r\n    })\r\n  }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"bodyEdit\">\r\n                <div id=\"divEdit\">\r\n                    <div className=\"editReward\">\r\n                        <h1>Edit Reward</h1>\r\n                        <form onSubmit={this.handleSubmit} id=\"formEdit\">\r\n                            <label class='label'>\r\n                                Reward Name:\r\n                                <input type=\"text\" name=\"rewardName\" onChange={this.handleName} />\r\n                            </label>\r\n                            <br />\r\n                            <label class='label'>\r\n                                Points Required:\r\n                                <input type=\"number\" name=\"ptsRequired\" onChange={this.handlePoints} />\r\n                            </label>\r\n                            <br />\r\n                            <label class='label'>\r\n                                Picture URL:\r\n                                <input type=\"file\" name=\"url\" onChange={this.handleURL} />\r\n                            </label>\r\n                            <br />\r\n                            <button type=\"submit\">Edit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom' ;\r\nimport {getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../css/rewardAdmin.css';\r\n\r\nexport default class viewReward extends React.Component {\r\n  state = {\r\n    data : [],\r\n    rewardName: '',\r\n    rewardPoints: '',\r\n    url: ''\r\n  }\r\n\r\n  componentDidMount(){\r\n    //axios.get('https://ades-ca1-heroku.herokuapp.com/api/rewards')\r\n    axios.get('http://localhost:8081/api/rewards')\r\n    .then(res => {\r\n        this.setState({ data : res.data });\r\n    })\r\n}\r\n\r\n  handleDelete = event => {\r\n    const id = event.target.id;\r\n    axios.delete('http://localhost:8081/api/rewards/' + id)\r\n    .then(res => {\r\n        window.alert(\"Reward deleted successfully\");\r\n        window.location.reload();\r\n    })\r\n  }\r\n\r\n  handleName = event => {\r\n    this.setState({ rewardName : event.target.value });\r\n  }\r\n\r\n  handlePoints = event => {\r\n    this.setState({ rewardPoints : event.target.value });\r\n  }\r\n\r\n  handleURL = event => {\r\n    this.setState({ url : event.target.files[0], });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    // file upload\r\n    // packing data    \r\n    const storage = getStorage();\r\n    const storageRef = ref(storage, 'img/' + this.state.url.name);\r\n    var file = this.state.url;\r\n    // Create file metadata including the content type\r\n    /** @type {any} */\r\n    const metadata = {\r\n        contentType: this.state.url.type,\r\n    };\r\n    uploadBytes(storageRef, file, metadata);\r\n\r\n    getDownloadURL(storageRef).then((downloadURL) => {\r\n        console.log('File available at', downloadURL);\r\n\r\n        const reward = {\r\n            rewardName : this.state.rewardName,\r\n            ptsRequired : this.state.rewardPoints,\r\n            url : downloadURL\r\n        };\r\n        console.log(\"reward\" + JSON.stringify(reward))\r\n        \r\n        const config = {\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        }\r\n        }\r\n        \r\n        //axios.post('https://ades-ca1-heroku.herokuapp.com/api/rewards', reward, config )\r\n        axios.post('http://localhost:8081/api/rewards', reward, config )\r\n        .then(res => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n          window.location.reload();\r\n        })\r\n    })\r\n  }\r\n\r\n  render() {\r\n      const data = this.state.data;\r\n    return (\r\n        <div id=\"body\">\r\n            <div id=\"addReward\">\r\n            <h1>Reward Administration</h1>\r\n            <div id=\"divForm\">\r\n            {/* <h2>Add Reward</h2> */}\r\n            <form onSubmit={this.handleSubmit} id=\"form\">\r\n            <label>\r\n            Reward Name :\r\n            <input type=\"text\" name=\"rewardName\" onChange={this.handleName} />\r\n            </label>\r\n            <label>\r\n            Points Required :\r\n            <input type=\"number\" name=\"ptsRequired\" onChange={this.handlePoints} />\r\n            </label>\r\n            <label>\r\n            Picture URL :\r\n            <input type=\"file\" name=\"url\" onChange={this.handleURL} />\r\n            </label>\r\n            <Button type=\"submit\">Add</Button>\r\n            </form>\r\n            </div>\r\n            <div id=\"viewRewards\">\r\n            {/* <h2>View Rewards</h2> */}\r\n            <table class=\"table\">\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Points</th>\r\n                <th>Picture</th>\r\n                <th>Edit?</th>\r\n                <th>Delete?</th>\r\n              </tr>\r\n              {data && data.map(item =>\r\n                <tr key={item.rewardID}>\r\n                  <td>{item.rewardName}</td>\r\n                  <td>{item.ptsRequired}</td>\r\n                  <td><img src={item.url} style={{height: 230, width: 230}}></img></td>\r\n                  <td><button type=\"button\" class=\"btn btn-outline-warning\">Edit</button></td>\r\n                  <td><button type=\"button\" class=\"btn btn-outline-danger\" id={item.rewardID} onClick={this.handleDelete}>Delete</button></td>\r\n                </tr>\r\n              )}\r\n            </table>\r\n            </div>\r\n            </div>\r\n      </div>\r\n    )\r\n}\r\n}","import React, { useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class ViewLeaderboard extends React.Component {\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        //axios.get('https://ades-ca1-heroku.herokuapp.com/api/allLeaderboard')\r\n        axios.get('http://localhost:8081/api/allLeaderboard')\r\n        .then(res => {\r\n            this.setState({ data : res.data });\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const data = this.state.data ;\r\n\r\n        return (\r\n            <div className=\"viewLeaderboard\">\r\n            <h3 className=\"p-3 text-center\">Leaderboard</h3>\r\n            <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Rank</th>\r\n                        <th>Name</th>\r\n                        <th>Points</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data && data.map((item, index) =>\r\n                        <tr key={item.studentID}>\r\n                            <td>{index+1}</td>\r\n                            <td>{item.name}</td>\r\n                            <td>{item.totalPts}</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n          </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class ptsHistory extends React.Component {\r\n    state = {\r\n        data: [],\r\n        id: 1\r\n        //id: localStorage.getItem('userid')\r\n    }\r\n\r\n    componentDidMount(){\r\n        //axios.get('https://ades-ca1-heroku.herokuapp.com/api/rewards')\r\n        axios.get('http://localhost:8081/api/ptsHistory/' + this.state.id)\r\n        .then(res => {\r\n            this.setState({ data : res.data });\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const data = this.state.data ;\r\n\r\n        return (\r\n            <div className=\"viewPointsHistory\">\r\n            <h3 className=\"p-3 text-center\">Display Points History</h3>\r\n            <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>History</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data && data.map(item =>\r\n                        <tr key={item.historyID}>\r\n                            <td>You've earned {item.pointsAwarded} points from event {item.eventName}</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n          </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom' ;\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class viewReward extends React.Component {\r\n  state = {\r\n    data : [],\r\n    currentPts: 0,\r\n    rewardName: '',\r\n    rewardPoints: 0,\r\n    url: '',\r\n    studentID: 1,\r\n  }\r\n\r\n  componentDidMount(){\r\n    // Get rewards data\r\n    //axios.get('https://ades-ca1-heroku.herokuapp.com/api/rewards')\r\n    axios.get('http://localhost:8081/api/rewards')\r\n    .then(res => {\r\n        this.setState({ data : res.data });\r\n    })\r\n    \r\n    // Get student's points data\r\n    //axios.get('https://ades-ca1-heroku.herokuapp.com/api/points/' + studentID)\r\n    axios.get('http://localhost:8081/api/points/' + this.state.studentID)\r\n    .then(res => {\r\n        this.setState({ currentPts : res.data[0].redeemedPts });\r\n    })\r\n}\r\n\r\n  handleRedeem = event => {\r\n\r\n    // Get the data\r\n    const rewardID = event.target.getAttribute(\"data-index\");\r\n    const ptsRequired = event.target.getAttribute(\"data-points\");\r\n    console.log(\"rewardID = \" + rewardID);\r\n    console.log(\"points = \" + ptsRequired);\r\n\r\n    // Store student's points\r\n    const currentPts = this.state.currentPts;\r\n\r\n    // IF student have enough points to redeem\r\n    if(currentPts >= ptsRequired){\r\n\r\n      // Do the calculation\r\n      this.setState({currentPts : (currentPts - ptsRequired)});\r\n\r\n      // Insert reward history\r\n      const IDs = {\r\n        studentID : this.state.studentID,\r\n        rewardID : rewardID\r\n      }\r\n\r\n      const config = {\r\n        headers: {\r\n          'content-type':'application/json'\r\n        }\r\n      }\r\n\r\n      axios.post('http://localhost:8081/api/rewardHistory', IDs, config)\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n      })\r\n\r\n      // Update student's current points\r\n      const points = {\r\n        points : currentPts\r\n      }\r\n\r\n      axios.put('http://localhost:8081/api/point/' + this.state.studentID, points, config )\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        window.alert(\"Reward redeemed successfully\");\r\n      })\r\n\r\n    // ELSE student dont have enough points\r\n    }else{\r\n      // notifications\r\n\r\n      window.alert(\"Insufficient points ! Work harder and earn more points !\");\r\n    }\r\n  \r\n  }\r\n\r\n  render() {\r\n      const data = this.state.data;\r\n    return (\r\n        <div>\r\n            <h1>Rewards</h1>\r\n            <div className=\"viewRewards\">\r\n            {data && data.map(item =>\r\n                        <tr key={item.rewardID}>\r\n                            <td>{item.rewardName}</td>\r\n                            <td>{item.ptsRequired}</td>\r\n                            <td><img src={item.url} style={{height: 200, width: 200}}></img></td>\r\n                            <td><Button onClick={this.handleRedeem} data-index={item.rewardID} data-points={item.ptsRequired}>Redeem</Button></td>\r\n                        </tr>\r\n                    )}\r\n            </div>\r\n      </div>\r\n      \r\n    )\r\n}\r\n}","import React, { useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport { store } from 'react-notifications-component';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class Notification extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n  \r\n    addNotification() {\r\n      store.addNotification({\r\n        title: \"Awesomeness\",\r\n        message: \"Awesome Notifications!\",\r\n        type: \"success\",\r\n        insert: \"top\",\r\n        container: \"top-right\",\r\n        animationIn: [\"animated\", \"fadeIn\"],\r\n        animationOut: [\"animated\", \"fadeOut\"],\r\n        dismiss: { duration: 2000 },\r\n        dismissable: { click: true }\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"app-content\">\r\n          <button onClick={this.addNotification} className=\"btn btn-primary\">\r\n            Add Awesome Notification\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n","import React, { useState } from 'react';\r\n//import { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport Home from './components/Home';\r\nimport SignIn from './components/SignIn';\r\nimport RewardAdmin from './components/RewardAdmin';\r\nimport RewardAdminEdit from './components/RewardAdminEdit';\r\nimport TeacherLeaderboard from './components/TeacherLeaderboard';\r\nimport StudentPointsHistory from './components/StudentPointsHistory';\r\nimport StudentReward from './components/StudentReward';\r\nimport Notification from './components/Notification';\r\n\r\nimport {\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport { auth } from './firebase.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-notifications-component/dist/theme.css';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState({});\r\n  onAuthStateChanged(auth, (currentUser) => {\r\n    try {\r\n      setUser(currentUser);\r\n      console.log(currentUser);\r\n    } catch (error) {\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(errorCode);\r\n      console.log(errorMessage);\r\n    }\r\n  });\r\n\r\n  return (\r\n    // <BrowserRouter>\r\n    //   <Routes>\r\n    //     <Route path=\"/Quiz\" element={<Quiz/>}></Route>\r\n    //     <Route path=\"/RewardAdmin\" element={<RewardAdmin/>}></Route>\r\n    //     <Route path=\"/RewardAdminEdit\" element={<RewardAdminEdit/>}></Route>\r\n    //     <Route path=\"/TeacherLeaderboard\" element={<TeacherLeaderboard/>}></Route>\r\n    //     <Route path=\"/StudentPointHistory\" element={<StudentPointsHistory/>}></Route>\r\n    //     <Route path=\"/StudentReward\" element={<StudentReward/>}></Route>\r\n    //   </Routes>\r\n    // </BrowserRouter>\r\n    <div className=\"App\">\r\n      <ReactNotification />\r\n      <RewardAdminEdit />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}