{"version":3,"sources":["logo.svg","firebase.js","components/TeacherHome.js","components/BadgeAdmin.js","components/RewardAdmin.js","components/UploadReward.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","TeacherAdministration","navigate","useNavigate","Button","onClick","BadgeAdmin","require","state","data","name","requirements","pic_url","badgeClassID","handleName","event","setState","target","value","handleRequirement","handleBadgeClassID","handleURL","files","handleSubmit","preventDefault","storage","getStorage","storageRef","ref","file","metadata","contentType","type","console","log","uploadBytes","badge","JSON","stringify","axios","post","headers","then","res","get","length","this","className","onSubmit","onChange","map","item","to","badgeID","React","Component","RewardAdmin","rewardName","ptsRequired","src","url","style","height","width","rewardID","FormData","UploadReward","rewardPoints","handlePoints","reward","append","App","useState","setUser","onAuthStateChanged","currentUser","error","errorCode","code","errorMessage","message","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAAe,I,qBCmBTA,EAAcC,YAXG,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOXC,EAAOC,YAAQV,G,wCCfN,SAASW,IACpB,IAAIC,EAAWC,cACf,OACI,gCACI,wDACA,cAACC,EAAA,EAAD,CAAQC,QAAS,WACjBH,EAAS,kBADT,oCAGF,cAACE,EAAA,EAAD,CAAQC,QAAS,WACfH,EAAS,kBADX,oCAGE,cAACE,EAAA,EAAD,CAAQC,QAAS,WACjBH,EAAS,iBADT,mCAGA,cAACE,EAAA,EAAD,CAAQC,QAAS,WACjBH,EAAS,eADT,iCAGF,cAACE,EAAA,EAAD,CAAQC,QAAS,WACfH,EAAS,sBADX,2C,yCChBWI,GAHJC,EAAQ,IACdA,EAAQ,I,4MAGjBC,MAAQ,CACNC,KAAM,GACNC,KAAM,GACNC,aAAc,GACdC,QAAS,GACTC,aAAc,I,EAsBhBC,WAAa,SAAAC,GACX,EAAKC,SAAS,CAAEN,KAAMK,EAAME,OAAOC,S,EAGrCC,kBAAoB,SAAAJ,GAClB,EAAKC,SAAS,CAAEL,aAAcI,EAAME,OAAOC,S,EAG7CE,mBAAqB,SAAAL,GACnB,EAAKC,SAAS,CAAEH,aAAcE,EAAME,OAAOC,S,EAG7CG,UAAY,SAAAN,GACV,EAAKC,SAAS,CAAEJ,QAASG,EAAME,OAAOK,MAAM,M,EAG9CC,aAAe,SAAAR,GACbA,EAAMS,iBAGN,IAAMC,EAAUC,cACVC,EAAaC,YAAIH,EAAS,OAAS,EAAKjB,MAAMI,QAAQF,MACxDmB,EAAO,EAAKrB,MAAMI,QAGhBkB,EAAW,CACfC,YAAa,EAAKvB,MAAMI,QAAQoB,MAElCC,QAAQC,IAAI,OACZC,YAAYR,EAAYE,EAAMC,GAC9B,IAAMM,EAAQ,CACZ1B,KAAM,EAAKF,MAAME,KACjBC,aAAc,EAAKH,MAAMG,aACzBC,QAAS,EAAKJ,MAAMI,QAAQF,KAC5BG,aAAc,EAAKL,MAAMK,cAE3BoB,QAAQC,IAAI,WAAaG,KAAKC,UAAUF,IAQxCG,IAAMC,KAAK,iCAAkCJ,EAN9B,CACbK,QAAS,CACP,eAAgB,sBAKjBC,MAAK,SAAAC,GACJV,QAAQC,IAAIS,GACZV,QAAQC,IAAIS,EAAIlC,U,uDAlEtB,WAAqB,IAAD,OAClB8B,IAAMK,IAAN,gCACGF,MAAK,SAAAC,GACJV,QAAQC,IAAIS,EAAIlC,KAAKoC,QAYrB,EAAK7B,SAAS,CAAEP,KAAMkC,EAAIlC,Y,oBAuDhC,WACE,IAAMA,EAAOqC,KAAKtC,MAAMC,KACxB,OACE,gCACE,uDACA,sBAAKsC,UAAU,aAAf,UACE,gCACE,2CACA,uBAAMC,SAAUF,KAAKvB,aAArB,UACE,gDAEF,uBAAOS,KAAK,OAAOtB,KAAK,OAAOuC,SAAUH,KAAKhC,gBAE5C,uDAEF,uBAAOkB,KAAK,OAAOtB,KAAK,eAAeuC,SAAUH,KAAK3B,uBAEpD,6CAEF,uBAAOa,KAAK,OAAOtB,KAAK,UAAUuC,SAAUH,KAAKzB,eAG/C,oDAEF,uBAAOW,KAAK,OAAOtB,KAAK,eAAeuC,SAAUH,KAAK1B,wBAEpD,wBAAQY,KAAK,SAAb,uBAGJ,6CACCvB,GAAQA,EAAKyC,KAAI,SAAAC,GAAI,OACpB,+BACE,6BAAKA,EAAKzC,OACV,6BAAKyC,EAAKxC,eACV,6BAAKwC,EAAKtC,eACV,6BACE,cAAC,IAAD,CAAMuC,GAAE,+BAA0BD,EAAKE,SAAvC,SACE,cAACjD,EAAA,EAAD,uBANN,iBAAS+C,EAAKE,sB,GA9GcC,IAAMC,YCHzBC,E,4MACjBhD,MAAQ,CACJC,KAAM,I,uDAGV,WAAoB,IAAD,OACf8B,IAAMK,IAAI,qCACTF,MAAK,SAAAC,GACF,EAAK3B,SAAS,CAAEP,KAAOkC,EAAIlC,Y,oBAKnC,WACI,IAAMA,EAAOqC,KAAKtC,MAAMC,KACxB,OACI,sBAAKsC,UAAU,aAAf,UACA,oBAAIA,UAAU,kBAAd,6CACA,cAAC,IAAD,CAAMK,GAAG,gBAAT,SACI,cAAChD,EAAA,EAAD,8BAEJ,wBAAO2C,UAAU,qCAAjB,UACI,gCACI,+BACI,sCACA,wCACA,8CAGR,gCACKtC,GAAQA,EAAKyC,KAAI,SAAAC,GAAI,OAClB,+BACI,6BAAKA,EAAKM,aACV,6BAAKN,EAAKO,cACV,6BAAI,qBAAKC,IAAK,aAAcR,EAAKS,IAAKC,MAAO,CAACC,OAAQ,IAAKC,MAAO,WAH7DZ,EAAKa,yB,GA/BGV,IAAMC,WCHzCU,EAAW1D,EAAQ,IAGJ2D,GAFV3D,EAAQ,I,4MAGfC,MAAQ,CACJiD,WAAY,GACZU,aAAc,GACdtC,KAAM,I,EAGVf,WAAa,SAAAC,GACT,EAAKC,SAAS,CAAEyC,WAAY1C,EAAME,OAAOC,S,EAG7CkD,aAAe,SAAArD,GACX,EAAKC,SAAS,CAAEmD,aAAcpD,EAAME,OAAOC,S,EAG/CG,UAAY,SAAAN,GACR,EAAKC,SAAS,CAAEa,KAAMd,EAAME,OAAOK,MAAM,M,EAG7CC,aAAe,SAAAR,GACXA,EAAMS,iBACN,IAAM6C,EAAS,IAAIJ,EACnBI,EAAOC,OAAO,UAAW,EAAK9D,MAAMqB,MACpCwC,EAAOC,OAAO,aAAc,EAAK9D,MAAMiD,YACvCY,EAAOC,OAAO,cAAe,EAAK9D,MAAM2D,cAExClC,QAAQC,IAAI,YAAcmC,GAQ1B9B,IAAMC,KAAK,oCAAqC6B,EANjC,CACX5B,QAAS,CACL,eAAgB,yBAKnBC,MAAK,SAAAC,GACFV,QAAQC,IAAIS,GACZV,QAAQC,IAAIS,EAAIlC,U,4CAG5B,WACI,OACI,sBAAKsC,UAAU,eAAf,UACI,+CACA,uBAAMC,SAAUF,KAAKvB,aAArB,UACI,kDAER,uBAAOS,KAAK,OAAOtB,KAAK,aAAauC,SAAUH,KAAKhC,gBAE5C,sDAER,uBAAOkB,KAAK,SAAStB,KAAK,cAAcuC,SAAUH,KAAKsB,kBAE/C,kDAER,uBAAOpC,KAAK,OAAOtB,KAAK,UAAUuC,SAAUH,KAAKzB,eAEzC,wBAAQW,KAAK,SAAb,2B,GAzDsBsB,IAAMC,Y,MCmCjCgB,MA1Bf,WACE,MAAwBC,mBAAS,IAAjC,mBAAaC,GAAb,WAaA,OAZAC,YAAmB3E,GAAM,SAAC4E,GACxB,IACEF,EAAQE,GACR1C,QAAQC,IAAIyC,GACZ,MAAOC,GACP,IAAMC,EAAYD,EAAME,KAClBC,EAAeH,EAAMI,QAC3B/C,QAAQC,IAAI2C,GACZ5C,QAAQC,IAAI6C,OAKd,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,KAAK,gBAAgBC,QAAS,cAACjF,EAAD,MACrC,cAAC,IAAD,CAAOgF,KAAK,eAAeC,QAAS,cAAC,EAAD,MACpC,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,MACrC,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,YCtB9BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3C,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.51bfa99a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAFY9L3JNCYGf5APtJM9QallQ8TLXvFWDU\",\n  authDomain: \"quizment-ae4a6.firebaseapp.com\",\n  projectId: \"quizment-ae4a6\",\n  storageBucket: \"quizment-ae4a6.appspot.com\",\n  messagingSenderId: \"774729961857\",\n  appId: \"1:774729961857:web:87e44344039ae5dd875880\",\n  measurementId: \"G-4GXXKNTKV9\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\n//authentication\nconst auth = getAuth(firebaseApp);\n\n// export\nexport { auth };\n\n","import React from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\n// Rewards\n\nexport default function TeacherAdministration() {\n    let navigate = useNavigate();\n    return (\n        <div>\n            <h1>Teacher Administration</h1>\n            <Button onClick={() => {\n            navigate('/studentAdmin');\n          }}>Student Administration</Button>\n          <Button onClick={() => {\n            navigate('/rewardsAdmin');\n          }}>Rewards Administration</Button>\n            <Button onClick={() => {\n            navigate('/badgesAdmin');\n          }}>Badges Administration</Button>\n            <Button onClick={() => {\n            navigate('/mazeAdmin');\n          }}>Maze Administration</Button>\n          <Button onClick={() => {\n            navigate('/leaderboardAdmin');\n          }}>Leaderboard Administration</Button>\n            \n        </div>\n    );\n}","import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport Button from 'react-bootstrap/Button';\nconst FormData = require('form-data');\nconst fs = require('fs');\n\nexport default class BadgeAdmin extends React.Component {\n  state = {\n    data: [],\n    name: '',\n    requirements: '',\n    pic_url: '',\n    badgeClassID: ''\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:8081/badges`)\n      .then(res => {\n        console.log(res.data.length);\n        // for(let i = 0; i < res.data.length; i++) {\n        //   const name = res.data[i].name;\n        //   const requirements = res.data[i].requirements;\n        //   const pic_url = res.data[i].pic_url;\n        //   const badgeClassID = res.data[i].badgeClassID;\n        //   console.log(name);\n        //   this.setState({ name });\n        //   this.setState({ requirements });\n        //   this.setState({ pic_url });\n        //   this.setState({ badgeClassID });\n        // }\n        this.setState({ data: res.data });\n      })\n  }\n\n  handleName = event => {\n    this.setState({ name: event.target.value });\n  }\n\n  handleRequirement = event => {\n    this.setState({ requirements: event.target.value });\n  }\n\n  handleBadgeClassID = event => {\n    this.setState({ badgeClassID: event.target.value });\n  }\n\n  handleURL = event => {\n    this.setState({ pic_url: event.target.files[0], });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    //data extraction (combining data)\n    // file upload\n    const storage = getStorage();\n    const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\n    var file = this.state.pic_url;\n    // Create file metadata including the content type\n    /** @type {any} */\n    const metadata = {\n      contentType: this.state.pic_url.type,\n    };\n    console.log(\"yes\");\n    uploadBytes(storageRef, file, metadata);\n    const badge = {\n      name: this.state.name,\n      requirements: this.state.requirements,\n      pic_url: this.state.pic_url.name,\n      badgeClassID: this.state.badgeClassID\n    };\n    console.log(\"BADGEEEE\" + JSON.stringify(badge))\n\n    const config = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    }\n\n    axios.post('http://localhost:8081/newBadge', badge, config)\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      })\n  }\n\n  render() {\n    const data = this.state.data;\n    return (\n      <div>\n        <h1>Badges Administration</h1>\n        <div className=\"viewBadges\">\n          <div>\n            <h2>Add Badge</h2>\n            <form onSubmit={this.handleSubmit}>\n              <label>\n                Badge Name:\n            <input type=\"text\" name=\"name\" onChange={this.handleName} />\n              </label>\n              <label>\n                Badge Requirement:\n            <input type=\"text\" name=\"requirements\" onChange={this.handleRequirement} />\n              </label>\n              <label>\n                Pic URL:\n            <input type=\"file\" name=\"pic_url\" onChange={this.handleURL} />\n              </label>\n              {/* Please remember to change and do JOIN table for it to not display as ID */}\n              <label>\n                Badge Class ID:\n            <input type=\"text\" name=\"badgeClassID\" onChange={this.handleBadgeClassID} />\n              </label>\n              <button type=\"submit\">Add</button>\n            </form>\n          </div>\n          <h2>View Badges</h2>\n          {data && data.map(item =>\n            <tr key={item.badgeID}>\n              <td>{item.name}</td>\n              <td>{item.requirements}</td>\n              <td>{item.badgeClassID}</td>\n              <td>\n                <Link to={`/EditMazeContent?lvl=${item.badgeID}`}>\n                  <Button>Edit</Button>\n                </Link>\n              </td>            </tr>\n          )}\n        </div>\n      </div>\n    )\n  }\n}","import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nexport default class RewardAdmin extends React.Component {\n    state = {\n        data: []\n    }\n\n    componentDidMount(){\n        axios.get('http://localhost:8081/api/rewards')\n        .then(res => {\n            this.setState({ data : res.data });\n        })\n    }\n\n    \n    render() {\n        const data = this.state.data ;\n        return (\n            <div className=\"viewReward\">\n            <h3 className=\"p-3 text-center\">React - Display a list of items</h3>\n            <Link to=\"/uploadReward\">\n                <Button>Upload Reward</Button>\n            </Link>\n            <table className=\"table table-striped table-bordered\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Points</th>\n                        <th>Picture</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data && data.map(item =>\n                        <tr key={item.rewardID}>\n                            <td>{item.rewardName}</td>\n                            <td>{item.ptsRequired}</td>\n                            <td><img src={'../images/'+ item.url} style={{height: 200, width: 200}}></img></td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n          </div>\n        )\n    }\n}\n","import React from 'react';\nimport axios from 'axios';\nconst FormData = require('form-data');\nconst fs = require('fs');\n\nexport default class UploadReward extends React.Component {\n    state = {\n        rewardName: '',\n        rewardPoints: '',\n        file: '',\n    }\n\n    handleName = event => {\n        this.setState({ rewardName: event.target.value, });\n    }\n\n    handlePoints = event => {\n        this.setState({ rewardPoints: event.target.value, });\n    }\n\n    handleURL = event => {\n        this.setState({ file: event.target.files[0], });\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const reward = new FormData();\n        reward.append('myImage', this.state.file);\n        reward.append('rewardName', this.state.rewardName);\n        reward.append('ptsRequired', this.state.rewardPoints)\n\n        console.log(\"reward : \" + reward);\n\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n\n        axios.post('http://localhost:8081/api/rewards', reward, config)\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n            })\n    }\n    render() {\n        return (\n            <div className=\"uploadReward\">\n                <h1>Upload Reward</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Reward Name :\n            <input type=\"text\" name=\"rewardName\" onChange={this.handleName} />\n                    </label>\n                    <label>\n                        Points Required :\n            <input type=\"number\" name=\"ptsRequired\" onChange={this.handlePoints} />\n                    </label>\n                    <label>\n                        Picture URL :\n            <input type=\"file\" name=\"myImage\" onChange={this.handleURL} />\n                    </label>\n                    <button type=\"submit\">Add</button>\n                </form>\n            </div>\n        )\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport SignIn from './components/SignIn';\nimport TeacherAdministration from './components/TeacherHome';\nimport BadgeAdmin from './components/BadgeAdmin';\nimport RewardAdmin from './components/RewardAdmin';\nimport UploadReward from './components/UploadReward';\nimport {\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { auth } from './firebase.js';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  const [user, setUser] = useState({});\n  onAuthStateChanged(auth, (currentUser) => {\n    try {\n      setUser(currentUser);\n      console.log(currentUser);\n    } catch (error) {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n    }\n  });\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/teacherAdmin\" element={<TeacherAdministration/>}></Route>\n        <Route path=\"/badgesAdmin\" element={<BadgeAdmin/>}></Route>\n        <Route path=\"/rewardsAdmin\" element={<RewardAdmin/>}></Route>\n        <Route path=\"/uploadReward\" element={<UploadReward/>}></Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}