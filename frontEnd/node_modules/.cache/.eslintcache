[{"C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\index.js":"1","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\App.js":"2","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\firebase.js":"4","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\StudentPointsHistory.js":"5","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\StudentDashboard.js":"6","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\Loading.js":"7","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\TeacherDashboard.js":"8","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\RewardAdminEdit.js":"9","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\Profile.js":"10","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\SignIn.js":"11","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\StudentReward.js":"12","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\MapOfMaze.js":"13","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\EditMazeContent.js":"14","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\RewardAdmin.js":"15","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\MazeAdmin.js":"16","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\BadgeAdmin.js":"17","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\Quiz.js":"18","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\EditBadge.js":"19","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\MazePopup.js":"20"},{"size":633,"mtime":1637657380085,"results":"21","hashOfConfig":"22"},{"size":2623,"mtime":1637657379997,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1637047932344,"results":"24","hashOfConfig":"22"},{"size":894,"mtime":1637047932336,"results":"25","hashOfConfig":"22"},{"size":1215,"mtime":1637657380010,"results":"26","hashOfConfig":"22"},{"size":12854,"mtime":1637657380009,"results":"27","hashOfConfig":"22"},{"size":400,"mtime":1637657380001,"results":"28","hashOfConfig":"22"},{"size":1419,"mtime":1637658056343,"results":"29","hashOfConfig":"22"},{"size":3407,"mtime":1637657380006,"results":"30","hashOfConfig":"22"},{"size":4409,"mtime":1637657380003,"results":"31","hashOfConfig":"22"},{"size":10125,"mtime":1637657380007,"results":"32","hashOfConfig":"22"},{"size":4051,"mtime":1637657380011,"results":"33","hashOfConfig":"22"},{"size":13151,"mtime":1637657380001,"results":"34","hashOfConfig":"22"},{"size":1883,"mtime":1637657380000,"results":"35","hashOfConfig":"22"},{"size":5039,"mtime":1637657380005,"results":"36","hashOfConfig":"22"},{"size":1840,"mtime":1637657380003,"results":"37","hashOfConfig":"22"},{"size":5707,"mtime":1637657379997,"results":"38","hashOfConfig":"22"},{"size":2568,"mtime":1637657380004,"results":"39","hashOfConfig":"22"},{"size":4471,"mtime":1637657379999,"results":"40","hashOfConfig":"22"},{"size":3733,"mtime":1637657380003,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tc0072",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},"C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\App.js",["91"],"import React, { useState } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Loading from './components/Loading';\r\nimport SignIn from './components/SignIn';\r\nimport StudentDashboard from './components/StudentDashboard';\r\nimport StudentPointsHistory from './components/StudentPointsHistory';\r\nimport StudentReward from './components/StudentReward';\r\nimport Profile from './components/Profile';\r\nimport TeacherDashboard from './components/TeacherDashboard';\r\nimport BadgeAdmin from './components/BadgeAdmin';\r\nimport RewardAdmin from './components/RewardAdmin';\r\nimport EditReward from './components/RewardAdminEdit';\r\nimport MazeAdmin from './components/MazeAdmin';\r\nimport EditMaze from './components/EditMazeContent';\r\nimport EditBadge from './components/EditBadge';\r\nimport Quiz from './components/Quiz';\r\nimport MapOfMaze from './components/MapOfMaze';\r\nimport ReactNotification from 'react-notifications-component';\r\nimport {\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport { auth } from './firebase.js';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'react-notifications-component/dist/theme.css';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState({});\r\n  onAuthStateChanged(auth, (currentUser) => {\r\n    try {\r\n      setUser(currentUser);\r\n    } catch (error) {\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(errorCode);\r\n      console.log(errorMessage);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n    <ReactNotification />\r\n      <Routes>\r\n        <Route path=\"/\" element={<SignIn />}></Route>\r\n        <Route path=\"/loading\" element={<Loading />}></Route>\r\n        <Route path=\"/studentDashboard\" element={<StudentDashboard/>}></Route>\r\n        <Route path=\"/studentPoints\" element={<StudentPointsHistory/>}></Route>\r\n        <Route path=\"/studentReward\" element={<StudentReward/>}></Route>\r\n        <Route path=\"/profile\" element={<Profile />}></Route>\r\n        <Route path=\"/teacherDashboard\" element={<TeacherDashboard/>}></Route>\r\n        <Route path=\"/badgesAdmin\" element={<BadgeAdmin/>}></Route>\r\n        <Route path=\"/rewardsAdmin\" element={<RewardAdmin/>}></Route>\r\n        <Route path=\"/editReward\" element={<EditReward/>}></Route>\r\n        <Route path=\"/mazeAdmin\" element={<MazeAdmin/>}></Route>\r\n        <Route path=\"/EditMazeContent\" element={<EditMaze/>}></Route>\r\n        <Route path=\"/EditBadge\" element={<EditBadge/>}></Route>\r\n        <Route path=\"/quiz\" element={<Quiz/>}></Route>\r\n        <Route path=\"/mapOfMaze\" element={<MapOfMaze/>}></Route>\r\n      </Routes>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\firebase.js",[],"C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\StudentPointsHistory.js",[],"C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\StudentDashboard.js",["92","93","94","95","96","97"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { Button, Container, Row, Col, Sidebar, Nav, NavItem, Card, ListGroup } from 'react-bootstrap';\r\nimport { signOut } from \"firebase/auth\";\r\nimport { auth } from '../firebase.js';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport '../styling.css'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        // paddingTop: '100px',\r\n        marginTop: \"60px\",\r\n        width: \"250px\",\r\n        marginLeft: \"40px\",\r\n    },\r\n});\r\n\r\nconst marks = [\r\n    {\r\n        value: 0,\r\n        label: '',\r\n    },\r\n    {\r\n        value: 1,\r\n        label: '',\r\n    },\r\n    {\r\n        value: 2,\r\n        label: '',\r\n    },\r\n    {\r\n        value: 3,\r\n        label: '',\r\n    },\r\n    {\r\n        value: 4,\r\n        label: '',\r\n    },\r\n    {\r\n        value: 5,\r\n        label: '',\r\n    }\r\n];\r\n\r\nconst logout = async () => {\r\n    await signOut(auth);\r\n    window.location.replace(\"https://ades-ca1-project.herokuapp.com/quizment\");\r\n};\r\n\r\n\r\nclass StudentDashboard extends React.Component {\r\n    state = {\r\n        data: [],\r\n        streaks: 0,\r\n        fullStreaks: 0,\r\n        totalPts: [],\r\n        redeemedPts: [],\r\n        name: [],\r\n        showStreak: false,\r\n        lastLoginData: [],\r\n        currentLogin: new Date().getTime(),\r\n        Uid: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://ades-ca1-project.herokuapp.com/api/students/topStudents/')\r\n            .then(res => {\r\n                this.setState({ data: res.data });\r\n            })\r\n\r\n        axios.get('https://ades-ca1-project.herokuapp.com/api/students/streaks/' + 4)\r\n            .then(res => {\r\n                console.log(\"number of streak \" + res.data[0].streaks)\r\n                const streaks = res.data[0].streaks;\r\n                this.setState({ streaks });\r\n            })\r\n\r\n        axios.get('https://ades-ca1-project.herokuapp.com/api/students/points/' + 4)\r\n            .then(res => {\r\n                console.log(\"number of streak \" + res.data[0].totalPts)\r\n                console.log(\"number of streak \" + res.data[0].redeemedPts)\r\n                const totalPts = res.data[0].totalPts;\r\n                const redeemedPts = res.data[0].redeemedPts;\r\n                const name = res.data[0].name;\r\n                this.setState({ totalPts });\r\n                this.setState({ redeemedPts });\r\n                this.setState({ name });\r\n            })\r\n\r\n        axios.get('https://ades-ca1-project.herokuapp.com/api/students/lastLogin/' + 4)\r\n            .then(res => {\r\n                console.log(\"LAST LOGIN \" + res.data[0].lastLogin)\r\n                this.setState({ lastLoginData: res.data[0].lastLogin })\r\n                console.log(\"Current login stored: \" + this.state.currentLogin)\r\n                console.log(\"Last login stored: \" + this.state.lastLoginData)\r\n                var diffTime = this.state.currentLogin - this.state.lastLoginData;\r\n                var streak=this.state.streaks;\r\n                const config = {\r\n                    headers: {\r\n                        'content-type': 'application/json'\r\n                    }\r\n                }\r\n                const lastLog = {\r\n                    lastLogin: this.state.currentLogin\r\n                }\r\n                if (diffTime >= 28800000 && diffTime <= 86400000) {\r\n                    console.log(\"Yassss\");\r\n                    // AXIOS PUT STREAK + NEW LOGIN TIME\r\n                    axios.put('https://ades-ca1-project.herokuapp.com/api/students/lastLoginStreak/' + 4, lastLog, config)\r\n                    .then(res => {\r\n                        console.log(\"RESULTS: \" + res);\r\n                        console.log(res);\r\n                        console.log(\"RESULT: \" + res.data);\r\n                    })\r\n\r\n                    axios.put('https://ades-ca1-project.herokuapp.com/api/students/updatePoints/' + 4)\r\n                    .then(res => {\r\n                        console.log(\"RESULTS: \" + res);\r\n                        console.log(res);\r\n                        console.log(\"RESULT: \" + res.data);\r\n                    })\r\n                    \r\n                } else if (diffTime>86400000) {\r\n                    console.log(\"harooo\");\r\n                    axios.put('https://ades-ca1-project.herokuapp.com/api/students/lastLoginLostStreak/' + 4, lastLog, config)\r\n                        .then(res => {\r\n                            console.log(\"RESULTS: \" + res);\r\n                            console.log(res);\r\n                            console.log(\"RESULT: \" + res.data);\r\n                        })\r\n\r\n                } else {\r\n                    console.log(\"BYE\");\r\n                    axios.put('https://ades-ca1-project.herokuapp.com/api/students/lastLogin/' + 4, lastLog, config)\r\n                        .then(res => {\r\n                            console.log(\"RESULTS: \" + res);\r\n                            console.log(res);\r\n                            console.log(\"RESULT: \" + res.data);\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const data = this.state.data;\r\n        const { classes } = this.props;\r\n        return (\r\n\r\n            <Container className=\"toatalContainer\" fluid>\r\n                <Row xs={1} className=\"row\">\r\n                    <Col md={3} className=\"c1 column\">\r\n                        <h4 className=\"mt-5 mb-5\">{this.state.name}</h4>\r\n                        <Card className=\"mb-3 points\">\r\n                            <Card.Body>\r\n                                <Card.Title className=\"cardContext\">Total Points:</Card.Title>\r\n                                <Card.Text className=\"cardContext\">\r\n                                    {this.state.totalPts}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card className=\"mb-3 points\">\r\n                            <Card.Body>\r\n                                <Card.Title className=\"cardContext\">Redeemable Points</Card.Title>\r\n                                <Card.Text className=\"cardContext\">\r\n                                    {this.state.redeemedPts}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <div className=\"box\">\r\n                            <hr />\r\n                            <Nav className=\"col-md-12 d-none d-md-block sidebar navCustomise sideNavItem\"\r\n                                activeKey=\"/home\"\r\n                                // onSelect={selectedKey => alert(`selected ${selectedKey}`)}\r\n                            >\r\n                                <div className=\"sidebar-sticky\"></div>\r\n                                <Nav.Item className=\"navItem \" activeClassName=\"active\" >\r\n                                    <Nav.Link className=\"linkCustomise\" href=\"/quizment/studentDashboard\">Dashboard</Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"navItem\">\r\n                                    <Nav.Link className=\"linkCustomise\" href=\"/quizment/studentReward\">Reward</Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"navItem\">\r\n                                    <Nav.Link className=\"linkCustomise\" href=\"/quizment/mapOfMaze\">Maze</Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"navItem\">\r\n                                    <Nav.Link className=\"linkCustomise\" eventKey=\"link-2\">Badges</Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item className=\"navItem\">\r\n                                    <Nav.Link className=\"linkCustomise\" eventKey=\"link-2\">Streak</Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item  onClick={logout} className=\"navItem\">\r\n                                    <Nav.Link className=\"linkCustomise\" eventKey=\"link-2\">Sign Out</Nav.Link>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={4} className=\"box2 column\">\r\n                        <h4>Assignments To Do:</h4>\r\n                        <Card className=\"mt-3\">\r\n                            <Card.Header>Math</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title>Integration Homework 2</Card.Title>\r\n                                <Card.Text>\r\n                                    Learn how to do Integration\r\n                                </Card.Text>\r\n                                <Button variant=\"danger\">Do Now</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card className=\"mt-3\">\r\n                            <Card.Header>Math</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title>Integration Homework 3</Card.Title>\r\n                                <Card.Text>\r\n                                    Learn how to do Integration part 3\r\n                                </Card.Text>\r\n                                <Button variant=\"danger\">Do Now</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card className=\"mt-3\">\r\n                            <Card.Header>Math</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title>Integration Homework 2</Card.Title>\r\n                                <Card.Text>\r\n                                    Learn how to do Integration\r\n                                </Card.Text>\r\n                                <Button variant=\"danger\">Do Now</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={3} className=\" box3 column\">\r\n                        <Col>\r\n                            <Row className=\"sliderStreak\">\r\n                                <Col>\r\n                                    <Slider\r\n                                        className={classes.root}\r\n                                        aria-label=\"Always visible\"\r\n                                        value={this.state.streaks}\r\n                                        step={1}\r\n                                        min={0}\r\n                                        max={5}\r\n                                        marks={marks}\r\n                                        valueLabelDisplay=\"off\"\r\n                                    />\r\n                                </Col>\r\n                                <Col className=\"streakNum\">\r\n                                    <h6>Streaks: {this.state.streaks} </h6>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Card className=\"leaderBoardBox\"  >\r\n                            <Card.Header className=\"leaderBoardTitle\">\r\n                                Leaderboard\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                {data && data.map(item =>\r\n                                    <Card className=\"m-2 \" style={{ width: '16rem' }} key={item.studentID}>\r\n                                        <ListGroup variant=\"flush\" >\r\n                                            <ListGroup.Item>\r\n                                                <Row className=\"leaderBoardItem\">\r\n                                                    <Col>\r\n                                                        {item.name}\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        {item.totalPts}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                )}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nStudentDashboard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(StudentDashboard);","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\Loading.js",["98"],"import '../App.css';\r\nimport sample from '../logoLoading.webm';\r\nimport React from 'react'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div>\r\n            <video className='videoTag' autoPlay loop muted>\r\n                <source src={sample} type='video/webm' />\r\n            </video>\r\n        </div>\r\n    )\r\n}\r\nexport default Loading;\r\n\r\n{/* <header className=\"App-header\">\r\n\r\n\r\n\r\n</header> */}","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\TeacherDashboard.js",["99"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { signOut } from \"firebase/auth\";\r\nimport { auth } from '../firebase.js';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n// Rewards\r\n\r\nexport default function TeacherDashboard() {\r\n \r\n    let navigate = useNavigate();\r\n    const logout = async () => {\r\n      await signOut(auth);\r\n      navigate('/');\r\n    };\r\n    return (\r\n        <div>\r\n           <Button onClick={() => {\r\n            navigate('/studentAdmin');\r\n          }}>Student Administration</Button>\r\n            <h1>Teacher Administration</h1>\r\n            <Button onClick={() => {\r\n            navigate('/studentAdmin');\r\n          }}>Student Administration</Button>\r\n          <Button onClick={() => {\r\n            navigate('/rewardsAdmin');\r\n          }}>Rewards Administration</Button>\r\n            <Button onClick={() => {\r\n            navigate('/badgesAdmin');\r\n          }}>Badges Administration</Button>\r\n            <Button onClick={() => {\r\n            navigate('/mazeAdmin');\r\n          }}>Maze Administration</Button>\r\n          <Button onClick={() => {\r\n            navigate('/leaderboardAdmin');\r\n          }}>Leaderboard Administration</Button>\r\n          <Button onClick={() => {\r\n            navigate('/profile');\r\n          }}>Profile</Button>\r\n          <Button onClick={logout}>Sign Out</Button>\r\n        </div>\r\n    );\r\n}","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\RewardAdminEdit.js",[],"C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\Profile.js",[],"C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\SignIn.js",["100"],"import '../styling2.css';\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    sendPasswordResetEmail,\r\n    signInWithEmailAndPassword\r\n} from \"firebase/auth\";\r\nimport { auth } from '../firebase.js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState, useRef } from 'react';\r\n// import TabPanel from '@mui/lab/TabPanel';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport axios from 'axios';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\n\r\nconst SignIn = () => {\r\n    const loginEmailInput = useRef(\"\");\r\n    const loginPasswordInput = useRef(\"\");\r\n    const registerEmailInput = useRef(\"\");\r\n    const registerPasswordInput = useRef(\"\");\r\n    const emailInput = useRef(\"\");\r\n    // const [registerEmail, setRegisterEmail] = useState(\"\");\r\n    // const [registerPassword, setRegisterPassword] = useState(\"\");\r\n    // const [loginEmail, setLoginEmail] = useState(\"\");\r\n    // const [loginPassword, setLoginPassword] = useState(\"\");\r\n    // const [email, setEmail] = useState(\"\");\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    let navigate = useNavigate();\r\n\r\n    const register = async () => {\r\n        try {\r\n            const user = await createUserWithEmailAndPassword(\r\n                auth,\r\n                registerEmailInput.current.value,\r\n                registerPasswordInput.current.value\r\n            );\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                }\r\n            }\r\n\r\n            var dateData = JSON.stringify(user.user.metadata.createdAt);\r\n            dateData = parseInt(JSON.parse(dateData));\r\n            const personalDetails = {\r\n                name: JSON.parse(JSON.stringify(user.user.email)),\r\n                Uid: JSON.parse(JSON.stringify(user.user.uid)),\r\n                streaks: 0,\r\n                totalPts: 0,\r\n                mazeLvl: 1,\r\n                redeemedPts: 0,\r\n                type: 1,\r\n                lastLogin: dateData\r\n            };\r\n            axios.post('https://ades-ca1-project.herokuapp.com/api/newStudent', personalDetails, config)\r\n                .then(res => {\r\n                    console.log(res);\r\n                    console.log(res.data);\r\n                    navigate('/studentDashboard');\r\n                })\r\n        } catch (error) {\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            console.log(JSON.stringify(errorCode));\r\n            console.log(JSON.stringify(errorMessage));\r\n        }\r\n    };\r\n\r\n    const login = async () => {\r\n        try {\r\n            const user = await signInWithEmailAndPassword(\r\n                auth,\r\n                loginEmailInput.current.value,\r\n                loginPasswordInput.current.value\r\n            );\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                }\r\n            }\r\n            var uid = JSON.parse(JSON.stringify(user.user.uid));\r\n            axios.get(`https://ades-ca1-project.herokuapp.com/api/userType/` + uid, config)\r\n                .then(res => {\r\n                    if (res.data.type === 1) {\r\n                        navigate('/studentDashboard');\r\n                    } else if (res.data.type === 2) {\r\n                        navigate('/teacherDashboard');\r\n                    } else {\r\n                        navigate('/');\r\n                    }\r\n                })\r\n        } catch (error) {\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            console.log(JSON.stringify(errorCode));\r\n            console.log(JSON.stringify(errorMessage));\r\n        }\r\n    };\r\n\r\n    const forgotPassword = async () => {\r\n        try {\r\n            const user = await sendPasswordResetEmail(\r\n                auth,\r\n                emailInput.current.value);\r\n        } catch (error) {\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            console.log(JSON.stringify(errorCode));\r\n            console.log(JSON.stringify(errorMessage));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"signin\">\r\n            <h1>Authentication</h1>\r\n            <Box sx={{ width: '100%' }}>\r\n                <Box sx={{ borderColor: 'divider' }}>\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        textColor=\"secondary\"\r\n                        indicatorColor=\"secondary\"\r\n                        aria-label=\"secondary tabs example\"\r\n                        centered\r\n                    >\r\n                        <Tab label=\"Sign In\" {...a11yProps(0)} />\r\n                        <Tab label=\"Sign Up\" {...a11yProps(1)} />\r\n                        <Tab label=\"Forgot Password\" {...a11yProps(2)} />\r\n                    </Tabs>\r\n                    <TabPanel value={value} index={0}>\r\n                        {/* <input placeholder=\"email\" type=\"email\" onChange={(event) => {\r\n                            setLoginEmail(event.target.value);\r\n                        }} /> */}\r\n                        {/* <input placeholder=\"password\" type=\"password\" onChange={(event) => {\r\n                            setLoginPassword(event.target.value);\r\n                        }} /> */}\r\n                        <TextField\r\n                            required\r\n                            fullWidth\r\n                            inputRef={loginEmailInput}\r\n                            id=\"outlined-required\"\r\n                            label=\"Email\"\r\n                            margin=\"dense\"\r\n                            type=\"email\"\r\n                        />\r\n                        <TextField\r\n                            required\r\n                            fullWidth\r\n                            inputRef={loginPasswordInput}\r\n                            id=\"outlined-password-input\"\r\n                            label=\"Password\"\r\n                            margin=\"dense\"\r\n                            type=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        <Button sx={{ background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)', color: 'white', paddingTop: '10px', paddingBottom: '10px', marginTop: '10px', width: '100%' }} variant=\"contained\" onClick={login}> Sign In</Button>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        {/* <input placeholder=\"email\" type=\"email\" onChange={(event) => {\r\n                            setRegisterEmail(event.target.value);\r\n                        }} />\r\n                        <input placeholder=\"password\" type=\"password\" onChange={(event) => {\r\n                            setRegisterPassword(event.target.value);\r\n                        }} /> */}\r\n                    <TextField\r\n                            required\r\n                            fullWidth\r\n                            inputRef={registerEmailInput}\r\n                            id=\"outlined-required\"\r\n                            label=\"Email\"\r\n                            margin=\"dense\"\r\n                            type=\"email\"\r\n                        />\r\n                        <TextField\r\n                            required\r\n                            fullWidth\r\n                            inputRef={registerPasswordInput}\r\n                            id=\"outlined-password-input\"\r\n                            label=\"Password\"\r\n                            margin=\"dense\"\r\n                            type=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        <Button sx={{ background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)', color: 'white', paddingTop: '10px', paddingBottom: '10px', marginTop: '10px', width: '100%' }} variant=\"contained\" onClick={register}> Sign Up</Button>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={2}>\r\n                        {/* <input placeholder=\"email\" type=\"email\" onChange={(event) => {\r\n                            setEmail(event.target.value);\r\n                        }} /> */}\r\n                        <TextField\r\n                            required\r\n                            fullWidth\r\n                            inputRef={emailInput}\r\n                            id=\"outlined-required\"\r\n                            label=\"Email\"\r\n                            margin=\"dense\"\r\n                            type=\"email\"\r\n                        />\r\n                        <Button sx={{ background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)', color: 'white', paddingTop: '10px', paddingBottom: '10px', marginTop: '10px', width: '100%' }} variant=\"contained\" onClick={forgotPassword}> Forgot Password</Button>\r\n                    </TabPanel>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default SignIn;\r\n","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\StudentReward.js",["101","102"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { store } from 'react-notifications-component';\r\nimport { Link } from 'react-router-dom' ;\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class viewReward extends React.Component {\r\n  state = {\r\n    data : [],\r\n    currentPts: 0,\r\n    rewardName: '',\r\n    rewardPoints: 0,\r\n    url: '',\r\n    studentID: 1,\r\n  }\r\n\r\n  componentDidMount(){\r\n    // Get all rewards data\r\n    axios.get('https://ades-ca1-project.herokuapp.com/api/rewards')\r\n    .then(res => {\r\n        this.setState({ data : res.data });\r\n    })\r\n    \r\n    // Get student's points data\r\n    axios.get('https://ades-ca1-project.herokuapp.com/api/points/' + this.state.studentID)\r\n    .then(res => {\r\n        this.setState({ currentPts : res.data[0].redeemedPts });\r\n    })\r\n}\r\n\r\n  notiRedeemSuccess(rewardName){\r\n    store.addNotification({\r\n      title:\"Success\",\r\n      message:\"Congratulations! You've successfully redeemed \" + rewardName + \" !\",\r\n      type:\"success\",\r\n      insert:\"top\",\r\n      container:\"top-center\",\r\n      animationIn:[\"animated\",\"fadeIn\"],\r\n      animationOut:[\"animated\",\"fadeOut\"],\r\n      dismiss: {duration:2000},\r\n      dismissable: {click:true}\r\n    });\r\n  }  \r\n\r\n  notifRedeemFail(){\r\n    store.addNotification({\r\n      title:\"Error\",\r\n      message:\"You've insufficient points to redeem this reward. Work harder!\",\r\n      type:\"danger\",\r\n      insert:\"top\",\r\n      container:\"top-center\",\r\n      animationIn:[\"animated\",\"bounceIn\"],\r\n      animationOut:[\"animated\",\"bounceOut\"],\r\n      dismiss: {duration:2000},\r\n      dismissable: {click:true}\r\n    });\r\n  }  \r\n\r\n  handleRedeem = event => {\r\n\r\n    // Get the data\r\n    const rewardID = event.target.getAttribute(\"data-index\");\r\n    const ptsRequired = event.target.getAttribute(\"data-points\");\r\n    const rewardName = event.target.getAttribute(\"data-name\");\r\n    console.log(\"rewardID = \" + rewardID);\r\n    console.log(\"rewardName = \" + rewardName);\r\n    console.log(\"points = \" + ptsRequired);\r\n\r\n    // Store student's points\r\n    const currentPts = this.state.currentPts;\r\n\r\n    // IF student have enough points to redeem\r\n    if(currentPts >= ptsRequired){\r\n\r\n      // Do the calculation\r\n      this.setState({currentPts : (currentPts - ptsRequired)});\r\n\r\n      // Insert reward history\r\n      const IDs = {\r\n        studentID : this.state.studentID,\r\n        rewardID : rewardID\r\n      }\r\n\r\n      const config = {\r\n        headers: {\r\n          'content-type':'application/json'\r\n        }\r\n      }\r\n\r\n      axios.post('https://ades-ca1-project.herokuapp.com/api/rewardHistory', IDs, config)\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n      })\r\n\r\n      // Update student's current points\r\n      const points = {\r\n        points : currentPts\r\n      }\r\n\r\n      axios.put('https://ades-ca1-project.herokuapp.com/api/point/' + this.state.studentID, points, config )\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        this.notiRedeemSuccess(rewardName);\r\n        window.alert(\"Reward redeemed successfully\");\r\n      })\r\n\r\n    // ELSE student dont have enough points\r\n    }else{\r\n      this.notifRedeemFail();\r\n      window.alert(\"Insufficient points ! Work harder and earn more points !\");\r\n    }\r\n  \r\n  }\r\n\r\n  render() {\r\n      const data = this.state.data;\r\n    return (\r\n        <div>\r\n            <h1>Rewards</h1>\r\n            <div className=\"viewRewards\">\r\n            {data && data.map(item =>\r\n                        <tr key={item.rewardID}>\r\n                            <td>{item.rewardName}</td>\r\n                            <td>{item.ptsRequired}</td>\r\n                            <td><img src={item.url} style={{height: 200, width: 200}}></img></td>\r\n                            <td><Button onClick={this.handleRedeem} data-index={item.rewardID} data-name={item.rewardName} data-points={item.ptsRequired}>Redeem</Button></td>\r\n                        </tr>\r\n                    )}\r\n            </div>\r\n      </div>\r\n      \r\n    )\r\n}\r\n}","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\MapOfMaze.js",[],"C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\EditMazeContent.js",[],"C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\RewardAdmin.js",["103","104"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../css/rewardAdmin.css';\r\n\r\nexport default class viewReward extends React.Component {\r\n    state = {\r\n        data: [],\r\n        rewardName: '',\r\n        rewardPoints: '',\r\n        url: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://ades-ca1-project.herokuapp.com/api/rewards')\r\n            .then(res => {\r\n                this.setState({ data: res.data });\r\n            })\r\n    }\r\n\r\n    handleDelete = event => {\r\n        const id = event.target.id;\r\n        axios.delete('https://ades-ca1-project.herokuapp.com/api/rewards/' + id)\r\n            .then(res => {\r\n                window.alert(\"Reward deleted successfully\");\r\n                window.location.reload();\r\n            })\r\n    }\r\n\r\n    handleName = event => {\r\n        this.setState({ rewardName: event.target.value });\r\n    }\r\n\r\n    handlePoints = event => {\r\n        this.setState({ rewardPoints: event.target.value });\r\n    }\r\n\r\n    handleURL = event => {\r\n        this.setState({ url: event.target.files[0], });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        // file upload\r\n        // packing data    \r\n        const storage = getStorage();\r\n        const storageRef = ref(storage, 'img/' + this.state.url.name);\r\n        var file = this.state.url;\r\n        // Create file metadata including the content type\r\n        /** @type {any} */\r\n        const metadata = {\r\n            contentType: this.state.url.type,\r\n        };\r\n        uploadBytes(storageRef, file, metadata);\r\n\r\n        getDownloadURL(storageRef).then((downloadURL) => {\r\n            console.log('File available at', downloadURL);\r\n\r\n            const reward = {\r\n                rewardName: this.state.rewardName,\r\n                ptsRequired: this.state.rewardPoints,\r\n                url: downloadURL\r\n            };\r\n            console.log(\"reward\" + JSON.stringify(reward))\r\n\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                }\r\n            }\r\n\r\n            //axios.post('https://ades-ca1-heroku.herokuapp.com/api/rewards', reward, config )\r\n            axios.post('https://ades-ca1-project.herokuapp.com/api/rewards', reward, config)\r\n                .then(res => {\r\n                    console.log(res);\r\n                    console.log(res.data);\r\n                    window.location.reload();\r\n                })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const data = this.state.data;\r\n        return (\r\n            <div className=\"rewardAdmin\" id=\"body\">\r\n                <div id=\"addReward\">\r\n                    <h1>Reward Administration</h1>\r\n                    <div id=\"divForm\">\r\n                        {/* <h2>Add Reward</h2> */}\r\n                        <form onSubmit={this.handleSubmit} id=\"form\">\r\n                            <label>\r\n                                Reward Name :\r\n            <input type=\"text\" name=\"rewardName\" onChange={this.handleName} />\r\n                            </label>\r\n                            <label>\r\n                                Points Required :\r\n            <input type=\"number\" name=\"ptsRequired\" onChange={this.handlePoints} />\r\n                            </label>\r\n                            <label>\r\n                                Picture URL :\r\n            <input type=\"file\" name=\"url\" onChange={this.handleURL} />\r\n                            </label>\r\n                            <Button type=\"submit\">Add</Button>\r\n                        </form>\r\n                    </div>\r\n                    <div id=\"viewRewards\">\r\n                        {/* <h2>View Rewards</h2> */}\r\n                        <table class=\"table\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Points</th>\r\n                                <th>Picture</th>\r\n                                <th>Edit?</th>\r\n                                <th>Delete?</th>\r\n                            </tr>\r\n                            {data && data.map(item =>\r\n                                <tr key={item.rewardID}>\r\n                                    <td>{item.rewardName}</td>\r\n                                    <td>{item.ptsRequired}</td>\r\n                                    <td><img src={item.url} style={{ height: 230, width: 230 }}></img></td>\r\n                                    <td><button type=\"button\" class=\"btn btn-outline-warning\">Edit</button></td>\r\n                                    <td><button type=\"button\" class=\"btn btn-outline-danger\" id={item.rewardID} onClick={this.handleDelete}>Delete</button></td>\r\n                                </tr>\r\n                            )}\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\MazeAdmin.js",[],"C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\BadgeAdmin.js",[],"C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\Quiz.js",["105","106","107","108","109","110","111"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport $ from 'jquery';\r\n\r\n\r\nexport default class Quiz extends React.Component {\r\n    state = {\r\n        data: [],\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        axios.get(`https://ades-ca1-project.herokuapp.com/api/quiz`)\r\n            .then(res => {\r\n                console.log(res.data.length);\r\n                this.setState({ data: res.data });\r\n                console.log(res.data[0])\r\n                for (var i = 0; i < res.data.length; i++) {\r\n                    var quiz = res.data[i];\r\n                    console.log(\"quizid:\" + quiz.quizID);\r\n                    console.log(\"total Marks:\" + quiz.totalMarks);\r\n                    console.log(\"toalPoints:\" + quiz.totalPoints);\r\n\r\n                    //cpmplie the data that the card needs for its creation\r\n                    var cardInfo = {\r\n                        \"quizID\": quiz.quizID,\r\n                        \"totalMarks\": quiz.totalMarks,\r\n                        \"totalPoints\": quiz.totalPoints\r\n\r\n                    }\r\n                    console.log(\" -----------Card Info data pack-----------\");\r\n                    console.log(cardInfo);\r\n\r\n\r\n\r\n                    var newCard = createCard(cardInfo);\r\n                    $('#users').append(newCard);\r\n\r\n                }\r\n\r\n\r\n            });\r\n\r\n\r\n        function createCard(cardInfo) {\r\n            console.log(cardInfo)\r\n            var card = `\r\n        <div class=\"card\" style=\" width:60% ;margin-right:10px;\">\r\n        <div class=\"card-body\">\r\n           \r\n           \r\n        </div> <p class=\"card-text\" style=\" font-size:20px;margin-left:20px\">Quiz ${cardInfo.quizID}</p>\r\n        <div style=\"margin-left:20px \"> \r\n        <div >\r\n            Total Marks:${cardInfo.totalMarks}\r\n        </div>\r\n        <div >\r\n            Total Points:${cardInfo.totalPoints}\r\n        </div>\r\n        <Link to={\"/EditBadge?id=${cardInfo.quizID}\"}>\r\n                      <Button>Do quiz</Button>\r\n                    </Link>\r\n        \r\n          </div>\r\n        \r\n         </div>\r\n            `;\r\n\r\n            return card;\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    //NEED TO GET STUDENT ID!\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const data = this.state.data;\r\n\r\n        return (\r\n\r\n            <div>\r\n                <div id=\"users\" class=\"row\">\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\EditBadge.js",[],"C:\\Users\\User\\Documents\\GitHub\\ADES\\frontEnd\\src\\components\\MazePopup.js",["112"],"import React, { Component, Fragment} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Modal } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport jQuery from 'jquery';\r\n\r\nexport default class ModalPopup extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal : false,\r\n            newLevel:false,\r\n            studentID : 18,\r\n            currentPts : 0,\r\n            totalPts : 0,\r\n            mazeLvl: 0,\r\n            \r\n        };\r\n    }\r\n    \r\n    componentDidMount(){\r\n        // Get student's points data'\r\n        //axios.get('https://ades-ca1-heroku.herokuapp.com/api/points/' + studentID)\r\n        axios.get('https://ades-ca1-project.herokuapp.com/api/points/' + this.state.studentID)\r\n        .then(res => {\r\n            this.setState({ currentPts : res.data[0].redeemedPts });\r\n            this.setState({ totalPts : res.data[0].totalPts});\r\n            this.setState({ mazeLvl : res.data[0].mazeLvl});\r\n        })\r\n    }\r\n\r\n    isShowModal = (status) => {\r\n        this.handleClose();\r\n        this.setState({ showModal : status});\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.onPopupClose(false,this.props.level);\r\n    }\r\n\r\n    handleComplete = () => {\r\n        // Store student's points\r\n        const quizPts = this.props.point;\r\n        const currentPoints = (this.state.currentPts + quizPts);\r\n        const totalPoints = (this.state.totalPts + quizPts);\r\n       \r\n        const mazeLvl = (parseInt(this.state.mazeLvl) + 1);\r\n    \r\n        // Do the calculation\r\n        this.setState({ currentPts : currentPoints});\r\n        this.setState({ totalPts : totalPoints});\r\n        this.setState({ mazeLvl : mazeLvl});\r\n        // Update student's table\r\n        const data = {\r\n            currentPts : currentPoints,\r\n            totalPts : totalPoints,\r\n            mazeLvl: mazeLvl\r\n        }\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type':'application/json'\r\n            }\r\n        }\r\n\r\n        axios.put('https://ades-ca1-project.herokuapp.com/api/points/' + this.state.studentID, data, config)\r\n        .then(res => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n        })\r\n\r\n        const points = {\r\n            ptsAwarded : quizPts,\r\n            eventID : 2\r\n        }\r\n\r\n        // Insert points history\r\n        axios.post('https://ades-ca1-project.herokuapp.com/api/ptsHistory/' + this.state.studentID, points, config)\r\n        .then(res => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            this.handleClose();\r\n            window.alert(\"Points redeemed successfully\");\r\n            //updating the state \r\n            this.props.onNewLevel(true);\r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n             \r\n        return (\r\n            <Fragment>  \r\n                <Modal show={this.props.showModalPopup} onHide={this.handleClose} id={this.props.level} \r\n                    size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>  \r\n                    <Modal.Header closeButton>  \r\n                        <Modal.Title id=\"sign-in-title\">  \r\n                            Level {this.props.level}\r\n                         </Modal.Title>  \r\n                    </Modal.Header>  \r\n                    <Modal.Body>  \r\n                        <hr />  \r\n                        <div className=\"Quiz\"> \r\n                        <div>Points : {this.props.point} </div>\r\n                        <Button onClick={this.handleComplete} >Complete</Button>\r\n                        </div>  \r\n                    </Modal.Body>  \r\n                </Modal >  \r\n            </Fragment >  \r\n        )\r\n    }\r\n}",{"ruleId":"113","severity":1,"message":"114","line":27,"column":10,"nodeType":"115","messageId":"116","endLine":27,"endColumn":14},{"ruleId":"113","severity":1,"message":"117","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"118","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":21},{"ruleId":"113","severity":1,"message":"119","line":3,"column":23,"nodeType":"115","messageId":"116","endLine":3,"endColumn":27},{"ruleId":"113","severity":1,"message":"120","line":4,"column":39,"nodeType":"115","messageId":"116","endLine":4,"endColumn":46},{"ruleId":"113","severity":1,"message":"121","line":4,"column":53,"nodeType":"115","messageId":"116","endLine":4,"endColumn":60},{"ruleId":"113","severity":1,"message":"122","line":100,"column":21,"nodeType":"115","messageId":"116","endLine":100,"endColumn":27},{"ruleId":"123","severity":1,"message":"124","line":16,"column":1,"nodeType":"125","messageId":"126","endLine":20,"endColumn":14},{"ruleId":"113","severity":1,"message":"127","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":13},{"ruleId":"113","severity":1,"message":"114","line":145,"column":19,"nodeType":"115","messageId":"116","endLine":145,"endColumn":23},{"ruleId":"113","severity":1,"message":"119","line":4,"column":10,"nodeType":"115","messageId":"116","endLine":4,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":127,"column":33,"nodeType":"130","endLine":127,"endColumn":87},{"ruleId":"113","severity":1,"message":"119","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":122,"column":41,"nodeType":"130","endLine":122,"endColumn":97},{"ruleId":"113","severity":1,"message":"119","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"113","severity":1,"message":"131","line":4,"column":10,"nodeType":"115","messageId":"116","endLine":4,"endColumn":20},{"ruleId":"113","severity":1,"message":"132","line":4,"column":22,"nodeType":"115","messageId":"116","endLine":4,"endColumn":25},{"ruleId":"113","severity":1,"message":"133","line":4,"column":27,"nodeType":"115","messageId":"116","endLine":4,"endColumn":38},{"ruleId":"113","severity":1,"message":"134","line":4,"column":40,"nodeType":"115","messageId":"116","endLine":4,"endColumn":54},{"ruleId":"113","severity":1,"message":"135","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":14},{"ruleId":"113","severity":1,"message":"136","line":92,"column":15,"nodeType":"115","messageId":"116","endLine":92,"endColumn":19},{"ruleId":"113","severity":1,"message":"137","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":14},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'Component' is defined but never used.","'useNavigate' is defined but never used.","'Link' is defined but never used.","'Sidebar' is defined but never used.","'NavItem' is defined but never used.","'streak' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getStorage' is defined but never used.","'ref' is defined but never used.","'uploadBytes' is defined but never used.","'getDownloadURL' is defined but never used.","'Button' is defined but never used.","'data' is assigned a value but never used.","'jQuery' is defined but never used."]