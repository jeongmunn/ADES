[{"/Users/isaactan17/Desktop/ADES/frontEnd/src/index.js":"1","/Users/isaactan17/Desktop/ADES/frontEnd/src/App.js":"2","/Users/isaactan17/Desktop/ADES/frontEnd/src/reportWebVitals.js":"3","/Users/isaactan17/Desktop/ADES/frontEnd/src/firebase.js":"4","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/SignIn.js":"5","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/RewardAdmin.js":"6","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/BadgeAdmin.js":"7","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/EditMazeContent.js":"8","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/MazeAdmin.js":"9","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/EditBadge.js":"10","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/StudentDashboard.js":"11","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/Profile.js":"12","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/TeacherDashboard.js":"13","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/StudentPointsHistory.js":"14","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/Quiz.js":"15","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/MapOfMaze.js":"16","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/MazePopup.js":"17","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/Loading.js":"18","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/StudentReward.js":"19","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/TeacherLeaderboard.js":"20","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/RewardPopup.js":"21","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/QuizPopup.js":"22","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/StudentBadges.js":"23","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/TeacherViewStudentProgress.js":"24"},{"size":613,"mtime":1637510053204,"results":"25","hashOfConfig":"26"},{"size":2637,"mtime":1637725229258,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1636873936110,"results":"28","hashOfConfig":"26"},{"size":867,"mtime":1636873936109,"results":"29","hashOfConfig":"26"},{"size":10712,"mtime":1637719228916,"results":"30","hashOfConfig":"26"},{"size":9882,"mtime":1637724731752,"results":"31","hashOfConfig":"26"},{"size":8324,"mtime":1637738877173,"results":"32","hashOfConfig":"26"},{"size":2763,"mtime":1637722112622,"results":"33","hashOfConfig":"26"},{"size":3570,"mtime":1637729198869,"results":"34","hashOfConfig":"26"},{"size":6035,"mtime":1637736522402,"results":"35","hashOfConfig":"26"},{"size":15497,"mtime":1637750831943,"results":"36","hashOfConfig":"26"},{"size":4305,"mtime":1637730767066,"results":"37","hashOfConfig":"26"},{"size":1256,"mtime":1637429791401,"results":"38","hashOfConfig":"26"},{"size":2607,"mtime":1637724707171,"results":"39","hashOfConfig":"26"},{"size":5620,"mtime":1637748115893,"results":"40","hashOfConfig":"26"},{"size":13192,"mtime":1637724559707,"results":"41","hashOfConfig":"26"},{"size":3493,"mtime":1637723838418,"results":"42","hashOfConfig":"26"},{"size":327,"mtime":1637721941337,"results":"43","hashOfConfig":"26"},{"size":5427,"mtime":1637724688993,"results":"44","hashOfConfig":"26"},{"size":2984,"mtime":1637731061347,"results":"45","hashOfConfig":"26"},{"size":4493,"mtime":1637716805920,"results":"46","hashOfConfig":"26"},{"size":3099,"mtime":1637750183548,"results":"47","hashOfConfig":"26"},{"size":3681,"mtime":1637740682193,"results":"48","hashOfConfig":"26"},{"size":1552,"mtime":1637653772855,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6jqjjq",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},"/Users/isaactan17/Desktop/ADES/frontEnd/src/index.js",[],"/Users/isaactan17/Desktop/ADES/frontEnd/src/App.js",["111"],"import React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Loading from './components/Loading';\nimport SignIn from './components/SignIn';\nimport StudentDashboard from './components/StudentDashboard';\nimport StudentPointsHistory from './components/StudentPointsHistory';\nimport StudentBadges from './components/StudentBadges'\nimport StudentReward from './components/StudentReward';\nimport Profile from './components/Profile';\nimport TeacherDashboard from './components/TeacherDashboard';\nimport ViewLeaderboard from './components/TeacherLeaderboard';\nimport BadgeAdmin from './components/BadgeAdmin';\nimport TeacherViewStudentProgress from './components/TeacherViewStudentProgress'\nimport RewardAdmin from './components/RewardAdmin';\nimport MazeAdmin from './components/MazeAdmin';\nimport Quiz from './components/Quiz';\nimport MapOfMaze from './components/MapOfMaze';\nimport ReactNotification from 'react-notifications-component';\nimport {\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { auth } from './firebase.js';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-notifications-component/dist/theme.css';\n\nfunction App() {\n  const [user, setUser] = useState({});\n  onAuthStateChanged(auth, (currentUser) => {\n    try {\n      setUser(currentUser);\n    } catch (error) {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n    }\n  });\n\n  return (\n    <>\n    <ReactNotification />\n      <Routes>\n        <Route path=\"/\" element={<SignIn />}></Route>\n        <Route path=\"/loading\" element={<Loading />}></Route>\n        <Route path=\"/studentDashboard\" element={<StudentDashboard/>}></Route>\n        <Route path=\"/studentPoints\" element={<StudentPointsHistory/>}></Route>\n        <Route path=\"/studentBadges\" element={<StudentBadges/>}></Route>\n        <Route path=\"/studentReward\" element={<StudentReward/>}></Route>\n        <Route path=\"/profile\" element={<Profile />}></Route>\n        <Route path=\"/teacherDashboard\" element={<TeacherDashboard/>}></Route>\n        <Route path=\"/leaderboardAdmin\" element={<ViewLeaderboard/>}></Route>\n        <Route path=\"/studentAdmin\" element={<TeacherViewStudentProgress/>}></Route>\n        <Route path=\"/badgesAdmin\" element={<BadgeAdmin/>}></Route>\n        <Route path=\"/rewardsAdmin\" element={<RewardAdmin/>}></Route>\n        <Route path=\"/mazeAdmin\" element={<MazeAdmin/>}></Route>\n        <Route path=\"/quiz\" element={<Quiz/>}></Route>\n        <Route path=\"/mapOfMaze\" element={<MapOfMaze/>}></Route>\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","/Users/isaactan17/Desktop/ADES/frontEnd/src/reportWebVitals.js",[],"/Users/isaactan17/Desktop/ADES/frontEnd/src/firebase.js",[],"/Users/isaactan17/Desktop/ADES/frontEnd/src/components/SignIn.js",["112","113"],"import '../styling2.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport {\n    onAuthStateChanged,\n    signOut,\n    createUserWithEmailAndPassword,\n    sendPasswordResetEmail,\n    signInWithEmailAndPassword\n} from \"firebase/auth\";\nimport { auth } from '../firebase.js';\nimport { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// import TabPanel from '@mui/lab/TabPanel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport axios from 'axios';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\n\n\nconst SignIn = () => {\n    let navigate = useNavigate();\n    const loginEmailInput = useRef(\"\");\n    const loginPasswordInput = useRef(\"\");\n    const registerEmailInput = useRef(\"\");\n    const registerPasswordInput = useRef(\"\");\n    const emailInput = useRef(\"\");\n    // const [registerEmail, setRegisterEmail] = useState(\"\");\n    // const [registerPassword, setRegisterPassword] = useState(\"\");\n    // const [loginEmail, setLoginEmail] = useState(\"\");\n    // const [loginPassword, setLoginPassword] = useState(\"\");\n    // const [email, setEmail] = useState(\"\");\n    const [value, setValue] = useState(0);\n\n    // Similar to componentDidMount and componentDidUpdate:\n    useEffect(() => {\n        onAuthStateChanged(auth, (currentUser) => {\n            if (currentUser) {\n                const config = {\n                    headers: {\n                        'content-type': 'application/json'\n                    }\n                }\n                axios.get(`https://ades-ca1-project.herokuapp.com/api/userType/` + currentUser.uid, config)\n                    .then(res => {\n                        if (res.data.type === 1) {\n                            navigate('/studentDashboard');\n                        } else if (res.data.type === 2) {\n                            navigate('/teacherDashboard');\n                        }\n                    });\n            }\n        });\n    });\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n\n    const register = async () => {\n        try {\n            const user = await createUserWithEmailAndPassword(\n                auth,\n                registerEmailInput.current.value,\n                registerPasswordInput.current.value\n            );\n            const config = {\n                headers: {\n                    'content-type': 'application/json'\n                }\n            }\n\n            var dateData = JSON.stringify(user.user.metadata.createdAt);\n            dateData = parseInt(JSON.parse(dateData));\n            const personalDetails = {\n                name: JSON.parse(JSON.stringify(user.user.email)),\n                Uid: JSON.parse(JSON.stringify(user.user.uid)),\n                streaks: 0,\n                totalPts: 0,\n                mazeLvl: 0,\n                redeemedPts: 0,\n                type: 1,\n                lastLogin: dateData\n            };\n            axios.post('https://ades-ca1-project.herokuapp.com/api/newStudent', personalDetails, config)\n                .then(res => {\n                    console.log(res);\n                    console.log(res.data);\n                    navigate('/studentDashboard');\n                })\n        } catch (error) {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            console.log(JSON.stringify(errorCode));\n            console.log(JSON.stringify(errorMessage));\n        }\n    };\n\n    const login = async () => {\n        try {\n            const user = await signInWithEmailAndPassword(\n                auth,\n                loginEmailInput.current.value,\n                loginPasswordInput.current.value\n            );\n            const config = {\n                headers: {\n                    'content-type': 'application/json'\n                }\n            }\n            var uid = JSON.parse(JSON.stringify(user.user.uid));\n            axios.get(`https://ades-ca1-project.herokuapp.com/api/userType/` + uid, config)\n                .then(res => {\n                    if (res.data.type === 1) {\n                        navigate('/studentDashboard');\n                    } else if (res.data.type === 2) {\n                        navigate('/teacherDashboard');\n                    } else {\n                        navigate('/');\n                    }\n                })\n        } catch (error) {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            console.log(JSON.stringify(errorCode));\n            console.log(JSON.stringify(errorMessage));\n        }\n    };\n\n    const forgotPassword = async () => {\n        try {\n            const user = await sendPasswordResetEmail(\n                auth,\n                emailInput.current.value);\n        } catch (error) {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            console.log(JSON.stringify(errorCode));\n            console.log(JSON.stringify(errorMessage));\n        }\n    };\n\n    return (\n        <div className=\"signin\">\n            <h1>Authentication</h1>\n            <Box sx={{ width: '100%' }}>\n                <Box sx={{ borderColor: 'divider' }}>\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        textColor=\"secondary\"\n                        indicatorColor=\"secondary\"\n                        aria-label=\"secondary tabs example\"\n                        centered\n                    >\n                        <Tab label=\"Sign In\" {...a11yProps(0)} />\n                        <Tab label=\"Sign Up\" {...a11yProps(1)} />\n                        <Tab label=\"Forgot Password\" {...a11yProps(2)} />\n                    </Tabs>\n                    <TabPanel value={value} index={0}>\n                        {/* <input placeholder=\"email\" type=\"email\" onChange={(event) => {\n                            setLoginEmail(event.target.value);\n                        }} /> */}\n                        {/* <input placeholder=\"password\" type=\"password\" onChange={(event) => {\n                            setLoginPassword(event.target.value);\n                        }} /> */}\n                        <TextField\n                            required\n                            fullWidth\n                            inputRef={loginEmailInput}\n                            id=\"outlined-required\"\n                            label=\"Email\"\n                            margin=\"dense\"\n                            type=\"email\"\n                        />\n                        <TextField\n                            required\n                            fullWidth\n                            inputRef={loginPasswordInput}\n                            id=\"outlined-password-input\"\n                            label=\"Password\"\n                            margin=\"dense\"\n                            type=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <Button sx={{ background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)', color: 'white', paddingTop: '10px', paddingBottom: '10px', marginTop: '10px', width: '100%' }} variant=\"contained\" onClick={login}> Sign In</Button>\n                    </TabPanel>\n                    <TabPanel value={value} index={1}>\n                        {/* <input placeholder=\"email\" type=\"email\" onChange={(event) => {\n                            setRegisterEmail(event.target.value);\n                        }} />\n                        <input placeholder=\"password\" type=\"password\" onChange={(event) => {\n                            setRegisterPassword(event.target.value);\n                        }} /> */}\n                        <TextField\n                            required\n                            fullWidth\n                            inputRef={registerEmailInput}\n                            id=\"outlined-required\"\n                            label=\"Email\"\n                            margin=\"dense\"\n                            type=\"email\"\n                        />\n                        <TextField\n                            required\n                            fullWidth\n                            inputRef={registerPasswordInput}\n                            id=\"outlined-password-input\"\n                            label=\"Password\"\n                            margin=\"dense\"\n                            type=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <Button sx={{ background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)', color: 'white', paddingTop: '10px', paddingBottom: '10px', marginTop: '10px', width: '100%' }} variant=\"contained\" onClick={register}> Sign Up</Button>\n                    </TabPanel>\n                    <TabPanel value={value} index={2}>\n                        {/* <input placeholder=\"email\" type=\"email\" onChange={(event) => {\n                            setEmail(event.target.value);\n                        }} /> */}\n                        <TextField\n                            required\n                            fullWidth\n                            inputRef={emailInput}\n                            id=\"outlined-required\"\n                            label=\"Email\"\n                            margin=\"dense\"\n                            type=\"email\"\n                        />\n                        <Button sx={{ background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)', color: 'white', paddingTop: '10px', paddingBottom: '10px', marginTop: '10px', width: '100%' }} variant=\"contained\" onClick={forgotPassword}> Forgot Password</Button>\n                    </TabPanel>\n                </Box>\n            </Box>\n        </div>\n    )\n}\nexport default SignIn;\n","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/RewardAdmin.js",["114","115"],"import React from 'react';\nimport axios from 'axios';\nimport { store } from 'react-notifications-component';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { signOut } from \"firebase/auth\";\nimport { auth } from '../firebase.js';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport { Row, Col } from 'react-bootstrap';\nimport ModalPopup from './RewardPopup';\nimport '../css/rewardAdmin.css';\n\nexport default class viewReward extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            showModalPopup: false,\n            data: [],\n            rewardName: '',\n            rewardPoints: '',\n            originUrl: '',\n            originName: '',\n            originPoints: '',\n            url: '',\n            rewardID: 0,\n            uid: ''\n        }\n    }\n\n    componentDidMount() {\n        // Auth\n        auth.onAuthStateChanged((user) => {\n            // IF there's user\n            if (user) {\n                console.log(\"User is Signed IN \");\n                this.setState({ uid: user.uid });\n                const config = {\n                    headers: {\n                        'content-type': 'application/json'\n                    }\n                }\n\n                // Get the user type\n                axios.get(`https://ades-ca1-project.herokuapp.com/api/userType/` + this.state.uid, config)\n                    .then(res => {\n                        // IF is student\n                        if (res.data.type === 1) {\n                            window.location.replace('https://ades-ca1-project.herokuapp.com/quizment/studentDashboard');\n                            // IF is teacher\n                        } else if (res.data.type === 2) {\n                            // GET all rewards data\n                            axios.get('https://ades-ca1-project.herokuapp.com/api/rewards')\n                                .then(res => {\n                                    this.setState({ data: res.data });\n                                })\n                            // ELSE kick them out\n                        } else {\n                            window.location.replace('https://ades-ca1-project.herokuapp.com/quizment');\n                        }\n                    })\n                // ELSE kick them out\n            } else {\n                console.log(\"THERE IS NO USER\");\n                signOut(auth);\n                window.location.replace('https://ades-ca1-project.herokuapp.com/quizment');\n            }\n        });\n    }\n\n    notiUploadSuccess() {\n        store.addNotification({\n            title: \"Success\",\n            message: \"Reward uploaded successfully !\",\n            type: \"success\",\n            insert: \"top\",\n            container: \"top-center\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: { duration: 2000 },\n            dismissable: { click: true }\n        });\n    }\n\n    isShowPopup = (status, id, name, points, url) => {\n        this.setState({ showModalPopup: status });\n        this.setState({ rewardID: id });\n        this.setState({ originName: name });\n        this.setState({ originPoints: points });\n        this.setState({ originUrl: url });\n    }\n\n    handleDelete = event => {\n        const id = event.target.id;\n        axios.delete('https://ades-ca1-project.herokuapp.com/api/rewards/' + id)\n            .then(res => {\n                window.alert(\"Reward deleted successfully\");\n                window.location.reload();\n            })\n    }\n\n    handleName = event => {\n        this.setState({ rewardName: event.target.value });\n    }\n\n    handlePoints = event => {\n        this.setState({ rewardPoints: event.target.value });\n    }\n\n    handleURL = event => {\n        this.setState({ url: event.target.files[0], });\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        if (this.state.url == '') {\n            const reward = {\n                rewardName: this.state.rewardName,\n                ptsRequired: this.state.rewardPoints,\n                url: 'https://firebasestorage.googleapis.com/v0/b/quizment-ae4a6.appspot.com/o/img%2Fdefault-image.png?alt=media&token=369e00f7-926d-4b3c-abbb-958828b303d5'\n            };\n            console.log(\"reward\" + JSON.stringify(reward));\n\n            const config = {\n                headers: {\n                    'content-type': 'application/json'\n                }\n            }\n\n            axios.post('https://ades-ca1-project.herokuapp.com/api/rewards', reward, config)\n                .then(res => {\n                    console.log(res);\n                    console.log(res.data);\n                    window.location.reload();\n                    this.notiUploadSuccess();\n                })\n        } else {\n            // file upload\n            // packing data    \n            const storage = getStorage();\n            const storageRef = ref(storage, 'img/' + this.state.url.name);\n            var file = this.state.url;\n            // Create file metadata including the content type\n            /** @type {any} */\n            const metadata = {\n                contentType: this.state.url.type,\n            };\n            uploadBytes(storageRef, file, metadata);\n\n            getDownloadURL(storageRef).then((downloadURL) => {\n                console.log('File available at', downloadURL);\n\n                const reward = {\n                    rewardName: this.state.rewardName,\n                    ptsRequired: this.state.rewardPoints,\n                    url: downloadURL\n                };\n                console.log(\"reward\" + JSON.stringify(reward))\n                const config = {\n                    headers: {\n                        'content-type': 'application/json'\n                    }\n                }\n\n                axios.post('https://ades-ca1-project.herokuapp.com/api/rewards', reward, config)\n                    .then(res => {\n                        console.log(res);\n                        console.log(res.data);\n                        window.location.reload();\n                        this.notiUploadSuccess();\n                    })\n            })\n        }\n    }\n\n    render() {\n        const data = this.state.data;\n        return (\n            <div className=\"rewardAdmin\">\n                <h1>Reward Administration</h1>\n                <Accordion>\n                    <Accordion.Item eventKey=\"0\">\n                        <Accordion.Header>\n                            <Button variant=\"outline-info\" >Add Reward</Button>\n                        </Accordion.Header>\n                        <Accordion.Body>\n                            <div className=\"uploadReward\">\n                                <Form onSubmit={this.handleSubmit} className=\"rewardForm\">\n                                    <Row>\n                                        <Col xs={12} md={8} lg={4}>\n                                            <Form.Control placeholder=\"Reward Name\" onChange={this.handleName} required />\n                                        </Col>\n                                        <Col xs={12} md={5} lg={3}>\n                                            <Form.Control type=\"number\" placeholder=\"Points Required\" onChange={this.handlePoints} required />\n                                        </Col>\n                                        <Col xs={12} md={5} lg={3}>\n                                            <Form.Control type=\"file\" onChange={this.handleURL} />\n                                        </Col>\n                                        <Col xs={12} md={2} lg={2}>\n                                            <Button variant=\"primary\" type=\"submit\">Add</Button>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n                <div id=\"viewRewards\">\n                    <Table responsive=\"sm\" className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Points</th>\n                                <th>Picture</th>\n                                <th>Edit?</th>\n                                <th>Delete?</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {data && data.map(item =>\n                                <tr key={item.rewardID}>\n                                    <td>{item.rewardName}</td>\n                                    <td>{item.ptsRequired}</td>\n                                    <td><img src={item.url} style={{ height: 180, width: 180 }}></img></td>\n                                    <td><Button type=\"button\" variant=\"warning\" onClick={() => this.isShowPopup(true, item.rewardID, item.rewardName, item.ptsRequired, item.url)}>Edit</Button></td>\n                                    <td><Button type=\"button\" variant=\"danger\" id={item.rewardID} onClick={this.handleDelete}>Delete</Button></td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </Table>\n                </div>\n                <ModalPopup\n                    showModalPopup={this.state.showModalPopup}\n                    onPopupClose={this.isShowPopup}\n                    rewardID={this.state.rewardID}\n                    rewardName={this.state.originName}\n                    rewardPoints={this.state.originPoints}\n                    url={this.state.originUrl}\n                ></ModalPopup>\n            </div>\n        )\n    }\n}","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/BadgeAdmin.js",["116","117"],"import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport '../css/Table&Add.css';\nimport { Row, Col } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport ModalPopup from './EditBadge';\nimport { signOut } from \"firebase/auth\";\nimport { auth } from '../firebase.js';\nexport default class BadgeAdmin extends React.Component {\n  state = {\n    data: [],\n    showModalPopup: false,\n    class: [],\n    name: '',\n    requirements: '',\n    pic_url: '',\n    badgeClassID: '',\n    badgeID: '',\n    uid: '',\n    id: 0\n  }\n\n  componentDidMount() {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(\"User is Signed IN \");\n        this.setState({ uid: user.uid });\n        const config = {\n          headers: {\n            'content-type': 'application/json'\n          }\n        }\n\n        axios.get(`https://ades-ca1-project.herokuapp.com/api/userType/` + this.state.uid, config)\n          .then(res => {\n            if (res.data.type === 1) {\n              window.location.replace('https://ades-ca1-project.herokuapp.com/quizment/studentDashboard');\n\n            } else if (res.data.type === 2) {\n              // area to put your axios \n            } else {\n              window.location.replace('https://ades-ca1-project.herokuapp.com/quizment');\n            }\n          })\n      } else {\n        console.log(\"THERE IS NO USER\");\n        signOut(auth);\n        window.location.replace('https://ades-ca1-project.herokuapp.com/quizment');\n      }\n    });\n\n\n    axios.get(`https://ades-ca1-project.herokuapp.com/api/badges`)\n      .then(res => {\n        console.log(res.data.length);\n\n        this.setState({ data: res.data });\n      })\n\n    axios.get(`https://ades-ca1-project.herokuapp.com/api/badgeClass`)\n      .then(res => {\n        console.log(res.data.length);\n\n        this.setState({ class: res.data });\n      })\n  }\n\n  isShowPopup = (status, badgeID, name, requirements, className, pic_url) => {\n    this.setState({ showModalPopup: status });\n    this.setState({ badgeID: badgeID });\n    this.setState({ name: name });\n    this.setState({ requirements: requirements });\n    this.setState({ badgeClassID: className });\n    this.setState({ pic_url: pic_url });\n  }\n  handleName = event => {\n    this.setState({ name: event.target.value });\n  }\n\n  handleRequirement = event => {\n    this.setState({ requirements: event.target.value });\n  }\n\n\n\n  handleURL = event => {\n    this.setState({ pic_url: event.target.files[0], });\n  }\n  handleBadgeClassID = event => {\n    this.setState({ badgeClassID: event.target.value })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    //data extraction (combining data)\n    // file upload\n    if (this.state.pic_url == '') {\n      const badge = {\n        name: this.state.name,\n        requirements: this.state.requirements,\n        badgeClassID: this.state.badgeClassID,\n        pic_url: 'https://firebasestorage.googleapis.com/v0/b/quizment-ae4a6.appspot.com/o/img%2Fdefault-image.png?alt=media&token=369e00f7-926d-4b3c-abbb-958828b303d5'\n      };\n\n\n      const config = {\n        headers: {\n          'content-type': 'application/json'\n        }\n      }\n\n      axios.post('https://ades-ca1-project.herokuapp.com/api/newBadge', badge, config)\n        .then(res => {\n          console.log(res);\n          console.log(res.data);\n          window.location.reload();\n        })\n\n    } else {\n      const storage = getStorage();\n      const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\n      var file = this.state.pic_url;\n      // Create file metadata including the content type\n      /** @type {any} */\n      const metadata = {\n        contentType: this.state.pic_url.type,\n      };\n\n      uploadBytes(storageRef, file, metadata);\n\n      getDownloadURL(storageRef).then((downloadURL) => {\n        console.log('File available at', downloadURL);\n\n        var bcID = document.getElementById(\"dropDown\");\n        var bID = bcID.value;\n        var badgeClassID = parseInt(bID);\n        console.log(badgeClassID + \"classBADGE\")\n        const badge = {\n          name: this.state.name,\n          requirements: this.state.requirements,\n          pic_url: downloadURL,\n          badgeClassID: badgeClassID\n        };\n        console.log(\"BADGEEEE\" + JSON.stringify(badge))\n\n        const config = {\n          headers: {\n            'content-type': 'application/json'\n          }\n        }\n        axios.post('https://ades-ca1-project.herokuapp.com/api/newBadge', badge, config)\n          .then(res => {\n            console.log(res);\n            console.log(res.data);\n            window.location.reload();\n          })\n      });\n    }\n\n  }\n\n  render() {\n    const data = this.state.data;\n    const data2 = this.state.class;\n    return (\n\n      <div id=\"body\">\n        <Accordion>\n          <Accordion.Item eventKey=\"0\">\n            <Accordion.Header>\n              <Button variant=\"outline-info\" >Add Reward</Button>\n            </Accordion.Header>\n            <Accordion.Body>\n              <div className=\"uploadReward\">\n                <Form onSubmit={this.handleSubmit} className=\"badgeForm\" if=\"form\">\n                  <Row>\n                    <Col xs={12} md={8} lg={4}>\n                      <Form.Control type=\"text\" name=\"name\" onChange={this.handleName} required />\n                    </Col>\n                    <Col xs={12} md={5} lg={3}>\n                      <Form.Control type=\"number\" name=\"requirements\" onChange={this.handleRequirement} required />\n                    </Col>\n                    <Col xs={12} md={5} lg={3}>\n                      <Form.Control type=\"file\" onChange={this.handleURL} />\n                    </Col>\n                    <Col>\n                      <label>\n                        Badge Class ID: </label>\n                      <select name=\"badgeClassID\" onChange={this.handleBadgeClassID} id=\"dropDown\">\n                        <option value=\"1\">Air</option>\n                        <option value=\"2\">Water</option>\n                        <option value=\"3\">Fire</option>\n                        <option value=\"4\">Geo</option>\n                      </select>\n                    </Col>\n                    <Col xs={12} md={2} lg={2}>\n                      <Button variant=\"primary\" type=\"submit\">Add</Button>\n                    </Col>\n                  </Row>\n                </Form>\n              </div>\n            </Accordion.Body>\n          </Accordion.Item>\n        </Accordion>\n\n\n        <div> \n          \n          <h2>Badge Class</h2>\n          <table class=\"table\">\n            <tr>\n              <th>Class Name</th>\n              <th>Describtion </th>\n\n            </tr>\n            {data2 && data2.map(item =>\n              <tr id='tableRow' class=\"spaceUnder\">\n                <td>{item.className}</td>\n                <td>{item.classDescription}</td>\n\n              </tr>\n            )}\n          </table>\n        </div>\n        <div>\n          <h2>View Badges</h2>\n          <table class=\"table\">\n            <tr>\n              <th>Badge Name</th>\n              <th>Requirements</th>\n              <th>badgeClass</th>\n              <th>Picture</th>\n            </tr>\n            {data && data.map(item2 =>\n              <tr key={item2.badgeID} id='tableRow' class=\"spaceUnder\">\n                <td>{item2.name}</td>\n                <td>{item2.requirements}</td>\n                <td>{item2.className}</td>\n                <td><img src={item2.pic_url} style={{ height: 200, width: 200 }} alt=\"\"></img></td>\n                <td><Button type=\"button\" variant=\"warning\" onClick={() => this.isShowPopup(true, item2.badgeID, item2.name, item2.requirements, item2.className, item2.pic_url)}>Edit</Button></td>\n              </tr>\n            )}\n          </table>\n        </div>\n        <ModalPopup\n          showModalPopup={this.state.showModalPopup}\n          onPopupClose={this.isShowPopup}\n          badgeID={this.state.badgeID}\n          name={this.state.name}\n          requirements={this.state.requirements}\n          className={this.state.badgeClassID}\n          pic_url={this.state.pic_url}></ModalPopup>\n    \n        \n      </div >\n    )\n  }\n}","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/EditMazeContent.js",["118","119","120","121","122"],"import React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport { Row, Col } from 'react-bootstrap';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport '../css/badgemazeEdit.css';\nimport { Modal } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\n\nexport default class EditMazeContent extends React.Component {\n\n    state = {\n\n        points: ''\n\n    }\n\n\n\n    handlePoints = event => {\n        this.setState({ points: event.target.value, });\n    }\n\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        const mazeContent = {\n\n            points: this.state.points\n\n        };\n\n        const config = {\n            headers: {\n                'content-type': 'application/json'\n            }\n        }\n        const lvl = parseInt(this.props.mazeLvl)\n        const baseUrl = \"https://ades-ca1-project.herokuapp.com/api/\";\n\n\n        axios.put(`${baseUrl}/mazeContent/${lvl}`, mazeContent, config)\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n                window.location.reload();\n            })\n    }\n\n    handleClose = () => {\n        this.props.onPopupClose(false, this.props.rewardID, '', '', '');\n    }\n    render() {\n        return (\n            <div id=\"bodyEdit\">\n\n                <Fragment>\n                    <Modal show={this.props.showModalPopup} onHide={this.handleClose}\n                        size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                        <Modal.Header closeButton>\n                            <Modal.Title>\n                                Edit Maze Level {this.props.mazeLvl}\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"editReward\">\n                                <Form onSubmit={this.handleSubmit} className=\"editMazeForm\">\n                                    <Row>\n\n                                        <Col xs={12} md={5} >\n                                            <Form.Control type=\"number\" placeholder={this.props.points} onChange={this.handlePoints} required />\n                                        </Col>\n\n                                        <Col xs={12} md={2} lg={2}>\n                                            <Button variant=\"primary\" type=\"submit\">Edit</Button>\n                                        </Col>\n\n                                    </Row>\n                                </Form>\n                            </div>\n                        </Modal.Body>\n                    </Modal>\n                </Fragment>\n            </div>\n        )\n    }\n}","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/MazeAdmin.js",["123"],"import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport '../css/Table&Add.css';\nimport ModalPopup from './EditMazeContent';\nimport { signOut } from \"firebase/auth\";\nimport { auth } from '../firebase.js';\nexport default class MazeAdmin extends React.Component {\n\n    state = {\n        data: [],\n        mazeLvl: '',\n        points: '',\n        showModalPopup: false\n    }\n\n    componentDidMount() {\n        auth.onAuthStateChanged((user) => {\n            if (user) {\n                console.log(\"User is Signed IN \");\n                this.setState({ uid: user.uid });\n                const config = {\n                    headers: {\n                        'content-type': 'application/json'\n                    }\n                }\n\n                axios.get(`https://ades-ca1-project.herokuapp.com/api/userType/` + this.state.uid, config)\n                    .then(res => {\n                        if (res.data.type === 1) {\n                            window.location.replace('https://ades-ca1-project.herokuapp.com/quizment/studentDashboard');\n\n                        } else if (res.data.type === 2) {\n                            // area to put your axios \n                        } else {\n                            window.location.replace('https://ades-ca1-project.herokuapp.com/quizment');\n                        }\n                    })\n            } else {\n                console.log(\"THERE IS NO USER\");\n                signOut(auth);\n                window.location.replace('https://ades-ca1-project.herokuapp.com/quizment');\n            }\n        });\n\n        axios.get('https://ades-ca1-project.herokuapp.com/api/mazeContent')\n            .then(res => {\n                this.setState({ data: res.data });\n            })\n    }\n\n\n    isShowPopup = (status, mazeLvl, points) => {\n        this.setState({ showModalPopup: status });\n        this.setState({ mazeLvl: mazeLvl });\n        this.setState({ points: points });\n\n    }\n\n    render() {\n        const data = this.state.data;\n        return (\n            <div id=\"body\">\n                <div id=\"div\">\n                    <div className=\"viewMazeLvl\">\n                        <h3 className=\"p-3 text-center\">Map of Maze Content</h3>\n\n                        <table className=\"table table-striped table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Maze Level</th>\n                                    <th>Points</th>\n\n                                </tr>\n                            </thead>\n                            {data && data.map(item =>\n                                <tr id='tableRow' class=\"spaceUnder\">\n                                    <td>{item.mazeLvl}</td>\n                                    <td>{item.points}</td>\n                                    <td>\n                                        <Button type=\"button\" variant=\"warning\" onClick={() => this.isShowPopup(true, item.mazeLvl, item.points)}>Edit</Button>\n                                    </td>\n                                </tr>\n                            )}\n                        </table>\n                    </div>\n                </div>\n                <ModalPopup\n                    showModalPopup={this.state.showModalPopup}\n                    onPopupClose={this.isShowPopup}\n                    mazeLvl={this.state.mazeLvl}\n                    points={this.state.points}\n                ></ModalPopup>\n            </div>\n        )\n    }\n}","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/EditBadge.js",["124","125"],"import React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport { Row, Col } from 'react-bootstrap';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport '../css/badgemazeEdit.css';\nimport { Modal } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nexport default class EditBadge extends React.Component {\n\n    state = {\n        showModal: false,\n        data: [],\n        name: '',\n        requirements: '',\n        pic_url: '',\n        badgeClassID: ''\n    }\n\n\n\n    handleName = event => {\n        this.setState({ name: event.target.value });\n    }\n\n    handleRequirement = event => {\n        this.setState({ requirements: event.target.value });\n    }\n\n    handleURL = event => {\n        this.setState({ pic_url: event.target.files[0], });\n    }\n\n    handleBadgeClassID = event => {\n        this.setState({ badgeClassID: event.target.value });\n    }\n\n\n    handleSubmit = event => {\n        \n        event.preventDefault();\n        // file upload\n         // IF there's anything replaced\n    if(this.state.pic_url == ''){\n        \n        const badge = {\n            name: this.state.name,\n            requirements: this.state.requirements,\n            pic_url: this.props.pic_url,\n            badgeClassID: this.state.badgeClassID\n        };\n        console.log(this.props.pic_url + \" PIC URL\")\n        const config = {\n            headers: {\n                'content-type': 'application/json'\n            }\n        }\n\n        const badgeID = parseInt(this.props.badgeID);\n        const baseUrl = \"https://ades-ca1-project.herokuapp.com/api\";\n        console.log(badgeID);\n\n        axios.put(`${baseUrl}/editBadge/${badgeID}`, badge, config)\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n                window.location.replace('https://ades-ca1-project.herokuapp.com/quizment/badgesAdmin')\n            })\n  \n      // ELSE \n      }else{\n        const storage = getStorage();\n        const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\n        var file = this.state.pic_url;\n        // Create file metadata including the content type\n        /** @type {any} */\n        const metadata = {\n            contentType: this.state.pic_url.type,\n        };\n\n        uploadBytes(storageRef, file, metadata);\n\n        getDownloadURL(storageRef).then((downloadURL) => {\n            console.log('File available at', downloadURL);\n\n            var bcID = document.getElementById(\"dropDown\");\n            var bID = bcID.value;\n            var badgeClassID = parseInt(bID);\n\n            const badge = {\n                name: this.state.name,\n                requirements: this.state.requirements,\n                pic_url: downloadURL,\n                badgeClassID: badgeClassID\n            };\n\n            console.log(\"BADGEEEE\" + JSON.stringify(badge))\n\n            const config = {\n                headers: {\n                    'content-type': 'application/json'\n                }\n            }\n\n            const badgeID = parseInt(this.props.badgeID);\n            const baseUrl = \"https://ades-ca1-project.herokuapp.com/api\";\n            console.log(badgeID);\n\n            axios.put(`${baseUrl}/editBadge/${badgeID}`, badge, config)\n                .then(res => {\n                    console.log(res);\n                    console.log(res.data);\n                    window.location.replace('https://ades-ca1-project.herokuapp.com/quizment/badgesAdmin')\n                })\n        });\n    }\n    }\n\n    handleClose = () => {\n        this.props.onPopupClose(false, this.props.rewardID, '', '', '');\n    }\n    render() {\n        return (\n            <div id=\"bodyEdit\">\n                <Fragment>\n                    <Modal show={this.props.showModalPopup} onHide={this.handleClose}\n                        size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                        <Modal.Header closeButton>\n                            <Modal.Title>\n                                Edit Badge\n            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <div className=\"editBadge\">\n                                <Form onSubmit={this.handleSubmit} className=\"badgeForm\">\n                                    <Row>\n                                        <Col xs={12} md={8} lg={4}>\n                                            <Form.Control placeholder={this.props.name} onChange={this.handleName} required />\n                                        </Col>\n                                        <Col xs={12} md={5} lg={3}>\n                                            <Form.Control type=\"number\" placeholder={this.props.requirements} onChange={this.handleRequirement} required />\n                                        </Col>\n                                        <Col xs={12} md={5} lg={3}>\n                                            <Form.Control type=\"file\" onChange={this.handleURL} />\n                                        </Col>\n                                        <Col xs={12} md={2} lg={2}>\n                                            <Button variant=\"primary\" type=\"submit\">Edit</Button>\n                                        </Col>\n                                        <select name=\"badgeClassID\" onChange={this.handleBadgeClassID} id=\"dropDown\">\n                                            <option value=\"1\">Air</option>\n                                            <option value=\"2\">Water</option>\n                                            <option value=\"3\">Fire</option>\n                                            <option value=\"4\">Geo</option>\n                                        </select>\n                                    </Row>\n                                </Form>\n                            </div>\n                        </Modal.Body>\n                    </Modal>\n                </Fragment>\n            </div>\n        )\n    }\n}","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/StudentDashboard.js",["126","127","128","129","130","131"],"/Users/isaactan17/Desktop/ADES/frontEnd/src/components/Profile.js",[],"/Users/isaactan17/Desktop/ADES/frontEnd/src/components/TeacherDashboard.js",["132"],"import React from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { signOut } from \"firebase/auth\";\nimport { auth } from '../firebase.js';\nimport Button from 'react-bootstrap/Button';\n\n// Rewards\n\nexport default function TeacherDashboard() {\n \n    let navigate = useNavigate();\n    const logout = async () => {\n      await signOut(auth);\n      navigate('/');\n    };\n    return (\n        <div>\n            <h1>Teacher Administration</h1>\n            <Button onClick={() => {\n            navigate('/studentAdmin');\n          }}>Student Administration</Button>\n          <Button onClick={() => {\n            navigate('/rewardsAdmin');\n          }}>Rewards Administration</Button>\n            <Button onClick={() => {\n            navigate('/badgesAdmin');\n          }}>Badges Administration</Button>\n            <Button onClick={() => {\n            navigate('/mazeAdmin');\n          }}>Maze Administration</Button>\n          <Button onClick={() => {\n            navigate('/leaderboardAdmin');\n          }}>Leaderboard Administration</Button>\n          <Button onClick={() => {\n            navigate('/profile');\n          }}>Profile</Button>\n          <Button onClick={logout}>Sign Out</Button>\n        </div>\n    );\n}","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/StudentPointsHistory.js",[],"/Users/isaactan17/Desktop/ADES/frontEnd/src/components/Quiz.js",[],"/Users/isaactan17/Desktop/ADES/frontEnd/src/components/MapOfMaze.js",[],"/Users/isaactan17/Desktop/ADES/frontEnd/src/components/MazePopup.js",["133"],"import React, { Component, Fragment} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Modal } from 'react-bootstrap';\nimport axios from 'axios';\nimport jQuery from 'jquery';\n\nexport default class MazePopup extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal : false,\n            newLevel:false,\n            currentPts : 0,\n            totalPts : 0,\n            mazeLvl: 0,\n            \n        };\n    }\n    \n    componentDidMount(){\n        // Get student's points data'\n      \n        axios.get('https://ades-ca1-project.herokuapp.com/api/points/' + this.props.id)\n        .then(res => {\n            this.setState({ currentPts : res.data[0].redeemedPts });\n            this.setState({ totalPts : res.data[0].totalPts});\n            this.setState({ mazeLvl : res.data[0].mazeLvl});\n        })\n    }\n\n    isShowModal = (status) => {\n        this.handleClose();\n        this.setState({ showModal : status});\n    }\n\n    handleClose = () => {\n        this.props.onPopupClose(false,this.props.level);\n    }\n\n    handleComplete = () => {\n        // Store student's points\n        const quizPts = this.props.point;\n        const currentPoints = (this.state.currentPts + quizPts);\n        const totalPoints = (this.state.totalPts + quizPts);\n       \n        const mazeLvl = (parseInt(this.state.mazeLvl) + 1);\n    \n        // Do the calculation\n        this.setState({ currentPts : currentPoints});\n        this.setState({ totalPts : totalPoints});\n        this.setState({ mazeLvl : mazeLvl});\n        // Update student's table\n        const data = {\n            currentPts : currentPoints,\n            totalPts : totalPoints,\n            mazeLvl: mazeLvl\n        }\n\n        const config = {\n            headers: {\n                'content-type':'application/json'\n            }\n        }\n\n        axios.put('https://ades-ca1-project.herokuapp.com/api/points/' + this.props.id, data, config)\n        .then(res => {\n            console.log(res);\n            console.log(res.data);\n        })\n\n        const points = {\n            ptsAwarded : quizPts,\n            eventID : 2\n        }\n\n        // Insert points history\n        axios.post('https://ades-ca1-project.herokuapp.com/api/ptsHistory/' + this.props.id, points, config)\n        .then(res => {\n            console.log(res);\n            console.log(res.data);\n            this.handleClose();\n            window.alert(\"Points redeemed successfully\");\n            //updating the state \n            this.props.onNewLevel(true);\n            \n        })\n    }\n\n    render() {\n             \n        return (\n            <Fragment>  \n                <Modal show={this.props.showModalPopup} onHide={this.handleClose} id={this.props.level} \n                    size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>  \n                    <Modal.Header closeButton>  \n                        <Modal.Title id=\"sign-in-title\">  \n                            Level {this.props.level}\n                         </Modal.Title>  \n                    </Modal.Header>  \n                    <Modal.Body>  \n                        <hr />  \n                        <div className=\"Quiz\"> \n                        <div>Points : {this.props.point} </div>\n                        <Button onClick={this.handleComplete} >Complete</Button>\n                        </div>  \n                    </Modal.Body>  \n                </Modal >  \n            </Fragment >  \n        )\n    }\n}","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/Loading.js",[],"/Users/isaactan17/Desktop/ADES/frontEnd/src/components/StudentReward.js",[],"/Users/isaactan17/Desktop/ADES/frontEnd/src/components/TeacherLeaderboard.js",["134","135"],"import React, { useState, useEffect } from 'react';\nimport { signOut } from \"firebase/auth\";\nimport { auth } from '../firebase.js';\nimport axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport '../css/teacherLeaderboard.css';\n\nexport default class ViewLeaderboard extends React.Component {\n    state = {\n        data: [],\n        uid: ''\n    }\n\n    componentDidMount() {\n        // Auth\n        auth.onAuthStateChanged((user) => {\n            // IF there's user\n            if (user) {\n                console.log(\"User is Signed IN \");\n                this.setState({ uid: user.uid });\n                const config = {\n                    headers: {\n                        'content-type': 'application/json'\n                    }\n                }\n                // Get the user type\n                axios.get(`https://ades-ca1-project.herokuapp.com/api/userType/` + this.state.uid, config)\n                    .then(res => {\n                        // IF is student\n                        if (res.data.type === 1) {\n                            window.location.replace('https://ades-ca1-project.herokuapp.com/quizment/studentDashboard');\n                            // IF is teacher\n                        } else if (res.data.type === 2) {\n                            // GET all leaderboard data\n                            axios.get('https://ades-ca1-project.herokuapp.com/api/allLeaderboard')\n                                .then(res => {\n                                    this.setState({ data: res.data });\n                                })\n                            // ELSE kick them out\n                        } else {\n                            window.location.replace('https://ades-ca1-project.herokuapp.com/quizment');\n                        }\n                    })\n                // ELSE kick them out\n            } else {\n                console.log(\"THERE IS NO USER\");\n                signOut(auth);\n                window.location.replace('https://ades-ca1-project.herokuapp.com/quizment');\n            }\n        });\n    }\n\n    render() {\n\n        const data = this.state.data;\n\n        return (\n            <div className=\"teacherLeaderboard\">\n                <h1>Leaderboard</h1>\n                <Table striped bordered hover size=\"sm\">\n                    <thead>\n                        <tr>\n                            <th>Rank#</th>\n                            <th>Name</th>\n                            <th>Points</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data && data.map((item, index) =>\n                            <tr key={item.studentID}>\n                                <td>{index + 1}</td>\n                                <td>{item.name}</td>\n                                <td>{item.totalPts}</td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n}","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/RewardPopup.js",["136","137"],"import React, { Component, Fragment } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Modal } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport { Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport { store } from 'react-notifications-component';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\n\nexport default class EditReward extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      data: [],\n      rewardName: '',\n      rewardPoints: '',\n      url: '',\n    };\n  }\n\n  notiEditSuccess(){\n    store.addNotification({\n      title:\"Success\",\n      message:\"Reward edited successfully !\",\n      type:\"success\",\n      insert:\"top\",\n      container:\"top-center\",\n      animationIn:[\"animated\",\"fadeIn\"],\n      animationOut:[\"animated\",\"fadeOut\"],\n      dismiss: {duration:2000},\n      dismissable: {click:true}\n    });\n  }  \n\n  handleName = event => {\n    this.setState({ rewardName: event.target.value });\n  }\n\n  handlePoints = event => {\n    this.setState({ rewardPoints: event.target.value });\n  }\n\n  handleURL = event => {\n    this.setState({ url: event.target.files[0], });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // IF there's anything replaced\n    if(this.state.url == ''){\n      const reward = {\n        rewardName: this.state.rewardName,\n        ptsRequired: this.state.rewardPoints,\n        url: this.props.url\n      };\n      console.log(\"reward\" + JSON.stringify(reward));\n\n      const config = {\n        headers: {\n          'content-type': 'application/json'\n        }\n      }\n\n      axios.put('https://ades-ca1-project.herokuapp.com/api/rewards/' + this.props.rewardID, reward, config)\n        .then(res => {\n          console.log(res);\n          console.log(res.data);\n          this.handleClose();\n          window.location.reload();\n          this.notiEditSuccess();\n        })\n\n    // ELSE \n    }else{\n    // file upload\n    // packing data    \n    const storage = getStorage();\n    const storageRef = ref(storage, 'img/' + this.state.url.name);\n    var file = this.state.url;\n    // Create file metadata including the content type\n    /** @type {any} */\n    const metadata = {\n      contentType: this.state.url.type,\n    };\n    uploadBytes(storageRef, file, metadata);\n\n    getDownloadURL(storageRef).then((downloadURL) => {\n      console.log('File available at', downloadURL);\n\n      const reward = {\n        rewardName: this.state.rewardName,\n        ptsRequired: this.state.rewardPoints,\n        url: downloadURL\n      };\n      console.log(\"reward\" + JSON.stringify(reward));\n\n      const config = {\n        headers: {\n          'content-type': 'application/json'\n        }\n      }\n\n      axios.put('https://ades-ca1-project.herokuapp.com/api/rewards/' + this.props.rewardID, reward, config)\n        .then(res => {\n          console.log(res);\n          console.log(res.data);\n          this.handleClose();\n          window.location.reload();\n          this.notiEditSuccess();\n        })\n    })\n  }\n  }\n\n  handleClose = () => {\n    this.props.onPopupClose(false, this.props.rewardID, '', '', '');\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Modal show={this.props.showModalPopup} onHide={this.handleClose}\n          size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n          <Modal.Header closeButton>\n            <Modal.Title>\n              Edit Reward\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"editReward\">\n              <Form onSubmit={this.handleSubmit} className=\"rewardForm\">\n                <Row>\n                  <Col xs={12} md={8} lg={4}>\n                    <Form.Control placeholder={this.props.rewardName} onChange={this.handleName} required />\n                  </Col>\n                  <Col xs={12} md={5} lg={3}>\n                    <Form.Control type=\"number\" placeholder={this.props.rewardPoints} onChange={this.handlePoints} required />\n                  </Col>\n                  <Col xs={12} md={5} lg={3}>\n                    <Form.Control type=\"file\" onChange={this.handleURL} />\n                  </Col>\n                  <Col xs={12} md={2} lg={2}>\n                    <Button variant=\"primary\" type=\"submit\">Edit</Button>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </Fragment>\n    )\n  }\n}","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/QuizPopup.js",[],"/Users/isaactan17/Desktop/ADES/frontEnd/src/components/StudentBadges.js",["138","139"],"import React from 'react';\nimport axios from 'axios';\nimport { store } from 'react-notifications-component';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { Row, Col } from 'react-bootstrap';\nimport { signOut } from \"firebase/auth\";\nimport { auth } from '../firebase.js';\nimport '../css/studentReward.css';\n\nexport default class StudentBadges extends React.Component {\n  state = {\n    data: [],\n    dataAll: [],\n    url: '',\n    uid: '',\n    id: 0\n  }\n\n  componentDidMount() {\n    // Auth\n    auth.onAuthStateChanged((user) => {\n      // IF there's user\n      if (user) {\n        console.log(\"User is Signed IN \");\n        this.setState({ uid: user.uid });\n        const config = {\n          headers: {\n            'content-type': 'application/json'\n          }\n        }\n\n        // Get the user type\n        axios.get(`https://ades-ca1-project.herokuapp.com/api/userType/` + this.state.uid, config)\n          .then(res => {\n            // IF is student\n            if (res.data.type === 1) {\n              this.setState({ id: res.data.studentID })\n              console.log(this.state.id);\n              console.log(res.data.studentID);\n            // IF is teacher\n            } else if (res.data.type === 2) {\n              window.location.replace('https://ades-ca1-project.herokuapp.com/quizment/teacherDashboard');\n            // ELSE kick them out\n            } else {\n              window.location.replace('https://ades-ca1-project.herokuapp.com/quizment');\n            }\n          })\n      // ELSE kick them out\n      } else {\n        console.log(\"THERE IS NO USER\");\n        signOut(auth);\n        window.location.replace('https://ades-ca1-project.herokuapp.com/quizment');\n      }\n    });\n\n    // Get all the badges\n    axios.get('https://ades-ca1-project.herokuapp.com/api/badges')\n      .then(res => {\n        this.setState({ dataAll: res.data });\n      })\n\n    // Get all the badges\n    axios.get('https://ades-ca1-project.herokuapp.com/api/students/badges/' + this.state.id)\n    .then(res => {\n      this.setState({ data: res.data });\n    })\n  }\n\n  render() {\n    const data = this.state.data;\n    const dataAll = this.state.dataAll;\n    return (\n      <div className=\"StudentReward\">\n        <h1>Badges Earned</h1>\n        <div className=\"Rewards\">\n          <Row xs={1} md={2} lg={3} className=\"g-4\">\n            {data && data.map(item =>\n              <Col>\n                <Card border=\"warning\">\n                  <Card.Img className=\"cardPic\" variant=\"top\" src={item.pic_url} />\n                  <Card.Body className=\"cardBody\">\n                    <Card.Title>{item.name}</Card.Title>\n                    <Card.Text>Number of times earned: {item.amount}</Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n            )}\n          </Row>\n        </div>\n        <h1>Badges That You Can Get</h1>\n        <div className=\"Rewards\">\n          <Row xs={1} md={2} lg={3} className=\"g-4\">\n            {dataAll && dataAll.map(item =>\n              <Col>\n                <Card border=\"warning\">\n                  <Card.Img className=\"cardPic\" variant=\"top\" src={item.pic_url} />\n                  <Card.Body className=\"cardBody\">\n                    <Card.Title>{item.name}</Card.Title>\n                    <Card.Text>Requirement: {item.requirements}</Card.Text>\n                    <Card.Text>Badge Class Name: {item.className}</Card.Text>\n                    <Card.Text>Badge Class Description: For {item.classDescription}</Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n            )}\n          </Row>\n        </div>\n      </div>\n\n    )\n  }\n}","/Users/isaactan17/Desktop/ADES/frontEnd/src/components/TeacherViewStudentProgress.js",["140","141","142","143"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nexport default class TeacherViewStudentProgress extends React.Component {\n    state = {\n        data: [],\n    }\n\n    componentDidMount() {\n        axios.get('https://ades-ca1-project.herokuapp.com/api/studentProgress')\n            .then(res => {\n                this.setState({ data: res.data });\n            })\n    }\n\n    render() {\n        const data = this.state.data;\n        return (\n            <div className=\"viewReward\">\n                <h3 className=\"p-3 text-center\">Student Progress</h3>\n\n                <table className=\"table table-striped table-bordered\">\n                    <thead>\n                        <tr>\n                            <th>Student Name</th>\n                            <th>Streaks</th>\n                            <th>Maze Level</th>\n                            <th>Total Points</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data && data.map(item =>\n                            <tr key={item.studentID}>\n                                <td>{item.name}</td>\n                                <td>{item.streaks}</td>\n                                <td>{item.mazeLvl}</td>\n                                <td>{item.totalPts}</td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}",{"ruleId":"144","severity":1,"message":"145","line":27,"column":10,"nodeType":"146","messageId":"147","endLine":27,"endColumn":14},{"ruleId":"144","severity":1,"message":"148","line":5,"column":5,"nodeType":"146","messageId":"147","endLine":5,"endColumn":12},{"ruleId":"144","severity":1,"message":"145","line":169,"column":19,"nodeType":"146","messageId":"147","endLine":169,"endColumn":23},{"ruleId":"149","severity":1,"message":"150","line":117,"column":28,"nodeType":"151","messageId":"152","endLine":117,"endColumn":30},{"ruleId":"153","severity":1,"message":"154","line":225,"column":41,"nodeType":"155","endLine":225,"endColumn":97},{"ruleId":"144","severity":1,"message":"156","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"149","severity":1,"message":"150","line":101,"column":28,"nodeType":"151","messageId":"152","endLine":101,"endColumn":30},{"ruleId":"144","severity":1,"message":"157","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"158","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":20},{"ruleId":"144","severity":1,"message":"159","line":5,"column":22,"nodeType":"146","messageId":"147","endLine":5,"endColumn":25},{"ruleId":"144","severity":1,"message":"160","line":5,"column":27,"nodeType":"146","messageId":"147","endLine":5,"endColumn":38},{"ruleId":"144","severity":1,"message":"161","line":5,"column":40,"nodeType":"146","messageId":"147","endLine":5,"endColumn":54},{"ruleId":"144","severity":1,"message":"156","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"157","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"149","severity":1,"message":"150","line":44,"column":27,"nodeType":"151","messageId":"152","endLine":44,"endColumn":29},{"ruleId":"144","severity":1,"message":"157","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"162","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":21},{"ruleId":"144","severity":1,"message":"156","line":3,"column":23,"nodeType":"146","messageId":"147","endLine":3,"endColumn":27},{"ruleId":"144","severity":1,"message":"163","line":4,"column":39,"nodeType":"146","messageId":"147","endLine":4,"endColumn":46},{"ruleId":"144","severity":1,"message":"164","line":4,"column":53,"nodeType":"146","messageId":"147","endLine":4,"endColumn":60},{"ruleId":"144","severity":1,"message":"165","line":112,"column":41,"nodeType":"146","messageId":"147","endLine":112,"endColumn":47},{"ruleId":"144","severity":1,"message":"166","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":13},{"ruleId":"144","severity":1,"message":"167","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":14},{"ruleId":"144","severity":1,"message":"168","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"169","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"157","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"149","severity":1,"message":"150","line":52,"column":23,"nodeType":"151","messageId":"152","endLine":52,"endColumn":25},{"ruleId":"144","severity":1,"message":"170","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":15},{"ruleId":"144","severity":1,"message":"171","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":14},{"ruleId":"144","severity":1,"message":"168","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"169","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"156","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"171","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":14},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'signOut' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'Component' is defined but never used.","'getStorage' is defined but never used.","'ref' is defined but never used.","'uploadBytes' is defined but never used.","'getDownloadURL' is defined but never used.","'useNavigate' is defined but never used.","'Sidebar' is defined but never used.","'NavItem' is defined but never used.","'streak' is assigned a value but never used.","'axios' is defined but never used.","'jQuery' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'store' is defined but never used.","'Button' is defined but never used."]