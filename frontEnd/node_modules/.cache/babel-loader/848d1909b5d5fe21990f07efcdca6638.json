{"ast":null,"code":"var _jsxFileName = \"/Users/isaactan17/Desktop/ADES/frontEnd/src/components/EditBadge.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EditBadge extends React.Component {\n  constructor() {\n    var _s = $RefreshSig$();\n\n    super(...arguments);\n    this.state = {\n      data: [],\n      name: '',\n      requirements: '',\n      pic_url: '',\n      badgeClassID: ''\n    };\n\n    this.handleName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleRequirement = event => {\n      this.setState({\n        requirements: event.target.value\n      });\n    };\n\n    this.handleURL = event => {\n      this.setState({\n        pic_url: event.target.files[0]\n      });\n    };\n\n    this.handleBadgeClassID = event => {\n      this.setState({\n        badgeClassID: event.target.value\n      });\n    };\n\n    this.handleSubmit = _s(event => {\n      _s();\n\n      event.preventDefault(); // navigation function\n\n      const navigate = useNavigate(); // file upload\n\n      const storage = getStorage();\n      const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\n      var file = this.state.pic_url; // Create file metadata including the content type\n\n      /** @type {any} */\n\n      const metadata = {\n        contentType: this.state.pic_url.type\n      };\n      console.log(\"yes\");\n      uploadBytes(storageRef, file, metadata);\n      getDownloadURL(storageRef).then(downloadURL => {\n        console.log('File available at', downloadURL);\n        const badge = {\n          name: this.state.name,\n          requirements: this.state.requirements,\n          pic_url: downloadURL,\n          badgeClassID: this.state.badgeClassID\n        };\n        console.log(\"BADGEEEE\" + JSON.stringify(badge));\n        const config = {\n          headers: {\n            'content-type': 'application/json'\n          }\n        };\n        const badgeID = window.location.href.split('/')[3].slice(13);\n        const baseUrl = \"http://localhost:8081\";\n        console.log(badgeID);\n        axios.put(`${baseUrl}/editBadge/${badgeID}`, badge, config).then(res => {\n          console.log(res);\n          console.log(res.data);\n          navigate('/badgesAdmin');\n        });\n      });\n    }, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n      return [useNavigate];\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editReward\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Badge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Badge Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            onChange: this.handleName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Badge Requirement:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"requirements\",\n            onChange: this.handleRequirement\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Pic URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"pic_url\",\n            onChange: this.handleURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Badge Class ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"badgeClassID\",\n            onChange: this.handleBadgeClassID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/isaactan17/Desktop/ADES/frontEnd/src/components/EditBadge.js"],"names":["React","axios","getStorage","ref","uploadBytes","getDownloadURL","useNavigate","EditBadge","Component","state","data","name","requirements","pic_url","badgeClassID","handleName","event","setState","target","value","handleRequirement","handleURL","files","handleBadgeClassID","handleSubmit","preventDefault","navigate","storage","storageRef","file","metadata","contentType","type","console","log","then","downloadURL","badge","JSON","stringify","config","headers","badgeID","window","location","href","split","slice","baseUrl","put","res","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { useNavigate } from 'react-router-dom';\n\n\n\n\nexport default class EditBadge extends React.Component {\n\n    state = {\n        data: [],\n        name: '',\n        requirements: '',\n        pic_url: '',\n        badgeClassID: ''\n    }\n\n\n\n    handleName = event => {\n        this.setState({ name: event.target.value });\n    }\n\n    handleRequirement = event => {\n        this.setState({ requirements: event.target.value });\n    }\n\n    handleURL = event => {\n        this.setState({ pic_url: event.target.files[0], });\n    }\n\n    handleBadgeClassID = event => {\n        this.setState({ badgeClassID: event.target.value });\n    }\n\n\n    handleSubmit = event => {\n        event.preventDefault();\n        // navigation function\n        const navigate = useNavigate();\n        // file upload\n        const storage = getStorage();\n        const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\n        var file = this.state.pic_url;\n        // Create file metadata including the content type\n        /** @type {any} */\n        const metadata = {\n            contentType: this.state.pic_url.type,\n        };\n        console.log(\"yes\");\n        uploadBytes(storageRef, file, metadata);\n\n        getDownloadURL(storageRef).then((downloadURL) => {\n            console.log('File available at', downloadURL);\n\n            const badge = {\n                name: this.state.name,\n                requirements: this.state.requirements,\n                pic_url: downloadURL,\n                badgeClassID: this.state.badgeClassID\n            };\n\n            console.log(\"BADGEEEE\" + JSON.stringify(badge))\n\n            const config = {\n                headers: {\n                    'content-type': 'application/json'\n                }\n            }\n\n            const badgeID = window.location.href.split('/')[3].slice(13);\n            const baseUrl = \"http://localhost:8081\";\n            console.log(badgeID);\n\n            axios.put(`${baseUrl}/editBadge/${badgeID}`, badge, config)\n                .then(res => {\n                    console.log(res);\n                    console.log(res.data);\n                    navigate('/badgesAdmin')\n                })\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"editReward\">\n                <h1>Edit Badge</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Badge Name:\n                        <input type=\"text\" name=\"name\" onChange={this.handleName} />\n                    </label>\n                    <label>\n                        Badge Requirement:\n                        <input type=\"text\" name=\"requirements\" onChange={this.handleRequirement} />\n                    </label>\n                    <label>\n                        Pic URL:\n                        <input type=\"file\" name=\"pic_url\" onChange={this.handleURL} />\n                    </label>\n                    {/* Please remember to change and do JOIN table for it to not display as ID */}\n                    <label>\n                        Badge Class ID:\n                        <input type=\"text\" name=\"badgeClassID\" onChange={this.handleBadgeClassID} />\n                    </label>\n                    <button type=\"submit\">Add</button>\n                </form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}