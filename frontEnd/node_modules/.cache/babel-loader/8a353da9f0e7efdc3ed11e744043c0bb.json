{"ast":null,"code":"import _classCallCheck from\"/Users/isaactan17/Desktop/ADES/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/isaactan17/Desktop/ADES/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/isaactan17/Desktop/ADES/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/isaactan17/Desktop/ADES/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import axios from'axios';import{Link}from'react-router-dom';import{getStorage,ref,uploadBytes}from\"firebase/storage\";import Button from'react-bootstrap/Button';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BadgeAdmin=/*#__PURE__*/function(_React$Component){_inherits(BadgeAdmin,_React$Component);var _super=_createSuper(BadgeAdmin);function BadgeAdmin(){var _this;_classCallCheck(this,BadgeAdmin);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={data:[],name:'',requirements:'',pic_url:'',badgeClassID:''};_this.handleName=function(event){_this.setState({name:event.target.value});};_this.handleRequirement=function(event){_this.setState({requirements:event.target.value});};_this.handleBadgeClassID=function(event){_this.setState({badgeClassID:event.target.value});};_this.handleURL=function(event){_this.setState({pic_url:event.target.files[0]});};_this.handleSubmit=function(event){event.preventDefault();//data extraction (combining data)\n// file upload\nvar storage=getStorage();var storageRef=ref(storage,'img/'+_this.state.pic_url.name);var file=_this.state.pic_url;// Create file metadata including the content type\n/** @type {any} */var metadata={contentType:_this.state.pic_url.type};console.log(\"yes\");uploadBytes(storageRef,file,metadata);var badge={name:_this.state.name,requirements:_this.state.requirements,pic_url:_this.state.pic_url.name,badgeClassID:_this.state.badgeClassID};console.log(\"BADGEEEE\"+JSON.stringify(badge));var config={headers:{'content-type':'application/json'}};axios.post('http://localhost:8081/newBadge',badge,config).then(function(res){console.log(res);console.log(res.data);});};return _this;}_createClass(BadgeAdmin,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;axios.get(\"http://localhost:8081/badges\").then(function(res){console.log(res.data.length);_this2.setState({data:res.data});});}},{key:\"render\",value:function render(){var data=this.state.data;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Badges Administration\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"viewBadges\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add Badge\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Badge Name:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",onChange:this.handleName})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Badge Requirement:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"requirements\",onChange:this.handleRequirement})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Pic URL:\",/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"pic_url\",onChange:this.handleURL})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Badge Class ID:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"badgeClassID\",onChange:this.handleBadgeClassID})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add\"})]})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"View Badges\"}),data&&data.map(function(item){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:item.name}),/*#__PURE__*/_jsx(\"td\",{children:item.requirements}),/*#__PURE__*/_jsx(\"td\",{children:item.badgeClassID}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"img\",{src:'../images/'+item.pic_url,style:{height:200,width:200}})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Link,{to:\"/EditBadge?id=\".concat(item.badgeID),children:/*#__PURE__*/_jsx(Button,{children:\"Edit\"})})}),\"            \"]},item.badgeID);})]})]});}}]);return BadgeAdmin;}(React.Component);export{BadgeAdmin as default};","map":{"version":3,"sources":["/Users/isaactan17/Desktop/ADES/frontEnd/src/components/BadgeAdmin.js"],"names":["React","axios","Link","getStorage","ref","uploadBytes","Button","BadgeAdmin","state","data","name","requirements","pic_url","badgeClassID","handleName","event","setState","target","value","handleRequirement","handleBadgeClassID","handleURL","files","handleSubmit","preventDefault","storage","storageRef","file","metadata","contentType","type","console","log","badge","JSON","stringify","config","headers","post","then","res","get","length","map","item","height","width","badgeID","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { getStorage, ref, uploadBytes } from \"firebase/storage\";\nimport Button from 'react-bootstrap/Button';\n\n\nexport default class BadgeAdmin extends React.Component {\n  state = {\n    data: [],\n    name: '',\n    requirements: '',\n    pic_url: '',\n    badgeClassID: ''\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:8081/badges`)\n      .then(res => {\n        console.log(res.data.length);\n       \n        this.setState({ data: res.data });\n      })\n  }\n\n  handleName = event => {\n    this.setState({ name: event.target.value });\n  }\n\n  handleRequirement = event => {\n    this.setState({ requirements: event.target.value });\n  }\n\n  handleBadgeClassID = event => {\n    this.setState({ badgeClassID: event.target.value });\n  }\n\n  handleURL = event => {\n    this.setState({ pic_url: event.target.files[0], });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    //data extraction (combining data)\n    // file upload\n    const storage = getStorage();\n    const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\n    var file = this.state.pic_url;\n    // Create file metadata including the content type\n    /** @type {any} */\n    const metadata = {\n      contentType: this.state.pic_url.type,\n    };\n    console.log(\"yes\");\n    uploadBytes(storageRef, file, metadata);\n    const badge = {\n      name: this.state.name,\n      requirements: this.state.requirements,\n      pic_url: this.state.pic_url.name,\n      badgeClassID: this.state.badgeClassID\n    };\n    console.log(\"BADGEEEE\" + JSON.stringify(badge))\n\n    const config = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    }\n\n    axios.post('http://localhost:8081/newBadge', badge, config)\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      })\n  }\n\n  render() {\n    const data = this.state.data;\n    return (\n      <div>\n        <h1>Badges Administration</h1>\n        <div className=\"viewBadges\">\n          <div>\n            <h2>Add Badge</h2>\n            <form onSubmit={this.handleSubmit}>\n              <label>\n                Badge Name:\n            <input type=\"text\" name=\"name\" onChange={this.handleName} />\n              </label>\n              <label>\n                Badge Requirement:\n            <input type=\"text\" name=\"requirements\" onChange={this.handleRequirement} />\n              </label>\n              <label>\n                Pic URL:\n            <input type=\"file\" name=\"pic_url\" onChange={this.handleURL} />\n              </label>\n              {/* Please remember to change and do JOIN table for it to not display as ID */}\n              <label>\n                Badge Class ID:\n            <input type=\"text\" name=\"badgeClassID\" onChange={this.handleBadgeClassID} />\n              </label>\n              <button type=\"submit\">Add</button>\n            </form>\n          </div>\n          <h2>View Badges</h2>\n          {data && data.map(item =>\n            <tr key={item.badgeID}>\n              <td>{item.name}</td>\n              <td>{item.requirements}</td>\n              <td>{item.badgeClassID}</td>\n              <td><img src={'../images/' + item.pic_url} style={{ height: 200, width: 200 }}></img></td>\n              <td>\n                <Link to={`/EditBadge?id=${item.badgeID}`}>\n                  <Button>Edit</Button>\n                </Link>\n              </td>            </tr>\n          )}\n        </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}