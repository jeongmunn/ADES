{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadi\\\\OneDrive\\\\Documents\\\\GitHub\\\\ADES\\\\frontEnd\\\\src\\\\components\\\\MazeAdmin.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport '../css/Table&Add.css';\nimport ModalPopup from './EditMazeContent';\nimport { signOut } from \"firebase/auth\";\nimport { auth } from '../firebase.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MazeAdmin extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      mazeLvl: '',\n      points: '',\n      showModalPopup: false\n    };\n\n    this.isShowPopup = (status, mazeLvl, points) => {\n      this.setState({\n        showModalPopup: status\n      });\n      this.setState({\n        mazeLvl: mazeLvl\n      });\n      this.setState({\n        points: points\n      });\n    };\n  }\n\n  componentDidMount() {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        console.log(\"User is Signed IN \");\n        this.setState({\n          uid: user.uid\n        });\n        const config = {\n          headers: {\n            'content-type': 'application/json'\n          }\n        };\n        axios.get(`https://ades-ca1-project.herokuapp.com/api/userType/` + this.state.uid, config).then(res => {\n          if (res.data.type === 1) {\n            window.location.replace('https://ades-ca1-project.herokuapp.com/quizment/studentDashboard');\n          } else if (res.data.type === 2) {// area to put your axios \n          } else {\n            window.location.replace('https://ades-ca1-project.herokuapp.com/quizment');\n          }\n        });\n      } else {\n        console.log(\"THERE IS NO USER\");\n        signOut(auth);\n        window.location.replace('https://ades-ca1-project.herokuapp.com/quizment');\n      }\n    });\n    axios.get('https://ades-ca1-project.herokuapp.com/mazeContent').then(res => {\n      this.setState({\n        data: res.data\n      });\n    });\n  }\n\n  render() {\n    const data = this.state.data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewMazeLvl\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"p-3 text-center\",\n            children: \"Map of Maze Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped table-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Maze Level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Points\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this), data && data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              id: \"tableRow\",\n              class: \"spaceUnder\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.mazeLvl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.points\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  variant: \"warning\",\n                  onClick: () => this.isShowPopup(true, item.mazeLvl, item.points),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalPopup, {\n        showModalPopup: this.state.showModalPopup,\n        onPopupClose: this.isShowPopup,\n        mazeLvl: this.state.mazeLvl,\n        points: this.state.points\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/src/components/MazeAdmin.js"],"names":["React","axios","Link","Button","ModalPopup","signOut","auth","MazeAdmin","Component","state","data","mazeLvl","points","showModalPopup","isShowPopup","status","setState","componentDidMount","onAuthStateChanged","user","console","log","uid","config","headers","get","then","res","type","window","location","replace","render","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../css/Table&Add.css';\r\nimport ModalPopup from './EditMazeContent';\r\nimport { signOut } from \"firebase/auth\";\r\nimport { auth } from '../firebase.js';\r\nexport default class MazeAdmin extends React.Component {\r\n\r\n    state = {\r\n        data: [],\r\n        mazeLvl: '',\r\n        points: '',\r\n        showModalPopup:false\r\n    }\r\n\r\n    componentDidMount() {\r\n        auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                console.log(\"User is Signed IN \");\r\n                this.setState({ uid: user.uid });\r\n                const config = {\r\n                    headers: {\r\n                        'content-type': 'application/json'\r\n                    }\r\n                }\r\n                \r\n                axios.get(`https://ades-ca1-project.herokuapp.com/api/userType/` + this.state.uid, config)\r\n                    .then(res => {\r\n                      if (res.data.type === 1) {\r\n                        window.location.replace('https://ades-ca1-project.herokuapp.com/quizment/studentDashboard');\r\n      \r\n      } else if (res.data.type === 2) {\r\n                          // area to put your axios \r\n                     } else {\r\n                         window.location.replace('https://ades-ca1-project.herokuapp.com/quizment');\r\n                     }\r\n                 })\r\n         } else {\r\n             console.log(\"THERE IS NO USER\");\r\n             signOut(auth);\r\n             window.location.replace('https://ades-ca1-project.herokuapp.com/quizment');\r\n         }\r\n      });\r\n\r\n        axios.get('https://ades-ca1-project.herokuapp.com/mazeContent')\r\n            .then(res => {\r\n                this.setState({ data: res.data });\r\n            })\r\n    }\r\n   \r\n\r\n    isShowPopup = (status, mazeLvl, points) => {\r\n        this.setState({ showModalPopup : status });\r\n        this.setState({ mazeLvl : mazeLvl });\r\n        this.setState({ points : points});\r\n        \r\n    }\r\n  \r\n\r\n\r\n\r\n    render() {\r\n        const data = this.state.data;\r\n        return (\r\n            <div id=\"body\">\r\n            <div id=\"div\">\r\n            <div className=\"viewMazeLvl\">\r\n                <h3 className=\"p-3 text-center\">Map of Maze Content</h3>\r\n\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Maze Level</th>\r\n                            <th>Points</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    \r\n\r\n                        {data && data.map(item =>\r\n                            <tr id='tableRow' class=\"spaceUnder\">\r\n                                <td>{item.mazeLvl}</td>\r\n                                <td>{item.points}</td>\r\n                                <td>\r\n                                <Button type=\"button\" variant=\"warning\" onClick={() => this.isShowPopup(true, item.mazeLvl, item.points)}>Edit</Button>\r\n                                </td>\r\n\r\n                            </tr>\r\n                        )}\r\n                    \r\n                </table>\r\n            </div>\r\n            </div>\r\n            <ModalPopup\r\n                    showModalPopup={this.state.showModalPopup}\r\n                    onPopupClose={this.isShowPopup}\r\n                    mazeLvl={this.state.mazeLvl}\r\n                    points={this.state.points}\r\n                ></ModalPopup>\r\n      </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}