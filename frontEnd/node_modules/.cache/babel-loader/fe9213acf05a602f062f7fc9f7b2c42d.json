{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadi\\\\OneDrive\\\\Documents\\\\GitHub\\\\ADES\\\\frontEnd\\\\src\\\\components\\\\QuizPopUp.js\";\nimport React, { Component, Fragment } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Modal } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class QuizPopup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isShowModal = status => {\n      this.handleClose();\n      this.setState({\n        showModal: status\n      });\n    };\n\n    this.handleClose = () => {\n      this.props.onPopupClose(false);\n    };\n\n    this.state = {\n      showModal: false,\n      data: [],\n      id: 0,\n      quizID: 0\n    };\n  }\n\n  render() {\n    const data = this.props.data;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.props.showModalPopup,\n        onHide: this.handleClose,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"sign-in-title\",\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"p-3 text-center\",\n              children: \"Display Summary of Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-bordered\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Marks Awarded\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Points Earned\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: data && data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.pointsEarned\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.marksEarned\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 45\n                  }, this)]\n                }, item.quizHistoryID, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.isShowModal(true),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/src/components/QuizPopUp.js"],"names":["React","Component","Fragment","Button","Modal","axios","QuizPopup","constructor","props","isShowModal","status","handleClose","setState","showModal","onPopupClose","state","data","id","quizID","render","showModalPopup","map","item","pointsEarned","marksEarned","quizHistoryID"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAE7CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,WAVmB,GAUJC,MAAD,IAAY;AACtB,WAAKC,WAAL;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEH;AAAb,OAAd;AACH,KAbkB;;AAAA,SAenBC,WAfmB,GAeL,MAAM;AAChB,WAAKH,KAAL,CAAWM,YAAX,CAAwB,KAAxB;AACH,KAjBkB;;AAEf,SAAKC,KAAL,GAAa;AACTF,MAAAA,SAAS,EAAE,KADF;AAETG,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,EAAE,EAAC,CAHM;AAITC,MAAAA,MAAM,EAAC;AAJE,KAAb;AAMH;;AAeDC,EAAAA,MAAM,GAAG;AAEL,UAAMH,IAAI,GAAG,KAAKR,KAAL,CAAWQ,IAAxB;AAEA,wBACI,QAAC,QAAD;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKR,KAAL,CAAWY,cAAxB;AAAwC,QAAA,MAAM,EAAE,KAAKT,WAArD;AACI,QAAA,IAAI,EAAC,IADT;AAEI,2BAAgB,+BAFpB;AAGI,QAAA,QAAQ,MAHZ;AAAA,gCAII,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAAA,iCACI,QAAC,KAAD,CAAO,KAAP;AAAa,YAAA,EAAE,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eASI,QAAC,KAAD,CAAO,IAAP;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,SAAS,EAAC,oCAAjB;AAAA,sCACI;AAAA,uCACI;AAAA,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAOI;AAAA,0BACKK,IAAI,IAAIA,IAAI,CAACK,GAAL,CAASC,IAAI,iBAClB;AAAA,0CACI;AAAA,8BAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA,8BAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA,mBAASF,IAAI,CAACG,aAAd;AAAA;AAAA;AAAA;AAAA,wBADK;AADb;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAkBI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,MAAM,KAAKhB,WAAL,CAAiB,IAAjB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAqCH;;AAlE4C","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Modal } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nexport default class QuizPopup extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            data: [],\r\n            id:0,\r\n            quizID:0\r\n        };\r\n    }\r\n\r\n    isShowModal = (status) => {\r\n        this.handleClose();\r\n        this.setState({ showModal: status });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.onPopupClose(false);\r\n    }\r\n\r\n  \r\n    \r\n \r\n\r\n    render() {\r\n\r\n        const data = this.props.data;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Modal show={this.props.showModalPopup} onHide={this.handleClose}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered  >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"sign-in-title\">\r\n                            Summary\r\n                         </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <hr />\r\n                        <div className=\"Summary\">\r\n                            <h3 className=\"p-3 text-center\">Display Summary of Points</h3>\r\n                            <table className=\"table table-striped table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Marks Awarded</th>\r\n                                        <th>Points Earned</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {data && data.map(item =>\r\n                                        <tr key={item.quizHistoryID}>\r\n                                            <td>{item.pointsEarned}</td>\r\n                                            <td>{item.marksEarned}</td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                            <Button onClick={() => this.isShowModal(true)}>Close</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal >\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}