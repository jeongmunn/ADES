{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadi\\\\OneDrive\\\\Documents\\\\GitHub\\\\ADES\\\\frontEnd\\\\src\\\\components\\\\EditBadge.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport '../css/badgemazeEdit.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EditBadge extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      name: '',\n      requirements: '',\n      pic_url: '',\n      badgeClassID: ''\n    };\n\n    this.handleName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleRequirement = event => {\n      this.setState({\n        requirements: event.target.value\n      });\n    };\n\n    this.handleURL = event => {\n      this.setState({\n        pic_url: event.target.files[0]\n      });\n    };\n\n    this.handleBadgeClassID = event => {\n      this.setState({\n        badgeClassID: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // file upload\n\n      const storage = getStorage();\n      const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\n      var file = this.state.pic_url; // Create file metadata including the content type\n\n      /** @type {any} */\n\n      const metadata = {\n        contentType: this.state.pic_url.type\n      };\n      uploadBytes(storageRef, file, metadata);\n      getDownloadURL(storageRef).then(downloadURL => {\n        console.log('File available at', downloadURL);\n        var bcID = document.getElementById(\"dropDown\");\n        var bID = bcID.value;\n        var badgeClassID = parseInt(bID);\n        const badge = {\n          name: this.state.name,\n          requirements: this.state.requirements,\n          pic_url: downloadURL,\n          badgeClassID: badgeClassID\n        };\n        console.log(\"BADGEEEE\" + JSON.stringify(badge));\n        const config = {\n          headers: {\n            'content-type': 'application/json'\n          }\n        };\n        const badgeID = window.location.href.split('/')[3].slice(13);\n        const baseUrl = \"http://localhost:8081\";\n        console.log(badgeID);\n        axios.put(`${baseUrl}/editBadge/${badgeID}`, badge, config).then(res => {\n          console.log(res);\n          console.log(res.data);\n          window.location.replace('http://localhost:3000/badgesAdmin');\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bodyEdit\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"divEdit\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editReward\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Edit Badge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            id: \"formEdit\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"label\",\n              children: [\"Badge Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                onChange: this.handleName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"label\",\n              children: [\"Badge Requirement:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"requirements\",\n                onChange: this.handleRequirement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"label\",\n              children: [\"Pic URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"pic_url\",\n                onChange: this.handleURL\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Badge Class ID:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"badgeClassID\",\n                onChange: this.handleBadgeClassID,\n                id: \"dropDown\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1\",\n                  children: \"Air\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2\",\n                  children: \"Water\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3\",\n                  children: \"Fire\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"4\",\n                  children: \"Geo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/src/components/EditBadge.js"],"names":["React","axios","getStorage","ref","uploadBytes","getDownloadURL","EditBadge","Component","state","data","name","requirements","pic_url","badgeClassID","handleName","event","setState","target","value","handleRequirement","handleURL","files","handleBadgeClassID","handleSubmit","preventDefault","storage","storageRef","file","metadata","contentType","type","then","downloadURL","console","log","bcID","document","getElementById","bID","parseInt","badge","JSON","stringify","config","headers","badgeID","window","location","href","split","slice","baseUrl","put","res","replace","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport '../css/badgemazeEdit.css';\r\n\r\n\r\nexport default class EditBadge extends React.Component {\r\n\r\n    state = {\r\n        data: [],\r\n        name: '',\r\n        requirements: '',\r\n        pic_url: '',\r\n        badgeClassID: ''\r\n    }\r\n\r\n\r\n\r\n    handleName = event => {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    handleRequirement = event => {\r\n        this.setState({ requirements: event.target.value });\r\n    }\r\n\r\n    handleURL = event => {\r\n        this.setState({ pic_url: event.target.files[0], });\r\n    }\r\n\r\n    handleBadgeClassID = event => {\r\n        this.setState({ badgeClassID: event.target.value });\r\n    }\r\n\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        // file upload\r\n        const storage = getStorage();\r\n        const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\r\n        var file = this.state.pic_url;\r\n        // Create file metadata including the content type\r\n        /** @type {any} */\r\n        const metadata = {\r\n            contentType: this.state.pic_url.type,\r\n        };\r\n        \r\n        uploadBytes(storageRef, file, metadata);\r\n\r\n        getDownloadURL(storageRef).then((downloadURL) => {\r\n            console.log('File available at', downloadURL);\r\n\r\n            var bcID = document.getElementById(\"dropDown\");\r\n            var bID = bcID.value;\r\n            var badgeClassID = parseInt(bID);\r\n\r\n            const badge = {\r\n                name: this.state.name,\r\n                requirements: this.state.requirements,\r\n                pic_url: downloadURL,\r\n                badgeClassID: badgeClassID\r\n            };\r\n\r\n            console.log(\"BADGEEEE\" + JSON.stringify(badge))\r\n\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                }\r\n            }\r\n\r\n            const badgeID = window.location.href.split('/')[3].slice(13);\r\n            const baseUrl = \"http://localhost:8081\";\r\n            console.log(badgeID);\r\n\r\n            axios.put(`${baseUrl}/editBadge/${badgeID}`, badge, config)\r\n                .then(res => {\r\n                    console.log(res);\r\n                    console.log(res.data);\r\n                    window.location.replace('http://localhost:3000/badgesAdmin')\r\n                })\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"bodyEdit\">\r\n                <div id=\"divEdit\">\r\n                    <div className=\"editReward\">\r\n                        <h1>Edit Badge</h1>\r\n                        <form onSubmit={this.handleSubmit} id=\"formEdit\">\r\n                            <label class='label'>\r\n                                Badge Name:\r\n                                <input type=\"text\" name=\"name\" onChange={this.handleName} />\r\n                            </label>\r\n                            <br />\r\n                            <label class='label'>\r\n                                Badge Requirement:\r\n                                <input type=\"text\" name=\"requirements\" onChange={this.handleRequirement} />\r\n                            </label>\r\n                            <br />\r\n                            <label class='label'>\r\n                                Pic URL:\r\n                                <input type=\"file\" name=\"pic_url\" onChange={this.handleURL} />\r\n                            </label>\r\n                            <br />\r\n                            <label>\r\n                                Badge Class ID:\r\n                                <select name=\"badgeClassID\" onChange={this.handleBadgeClassID} id=\"dropDown\">\r\n                                    <option value=\"1\">Air</option>\r\n                                    <option value=\"2\">Water</option>\r\n                                    <option value=\"3\">Fire</option>\r\n                                    <option value=\"4\">Geo</option>\r\n                                </select>\r\n                                {/* <input type=\"text\" name=\"badgeClassID\" onChange={this.handleBadgeClassID} /> */}\r\n                            </label>\r\n                            <br />\r\n                            <button type=\"submit\">Add</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}