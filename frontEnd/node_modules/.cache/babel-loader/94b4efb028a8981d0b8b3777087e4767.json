{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadi\\\\OneDrive\\\\Documents\\\\GitHub\\\\ADES\\\\frontEnd\\\\src\\\\components\\\\Quiz.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport Button from 'react-bootstrap/Button';\nimport $ from 'jquery';\nimport ReactCircleModal from 'react-circle-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BadgeAdmin extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: []\n    };\n\n    this.handle = event => {\n      this.setState({\n        badgeClassID: event.target.value\n      });\n    };\n\n    this.handleURL = event => {\n      this.setState({\n        pic_url: event.target.files[0]\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); //data extraction (combining data)\n      // file upload\n\n      const storage = getStorage();\n      const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\n      var file = this.state.pic_url; // Create file metadata including the content type\n\n      /** @type {any} */\n\n      const metadata = {\n        contentType: this.state.pic_url.type\n      };\n      console.log(\"yes\");\n      uploadBytes(storageRef, file, metadata);\n      getDownloadURL(storageRef).then(downloadURL => {\n        console.log('File available at', downloadURL);\n        const badge = {\n          name: this.state.name,\n          requirements: this.state.requirements,\n          pic_url: downloadURL,\n          badgeClassID: this.state.badgeClassID\n        };\n        console.log(\"BADGEEEE\" + JSON.stringify(badge));\n        const config = {\n          headers: {\n            'content-type': 'application/json'\n          }\n        };\n        axios.post('http://localhost:8081/newBadge', badge, config).then(res => {\n          console.log(res);\n          console.log(res.data);\n          window.location.reload();\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:8081/quiz`).then(res => {\n      console.log(res.data.length);\n      this.setState({\n        data: res.data\n      });\n      console.log(res.data[0]);\n\n      for (var i = 0; i < res.data.length; i++) {\n        var quiz = res.data[i];\n        console.log(\"quizid:\" + quiz.quizID);\n        console.log(\"total Marks:\" + quiz.totalMarks);\n        console.log(\"toalPoints:\" + quiz.totalPoints); //cpmplie the data that the card needs for its creation\n\n        var cardInfo = {\n          \"quizID\": quiz.quizID,\n          \"totalMarks\": quiz.totalMarks,\n          \"totalPoints\": quiz.totalPoints\n        };\n        console.log(\" -----------Card Info data pack-----------\");\n        console.log(cardInfo);\n        var newCard = createCard(cardInfo);\n        $('#users').append(newCard);\n      }\n    });\n\n    function createCard(cardInfo) {\n      console.log(cardInfo);\n      var card = `\n        <div class=\"card\" style=\" width:60% ;margin-right:10px;\">\n        <div class=\"card-body\">\n           \n           \n        </div> <p class=\"card-text\" style=\" font-size:20px;margin-left:20px\">Quiz ${cardInfo.quizID}</p>\n        <div style=\"margin-left:20px \"> \n        <div >\n            Total Marks:${cardInfo.totalMarks}\n        </div>\n        <div >\n            Total Points:${cardInfo.totalPoints}\n        </div>\n        <Link to={\"/EditBadge?id=${cardInfo.quizID}\"}>\n                      <Button>Do quiz</Button>\n                    </Link>\n        \n          </div>\n\n        \n         </div>\n            `;\n      return card;\n    }\n  } //NEED TO GET STUDENT ID!\n\n\n  render() {\n    const data = this.state.data;\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      const the_button = document.querySelector(\".js-btn\");\n      the_button.addEventListener(\"click\", handleClick);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"users\",\n        class: \"row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/src/components/Quiz.js"],"names":["React","axios","Link","getStorage","ref","uploadBytes","getDownloadURL","Button","$","ReactCircleModal","BadgeAdmin","Component","state","data","handle","event","setState","badgeClassID","target","value","handleURL","pic_url","files","handleSubmit","preventDefault","storage","storageRef","name","file","metadata","contentType","type","console","log","then","downloadURL","badge","requirements","JSON","stringify","config","headers","post","res","window","location","reload","componentDidMount","get","length","i","quiz","quizID","totalMarks","totalPoints","cardInfo","newCard","createCard","append","card","render","document","addEventListener","the_button","querySelector","handleClick"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport $ from 'jquery'; \r\nimport ReactCircleModal from 'react-circle-modal'\r\n\r\nexport default class BadgeAdmin extends React.Component {\r\n  state = {\r\n    data: [],\r\n    \r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n      \r\n    axios.get(`http://localhost:8081/quiz`)\r\n      .then(res => {\r\n        console.log(res.data.length);\r\n        this.setState({ data: res.data });\r\n        console.log(res.data[0])\r\n        for (var i = 0; i < res.data.length; i++) {\r\n            var quiz = res.data[i];\r\n            console.log(\"quizid:\" + quiz.quizID);\r\n            console.log(\"total Marks:\" + quiz.totalMarks);\r\n            console.log(\"toalPoints:\" + quiz.totalPoints);\r\n            \r\n            //cpmplie the data that the card needs for its creation\r\n            var cardInfo = {\r\n                \"quizID\" : quiz.quizID,\r\n                \"totalMarks\" : quiz.totalMarks,\r\n                \"totalPoints\" : quiz.totalPoints\r\n               \r\n            }\r\n            console.log(\" -----------Card Info data pack-----------\");\r\n            console.log(cardInfo);\r\n\r\n\r\n\r\n            var newCard = createCard(cardInfo);\r\n            $('#users').append(newCard);\r\n       \r\n      }\r\n\r\n    \r\n    });\r\n    \r\n\r\n    function createCard(cardInfo) {\r\n        console.log(cardInfo)\r\n        var card = `\r\n        <div class=\"card\" style=\" width:60% ;margin-right:10px;\">\r\n        <div class=\"card-body\">\r\n           \r\n           \r\n        </div> <p class=\"card-text\" style=\" font-size:20px;margin-left:20px\">Quiz ${cardInfo.quizID}</p>\r\n        <div style=\"margin-left:20px \"> \r\n        <div >\r\n            Total Marks:${cardInfo.totalMarks}\r\n        </div>\r\n        <div >\r\n            Total Points:${cardInfo.totalPoints}\r\n        </div>\r\n        <Link to={\"/EditBadge?id=${cardInfo.quizID}\"}>\r\n                      <Button>Do quiz</Button>\r\n                    </Link>\r\n        \r\n          </div>\r\n\r\n        \r\n         </div>\r\n            `;\r\n\r\n        return card;\r\n    }\r\n\r\n\r\n\r\n   \r\n  }\r\n\r\n //NEED TO GET STUDENT ID!\r\n\r\n\r\n\r\n\r\n  handle = event => {\r\n    this.setState({ badgeClassID: event.target.value });\r\n  }\r\n\r\n  handleURL = event => {\r\n    this.setState({ pic_url: event.target.files[0], });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    //data extraction (combining data)\r\n    // file upload\r\n    const storage = getStorage();\r\n    const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\r\n    var file = this.state.pic_url;\r\n    // Create file metadata including the content type\r\n    /** @type {any} */\r\n    const metadata = {\r\n      contentType: this.state.pic_url.type,\r\n    };\r\n    console.log(\"yes\");\r\n    uploadBytes(storageRef, file, metadata);\r\n\r\n    getDownloadURL(storageRef).then((downloadURL) => {\r\n      console.log('File available at', downloadURL);\r\n\r\n      const badge = {\r\n        name: this.state.name,\r\n        requirements: this.state.requirements,\r\n        pic_url: downloadURL,\r\n        badgeClassID: this.state.badgeClassID\r\n      };\r\n      console.log(\"BADGEEEE\" + JSON.stringify(badge))\r\n\r\n      const config = {\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        }\r\n      }\r\n      axios.post('http://localhost:8081/newBadge', badge, config)\r\n        .then(res => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n          window.location.reload();\r\n        })\r\n    });\r\n\r\n    \r\n  }\r\n\r\n\r\n\r\n  render() {\r\n      \r\n    const data = this.state.data;\r\n    document.addEventListener(\"DOMContentLoaded\",() => {\r\n      const the_button = document.querySelector(\".js-btn\")\r\n      the_button.addEventListener(\"click\", handleClick)\r\n    })\r\n    return (\r\n      <div>\r\n<div id=\"users\" class=\"row\">\r\n\r\n\r\n</div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}