{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadi\\\\OneDrive\\\\Documents\\\\GitHub\\\\ADES\\\\frontEnd\\\\src\\\\components\\\\MapOfMaze.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport wisp from '../css/wisp.png'; // with import\n\nimport '../css/maze.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BadgeAdmin extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleButton = event => {\n      event.preventDefault();\n\n      function myMove() {\n        let id = null;\n        const elem = document.getElementById(\"animate\");\n        let pos = 20;\n        const mazeLvl = 2;\n        clearInterval(id);\n        id = setInterval(frame, 3);\n\n        function frame() {\n          if (pos === 500) {//clearInterval(id);\n          } else {\n            // pos++; \n            // elem.style.top = pos + \"px\"; \n            // elem.style.left = pos + \"px\"; \n            //   if (mazeLvl>=1) {\n            //     elem.style.top = pos + \"px\"; \n            //     console.log(\"MAZE LVL 1\")\n            //   }\n            //   else if (mazeLvl>=2 ){\n            //     elem.style.left = pos + \"px\";\n            //     console.log(\"MAZE LVL 2\")\n            //   }\n            //  else if( mazeLvl>=3 ){\n            //   elem.style.left = pos + \"px\";\n            //   elem.style.top = pos + \"px\"; \n            //   console.log(\"MAZE LVL 4\")\n            //  }\n            if (mazeLvl > 0) {\n              return mazelvl1();\n            }\n\n            if (mazeLvl > 1) {\n              return mazelvl2();\n            }\n\n            if (mazeLvl >= 3) {\n              return mazelvl3();\n            }\n          }\n        }\n\n        function mazelvl1() {\n          pos++;\n          elem.style.top = pos + \"px\";\n          console.log(\"MAZE LVL 1 POS NUM  \" + pos);\n        }\n\n        function mazelvl2() {\n          pos++;\n          elem.style.right = pos + \"px\";\n          console.log(\"MAZE LVL 2 POS NUM  \" + pos);\n        }\n\n        function mazelvl3() {\n          pos++;\n          elem.style.top = pos + \"px\";\n          elem.style.left = pos + \"px\";\n          console.log(\"MAZE LVL 3 POS NUM  \" + pos);\n        }\n      }\n\n      return myMove();\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleButton,\n          children: \"Click Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"animate\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"imgAnimate\",\n            src: wisp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/src/components/MapOfMaze.js"],"names":["React","axios","wisp","BadgeAdmin","Component","handleButton","event","preventDefault","myMove","id","elem","document","getElementById","pos","mazeLvl","clearInterval","setInterval","frame","mazelvl1","mazelvl2","mazelvl3","style","top","console","log","right","left","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB,C,CAAoC;;AACpC,OAAO,iBAAP;;AAGA,eAAe,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SActDC,YAdsD,GAcvCC,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACC,cAAN;;AAEA,eAASC,MAAT,GAAkB;AACd,YAAIC,EAAE,GAAG,IAAT;AACA,cAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAb;AACA,YAAIC,GAAG,GAAE,EAAT;AACA,cAAMC,OAAO,GAAG,CAAhB;AACAC,QAAAA,aAAa,CAACN,EAAD,CAAb;AACAA,QAAAA,EAAE,GAAGO,WAAW,CAACC,KAAD,EAAQ,CAAR,CAAhB;;AACA,iBAASA,KAAT,GAAiB;AACf,cAAIJ,GAAG,KAAK,GAAZ,EAAiB,CACf;AACD,WAFD,MAEO;AACL;AACA;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAIC,OAAO,GAAC,CAAZ,EAAc;AACX,qBAAOI,QAAQ,EAAf;AACF;;AACD,gBAAIJ,OAAO,GAAC,CAAZ,EAAc;AACZ,qBAAOK,QAAQ,EAAf;AAED;;AACD,gBAAIL,OAAO,IAAE,CAAb,EAAe;AACb,qBAAOM,QAAQ,EAAf;AAED;AAIA;AACF;;AAID,iBAASF,QAAT,GAAmB;AACjBL,UAAAA,GAAG;AACHH,UAAAA,IAAI,CAACW,KAAL,CAAWC,GAAX,GAAiBT,GAAG,GAAG,IAAvB;AACAU,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAwBX,GAApC;AACD;;AACD,iBAASM,QAAT,GAAmB;AACjBN,UAAAA,GAAG;AACHH,UAAAA,IAAI,CAACW,KAAL,CAAWI,KAAX,GAAmBZ,GAAG,GAAG,IAAzB;AACAU,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAwBX,GAApC;AACD;;AACD,iBAASO,QAAT,GAAmB;AACjBP,UAAAA,GAAG;AACHH,UAAAA,IAAI,CAACW,KAAL,CAAWC,GAAX,GAAiBT,GAAG,GAAG,IAAvB;AACAH,UAAAA,IAAI,CAACW,KAAL,CAAWK,IAAX,GAAkBb,GAAG,GAAG,IAAxB;AACAU,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAwBX,GAApC;AACD;AAKF;;AACP,aAAOL,MAAM,EAAb;AAIC,KAxFuD;AAAA;;AAItDmB,EAAAA,iBAAiB,GAAG,CAOnB;;AAmFDC,EAAAA,MAAM,GAAG;AAGP,wBACA;AAAA,8BACI;AAAA,+BAAG;AAAQ,UAAA,OAAO,EAAE,KAAKvB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cADJ,eAGJ;AAAK,QAAA,EAAE,EAAE,WAAT;AAAA,+BACE;AAAK,UAAA,EAAE,EAAE,SAAT;AAAA,iCACM;AAAK,YAAA,EAAE,EAAE,YAAT;AAAsB,YAAA,GAAG,EAAEH;AAA3B;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHI;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAaD;;AA9GqD","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport wisp from '../css/wisp.png'; // with import\r\nimport '../css/maze.css';\r\n\r\n\r\nexport default class BadgeAdmin extends React.Component {\r\n \r\n\r\n\r\n  componentDidMount() {\r\n\r\n   \r\n  \r\n\r\n\r\n\r\n  }\r\n \r\n \r\n  handleButton = event => {\r\n    event.preventDefault();\r\n\r\n    function myMove() {\r\n        let id = null;\r\n        const elem = document.getElementById(\"animate\");   \r\n        let pos =20;\r\n        const mazeLvl = 2;\r\n        clearInterval(id);\r\n        id = setInterval(frame, 3);\r\n        function frame() {\r\n          if (pos === 500) {\r\n            //clearInterval(id);\r\n          } else {\r\n            // pos++; \r\n            // elem.style.top = pos + \"px\"; \r\n            // elem.style.left = pos + \"px\"; \r\n          //   if (mazeLvl>=1) {\r\n          //     elem.style.top = pos + \"px\"; \r\n          //     console.log(\"MAZE LVL 1\")\r\n          //   }\r\n          //   else if (mazeLvl>=2 ){\r\n          //     elem.style.left = pos + \"px\";\r\n          //     console.log(\"MAZE LVL 2\")\r\n          //   }\r\n          //  else if( mazeLvl>=3 ){\r\n          //   elem.style.left = pos + \"px\";\r\n          //   elem.style.top = pos + \"px\"; \r\n          //   console.log(\"MAZE LVL 4\")\r\n          //  }\r\n          if (mazeLvl>0){\r\n             return mazelvl1();\r\n          }\r\n          if (mazeLvl>1){\r\n            return mazelvl2();\r\n\r\n          }\r\n          if (mazeLvl>=3){\r\n            return mazelvl3();\r\n\r\n          }\r\n         \r\n\r\n\r\n          }\r\n        }\r\n\r\n\r\n\r\n        function mazelvl1(){\r\n          pos++; \r\n          elem.style.top = pos + \"px\"; \r\n          console.log(\"MAZE LVL 1 POS NUM  \" +pos);\r\n        }\r\n        function mazelvl2(){\r\n          pos++; \r\n          elem.style.right = pos + \"px\"; \r\n          console.log(\"MAZE LVL 2 POS NUM  \" +pos);\r\n        }\r\n        function mazelvl3(){\r\n          pos++; \r\n          elem.style.top = pos + \"px\"; \r\n          elem.style.left = pos + \"px\"; \r\n          console.log(\"MAZE LVL 3 POS NUM  \" +pos);\r\n        }\r\n\r\n\r\n\r\n\r\n      }\r\nreturn myMove();\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n \r\n    return (\r\n    <div>\r\n        <p><button onClick={this.handleButton}>Click Me</button></p> \r\n\r\n<div id =\"container\">\r\n  <div id =\"animate\">\r\n        <img id =\"imgAnimate\" src={wisp} />\r\n  </div>\r\n\r\n</div>\r\n    </div>\r\n\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}