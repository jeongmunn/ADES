{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadi\\\\OneDrive\\\\Documents\\\\GitHub\\\\ADES\\\\frontEnd\\\\src\\\\components\\\\MazeAdmin.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport '../css/Table&Add.css';\nimport ModalPopup from './EditBadge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MazeAdmin extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: []\n    };\n\n    this.isShowPopup = (status, badgeID, name, requirements, className, pic_url) => {\n      this.setState({\n        showModalPopup: status\n      });\n      this.setState({\n        badgeID: badgeID\n      });\n      this.setState({\n        name: name\n      });\n      this.setState({\n        requirements: requirements\n      });\n      this.setState({\n        badgeClassID: className\n      });\n      this.setState({\n        pic_url: pic_url\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8081/mazeContent').then(res => {\n      this.setState({\n        data: res.data\n      });\n    });\n  }\n\n  render() {\n    const data = this.state.data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewMazeLvl\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"p-3 text-center\",\n            children: \"Map of Maze Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped table-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Maze Level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Points\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), data && data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              id: \"tableRow\",\n              class: \"spaceUnder\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.mazeLvl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.points\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/EditMazeContent?lvl=${item.mazeLvl}`,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalPopup, {\n        showModalPopup: this.state.showModalPopup,\n        onPopupClose: this.isShowPopup,\n        badgeID: this.state.badgeID,\n        name: this.state.name,\n        requirements: this.state.requirements,\n        className: this.state.badgeClassID,\n        pic_url: this.state.pic_url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/src/components/MazeAdmin.js"],"names":["React","axios","Link","Button","ModalPopup","MazeAdmin","Component","state","data","isShowPopup","status","badgeID","name","requirements","className","pic_url","setState","showModalPopup","badgeClassID","componentDidMount","get","then","res","render","map","item","mazeLvl","points"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../css/Table&Add.css';\r\nimport ModalPopup from './EditBadge';\r\nexport default class MazeAdmin extends React.Component {\r\n\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:8081/mazeContent')\r\n            .then(res => {\r\n                this.setState({ data: res.data });\r\n            })\r\n    }\r\n   \r\n\r\n    isShowPopup = (status, badgeID, name, requirements, className,pic_url) => {\r\n        this.setState({ showModalPopup : status });\r\n        this.setState({ badgeID : badgeID });\r\n        this.setState({ name : name});\r\n        this.setState({ requirements : requirements});\r\n        this.setState({ badgeClassID : className });\r\n        this.setState({ pic_url : pic_url });\r\n    }\r\n  \r\n\r\n\r\n\r\n    render() {\r\n        const data = this.state.data;\r\n        return (\r\n            <div id=\"body\">\r\n            <div id=\"div\">\r\n            <div className=\"viewMazeLvl\">\r\n                <h3 className=\"p-3 text-center\">Map of Maze Content</h3>\r\n\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Maze Level</th>\r\n                            <th>Points</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    \r\n\r\n                        {data && data.map(item =>\r\n                            <tr id='tableRow' class=\"spaceUnder\">\r\n                                <td>{item.mazeLvl}</td>\r\n                                <td>{item.points}</td>\r\n                                <td>\r\n                                    <Link to={`/EditMazeContent?lvl=${item.mazeLvl}`}>\r\n                                    <Button>Edit</Button>\r\n                                    </Link>\r\n                                </td>\r\n\r\n                            </tr>\r\n                        )}\r\n                    \r\n                </table>\r\n            </div>\r\n            </div>\r\n            <ModalPopup\r\n                    showModalPopup={this.state.showModalPopup}\r\n                    onPopupClose={this.isShowPopup}\r\n                    badgeID={this.state.badgeID}\r\n                    name={this.state.name}\r\n                    requirements={this.state.requirements}\r\n                    className={this.state.badgeClassID}\r\n                    pic_url={this.state.pic_url}\r\n                ></ModalPopup>\r\n      </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}