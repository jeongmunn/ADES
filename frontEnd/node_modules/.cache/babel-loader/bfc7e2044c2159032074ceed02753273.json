{"ast":null,"code":"var _jsxFileName = \"/Users/isaactan17/Desktop/ADES/frontEnd/src/components/EditBadge.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport '../css/badgemazeEdit.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EditBadge extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      name: '',\n      requirements: '',\n      pic_url: '',\n      badgeClassID: ''\n    };\n\n    this.handleName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleRequirement = event => {\n      this.setState({\n        requirements: event.target.value\n      });\n    };\n\n    this.handleURL = event => {\n      this.setState({\n        pic_url: event.target.files[0]\n      });\n    };\n\n    this.handleBadgeClassID = event => {\n      this.setState({\n        badgeClassID: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // file upload\n\n      const storage = getStorage();\n      const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\n      var file = this.state.pic_url; // Create file metadata including the content type\n\n      /** @type {any} */\n\n      const metadata = {\n        contentType: this.state.pic_url.type\n      };\n      console.log(\"yes\");\n      uploadBytes(storageRef, file, metadata);\n      getDownloadURL(storageRef).then(downloadURL => {\n        console.log('File available at', downloadURL);\n        const badge = {\n          name: this.state.name,\n          requirements: this.state.requirements,\n          pic_url: downloadURL,\n          badgeClassID: this.state.badgeClassID\n        };\n        console.log(\"BADGEEEE\" + JSON.stringify(badge));\n        const config = {\n          headers: {\n            'content-type': 'application/json'\n          }\n        };\n        const badgeID = window.location.href.split('/')[3].slice(13);\n        const baseUrl = \"http://localhost:8081\";\n        console.log(badgeID);\n        axios.put(`${baseUrl}/editBadge/${badgeID}`, badge, config).then(res => {\n          console.log(res);\n          console.log(res.data);\n          window.location.replace('http://localhost:3000/badgesAdmin');\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bodyEdit\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"divEdit\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editReward\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Edit Badge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            id: \"formEdit\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"label\",\n              children: [\"Badge Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                onChange: this.handleName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"label\",\n              children: [\"Badge Requirement:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"requirements\",\n                onChange: this.handleRequirement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"label\",\n              children: [\"Pic URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"pic_url\",\n                onChange: this.handleURL\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"label\",\n              children: [\"Badge Class ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"badgeClassID\",\n                onChange: this.handleBadgeClassID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/isaactan17/Desktop/ADES/frontEnd/src/components/EditBadge.js"],"names":["React","axios","getStorage","ref","uploadBytes","getDownloadURL","EditBadge","Component","state","data","name","requirements","pic_url","badgeClassID","handleName","event","setState","target","value","handleRequirement","handleURL","files","handleBadgeClassID","handleSubmit","preventDefault","storage","storageRef","file","metadata","contentType","type","console","log","then","downloadURL","badge","JSON","stringify","config","headers","badgeID","window","location","href","split","slice","baseUrl","put","res","replace","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport '../css/badgemazeEdit.css';\n\n\nexport default class EditBadge extends React.Component {\n\n    state = {\n        data: [],\n        name: '',\n        requirements: '',\n        pic_url: '',\n        badgeClassID: ''\n    }\n\n\n\n    handleName = event => {\n        this.setState({ name: event.target.value });\n    }\n\n    handleRequirement = event => {\n        this.setState({ requirements: event.target.value });\n    }\n\n    handleURL = event => {\n        this.setState({ pic_url: event.target.files[0], });\n    }\n\n    handleBadgeClassID = event => {\n        this.setState({ badgeClassID: event.target.value });\n    }\n\n\n    handleSubmit = event => {\n        event.preventDefault();\n// file upload\nconst storage = getStorage();\nconst storageRef = ref(storage, 'img/' + this.state.pic_url.name);\nvar file = this.state.pic_url;\n// Create file metadata including the content type\n/** @type {any} */\nconst metadata = {\n    contentType: this.state.pic_url.type,\n};\nconsole.log(\"yes\");\nuploadBytes(storageRef, file, metadata);\n\ngetDownloadURL(storageRef).then((downloadURL) => {\n    console.log('File available at', downloadURL);\n\n    const badge = {\n        name: this.state.name,\n        requirements: this.state.requirements,\n        pic_url: downloadURL,\n        badgeClassID: this.state.badgeClassID\n    };\n\n    console.log(\"BADGEEEE\" + JSON.stringify(badge))\n\n    const config = {\n        headers: {\n            'content-type': 'application/json'\n        }\n    }\n\n    const badgeID = window.location.href.split('/')[3].slice(13);\n    const baseUrl = \"http://localhost:8081\";\n    console.log(badgeID);\n\n    axios.put(`${baseUrl}/editBadge/${badgeID}`, badge, config)\n        .then(res => {\n            console.log(res);\n            console.log(res.data);\n            window.location.replace('http://localhost:3000/badgesAdmin')                })\n});\n    }\n    render() {\n        return (\n            <div id=\"bodyEdit\">\n            <div id=\"divEdit\">\n            <div className=\"editReward\">\n                <h1>Edit Badge</h1>\n                <form onSubmit={this.handleSubmit} id=\"formEdit\">\n                    <label class='label'>\n                        Badge Name:\n                        <input type=\"text\" name=\"name\" onChange={this.handleName} />\n                    </label>\n                    <br/>\n                    <label class='label'>\n                        Badge Requirement:\n                        <input type=\"text\" name=\"requirements\" onChange={this.handleRequirement} />\n                    </label>\n                    <br/>\n                    <label class='label'>\n                        Pic URL:\n                        <input type=\"file\" name=\"pic_url\" onChange={this.handleURL} />\n                    </label>\n                    <br/>\n                    {/* Please remember to change and do JOIN table for it to not display as ID */}\n                    <label class='label'>\n                        Badge Class ID:\n                        <input type=\"text\" name=\"badgeClassID\" onChange={this.handleBadgeClassID} />\n                    </label>\n                    <br/>\n                    <button type=\"submit\">Add</button>\n                </form>\n            </div>\n            </div>\n      </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}