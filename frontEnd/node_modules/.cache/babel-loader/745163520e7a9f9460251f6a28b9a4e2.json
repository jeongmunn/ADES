{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadi\\\\OneDrive\\\\Documents\\\\GitHub\\\\ADES\\\\frontEnd\\\\src\\\\components\\\\MazePopup.js\";\nimport React, { Component, Fragment } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Modal } from 'react-bootstrap';\nimport axios from 'axios';\nimport jQuery from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ModalPopup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isShowModal = status => {\n      this.handleClose();\n      this.setState({\n        showModal: status\n      });\n    };\n\n    this.handleClose = () => {\n      this.props.onPopupClose(false, this.props.level);\n    };\n\n    this.handleComplete = () => {\n      // Store student's points\n      const quizPts = this.props.point;\n      const currentPoints = this.state.currentPts + quizPts;\n      const totalPoints = this.state.totalPts + quizPts;\n      const mazeLvl = parseInt(this.state.mazeLvl) + 1; // Do the calculation\n\n      this.setState({\n        currentPts: currentPoints\n      });\n      this.setState({\n        totalPts: totalPoints\n      });\n      this.setState({\n        mazeLvl: mazeLvl\n      }); // Update student's table\n\n      const data = {\n        currentPts: currentPoints,\n        totalPts: totalPoints,\n        mazeLvl: mazeLvl\n      };\n      const config = {\n        headers: {\n          'content-type': 'application/json'\n        }\n      };\n      axios.put('https://ades-ca1-project.herokuapp.com/api/points/' + this.props.id, data, config).then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n      const points = {\n        ptsAwarded: quizPts,\n        eventID: 2\n      }; // Insert points history\n\n      axios.post('http://localhost:8081/ptsHistory/' + this.props.id, points, config).then(res => {\n        console.log(res);\n        console.log(res.data);\n        this.handleClose();\n        window.alert(\"Points redeemed successfully\"); //updating the state \n\n        this.props.onNewLevel(true);\n      });\n    };\n\n    this.state = {\n      showModal: false,\n      newLevel: false,\n      currentPts: 0,\n      totalPts: 0,\n      mazeLvl: 0\n    };\n  }\n\n  componentDidMount() {\n    // Get student's points data'\n    axios.get('http://localhost:8081/points/' + this.props.id).then(res => {\n      this.setState({\n        currentPts: res.data[0].redeemedPts\n      });\n      this.setState({\n        totalPts: res.data[0].totalPts\n      });\n      this.setState({\n        mazeLvl: res.data[0].mazeLvl\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.props.showModalPopup,\n        onHide: this.handleClose,\n        id: this.props.level,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"sign-in-title\",\n            children: [\"Level \", this.props.level]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Quiz\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Points : \", this.props.point, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.handleComplete,\n              children: \"Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/src/components/MazePopup.js"],"names":["React","Component","Fragment","Button","Modal","axios","jQuery","ModalPopup","constructor","props","isShowModal","status","handleClose","setState","showModal","onPopupClose","level","handleComplete","quizPts","point","currentPoints","state","currentPts","totalPoints","totalPts","mazeLvl","parseInt","data","config","headers","put","id","then","res","console","log","points","ptsAwarded","eventID","post","window","alert","onNewLevel","newLevel","componentDidMount","get","redeemedPts","render","showModalPopup"],"mappings":"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","sourcesContent":["import React, { Component, Fragment} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Modal } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport jQuery from 'jquery';\r\n\r\nexport default class ModalPopup extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal : false,\r\n            newLevel:false,\r\n            currentPts : 0,\r\n            totalPts : 0,\r\n            mazeLvl: 0,\r\n            \r\n        };\r\n    }\r\n    \r\n    componentDidMount(){\r\n        // Get student's points data'\r\n      \r\n        axios.get('http://localhost:8081/points/' + this.props.id)\r\n        .then(res => {\r\n            this.setState({ currentPts : res.data[0].redeemedPts });\r\n            this.setState({ totalPts : res.data[0].totalPts});\r\n            this.setState({ mazeLvl : res.data[0].mazeLvl});\r\n        })\r\n    }\r\n\r\n    isShowModal = (status) => {\r\n        this.handleClose();\r\n        this.setState({ showModal : status});\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.onPopupClose(false,this.props.level);\r\n    }\r\n\r\n    handleComplete = () => {\r\n        // Store student's points\r\n        const quizPts = this.props.point;\r\n        const currentPoints = (this.state.currentPts + quizPts);\r\n        const totalPoints = (this.state.totalPts + quizPts);\r\n       \r\n        const mazeLvl = (parseInt(this.state.mazeLvl) + 1);\r\n    \r\n        // Do the calculation\r\n        this.setState({ currentPts : currentPoints});\r\n        this.setState({ totalPts : totalPoints});\r\n        this.setState({ mazeLvl : mazeLvl});\r\n        // Update student's table\r\n        const data = {\r\n            currentPts : currentPoints,\r\n            totalPts : totalPoints,\r\n            mazeLvl: mazeLvl\r\n        }\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type':'application/json'\r\n            }\r\n        }\r\n\r\n        axios.put('https://ades-ca1-project.herokuapp.com/api/points/' + this.props.id, data, config)\r\n        .then(res => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n        })\r\n\r\n        const points = {\r\n            ptsAwarded : quizPts,\r\n            eventID : 2\r\n        }\r\n\r\n        // Insert points history\r\n        axios.post('http://localhost:8081/ptsHistory/' + this.props.id, points, config)\r\n        .then(res => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            this.handleClose();\r\n            window.alert(\"Points redeemed successfully\");\r\n            //updating the state \r\n            this.props.onNewLevel(true);\r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n             \r\n        return (\r\n            <Fragment>  \r\n                <Modal show={this.props.showModalPopup} onHide={this.handleClose} id={this.props.level} \r\n                    size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>  \r\n                    <Modal.Header closeButton>  \r\n                        <Modal.Title id=\"sign-in-title\">  \r\n                            Level {this.props.level}\r\n                         </Modal.Title>  \r\n                    </Modal.Header>  \r\n                    <Modal.Body>  \r\n                        <hr />  \r\n                        <div className=\"Quiz\"> \r\n                        <div>Points : {this.props.point} </div>\r\n                        <Button onClick={this.handleComplete} >Complete</Button>\r\n                        </div>  \r\n                    </Modal.Body>  \r\n                </Modal >  \r\n            </Fragment >  \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}