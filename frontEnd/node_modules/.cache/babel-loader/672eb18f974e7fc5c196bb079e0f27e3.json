{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadi\\\\OneDrive\\\\Documents\\\\GitHub\\\\ADES\\\\frontEnd\\\\src\\\\components\\\\Quiz.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\nimport '../css/pop-up.css'; // import ModalPopup from './Modal';  \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BadgeAdmin extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n\n    this.handleButton = event => {\n      this.setState({\n        showModalPopup: status\n      });\n      event.preventDefault();\n      console.log(\"BUTTON CLICKED\"); // Get the modal\n\n      var modal = document.getElementById(\"myModal\");\n      const quizID = event.target.getAttribute(\"data-index\");\n      const totalMarks = event.target.getAttribute(\"data-mark\");\n      const totalPoints = event.target.getAttribute(\"data-points\"); // console.log(quizID);\n      // console.log(totalMarks);\n      // console.log(totalPoints);\n\n      const quiz = {\n        quizID: quizID,\n        studentID: '1',\n        pointsEarned: totalPoints,\n        marksEarned: totalMarks\n      };\n      const studentUpdatePoint = {\n        pointsEarned: totalPoints,\n        studentID: '1'\n      };\n      const config = {\n        headers: {\n          'content-type': 'application/json'\n        }\n      };\n      axios.post('http://localhost:8081/quiz', quiz, config).then(res => {\n        console.log(res);\n        console.log(res.data);\n        console.log(\"AXIOS POSTING\"); // window.location.reload();\n      });\n      axios.put(`http://localhost:8081/studentPoints`, studentUpdatePoint, config).then(res => {\n        console.log(res);\n        console.log(res.data);\n        console.log(\"AXIOS PUTTING\");\n      }); // Get the <span> element that closes the modal\n\n      var span = document.getElementsByClassName(\"close\")[0]; // When the user clicks the button, open the modal \n\n      modal.style.display = \"block\"; // When the user clicks on <span> (x), close the modal\n\n      span.onclick = function () {\n        modal.style.display = \"none\";\n      };\n\n      if (event.target === modal) {\n        modal.style.display = \"none\";\n      }\n    };\n\n    this.state = {\n      showModalPopup: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:8081/quiz`).then(res => {\n      console.log(res.data.length);\n      this.setState({\n        data: res.data\n      });\n      console.log(res.data.length);\n      this.setState({\n        data: res.data\n      });\n    });\n  }\n\n  //NEED TO GET STUDENT ID!\n  render() {\n    const data = this.state.data; // When the user clicks anywhere outside of the modal, close it\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"users\",\n        class: \"row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"myModal\",\n          class: \"modal\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"close\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"QUIZ completed!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table\",\n        children: data && data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: \"tableRow\",\n          class: \"spaceUnder\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Quiz \", item.quizID]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Total Marks: \", item.totalMarks]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Total Points:\", item.totalPoints]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleButton,\n              \"data-index\": item.quizID,\n              \"data-mark\": item.totalMarks,\n              \"data-points\": item.totalPoints,\n              type: \"submit\",\n              id: \"myBtn\",\n              children: \"Open Modal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, item.quizID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalPopup, {\n        showModalPopup: this.state.showModalPopup,\n        onPopupClose: this.isShowPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/src/components/Quiz.js"],"names":["React","axios","Button","BadgeAdmin","Component","constructor","state","data","handleButton","event","setState","showModalPopup","status","preventDefault","console","log","modal","document","getElementById","quizID","target","getAttribute","totalMarks","totalPoints","quiz","studentID","pointsEarned","marksEarned","studentUpdatePoint","config","headers","post","then","res","put","span","getElementsByClassName","style","display","onclick","componentDidMount","get","length","render","map","item","isShowPopup"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../css/pop-up.css';\r\n// import ModalPopup from './Modal';  \r\n\r\nexport default class BadgeAdmin extends React.Component {\r\n  state = {\r\n    data: [],\r\n\r\n  }\r\n\r\n  constructor() {  \r\n    super();  \r\n    this.state = {  \r\n      showModalPopup: false  \r\n    }  \r\n  } \r\n  componentDidMount() {\r\n\r\n    axios.get(`http://localhost:8081/quiz`)\r\n      .then(res => {\r\n        console.log(res.data.length);\r\n        this.setState({ data: res.data });\r\n\r\n        console.log(res.data.length);\r\n\r\n        this.setState({ data: res.data });\r\n\r\n\r\n      });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n  handleButton = event => {\r\n    this.setState({ showModalPopup: status });  \r\n    event.preventDefault();\r\n    console.log(\"BUTTON CLICKED\");\r\n    // Get the modal\r\n    var modal = document.getElementById(\"myModal\");\r\n    const quizID = event.target.getAttribute(\"data-index\");\r\n    const totalMarks = event.target.getAttribute(\"data-mark\");\r\n    const totalPoints = event.target.getAttribute(\"data-points\");\r\n    // console.log(quizID);\r\n    // console.log(totalMarks);\r\n    // console.log(totalPoints);\r\n\r\n    const quiz = {\r\n      quizID: quizID,\r\n      studentID: '1',\r\n      pointsEarned: totalPoints,\r\n      marksEarned: totalMarks\r\n    };\r\n    const studentUpdatePoint = {\r\n      pointsEarned: totalPoints,\r\n      studentID: '1',\r\n    }\r\n\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }\r\n    axios.post('http://localhost:8081/quiz', quiz, config)\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        console.log(\"AXIOS POSTING\")\r\n        // window.location.reload();\r\n      })\r\n    axios.put(`http://localhost:8081/studentPoints`, studentUpdatePoint, config)\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        console.log(\"AXIOS PUTTING\")\r\n      })\r\n\r\n    // Get the <span> element that closes the modal\r\n    var span = document.getElementsByClassName(\"close\")[0];\r\n\r\n    // When the user clicks the button, open the modal \r\n\r\n    modal.style.display = \"block\";\r\n\r\n\r\n    // When the user clicks on <span> (x), close the modal\r\n    span.onclick = function () {\r\n      modal.style.display = \"none\";\r\n    }\r\n    if (event.target === modal) {\r\n      modal.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  //NEED TO GET STUDENT ID!\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const data = this.state.data;\r\n\r\n\r\n    // When the user clicks anywhere outside of the modal, close it\r\n\r\n    return (\r\n\r\n      <div>\r\n        <div id=\"users\" class=\"row\">\r\n\r\n\r\n        </div>\r\n        <div>\r\n\r\n\r\n\r\n\r\n          <div id=\"myModal\" class=\"modal\">\r\n\r\n\r\n            <div class=\"modal-content\">\r\n              <span class=\"close\">&times;</span>\r\n              <p>QUIZ completed!</p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <table class=\"table\">\r\n\r\n          {data && data.map(item =>\r\n            <tr key={item.quizID} id='tableRow' class=\"spaceUnder\">\r\n              <td>Quiz {item.quizID}</td>\r\n              <td>Total Marks: {item.totalMarks}</td>\r\n              <td>Total Points:{item.totalPoints}</td>\r\n\r\n              <td>\r\n                <button onClick={this.handleButton} data-index={item.quizID} data-mark={item.totalMarks} data-points={item.totalPoints} type=\"submit\" id=\"myBtn\">Open Modal</button>\r\n\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </table>\r\n        <ModalPopup  \r\n          showModalPopup={this.state.showModalPopup}  \r\n          onPopupClose={this.isShowPopup}  \r\n        ></ModalPopup>  \r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}