{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadi\\\\OneDrive\\\\Documents\\\\GitHub\\\\ADES\\\\frontEnd\\\\src\\\\components\\\\BadgeAdmin.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormData = require('form-data');\n\nconst fs = require('fs');\n\nexport default class BadgeAdmin extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      name: '',\n      requirements: '',\n      pic_url: '',\n      badgeClassID: ''\n    };\n\n    this.handleName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleRequirement = event => {\n      this.setState({\n        requirements: event.target.value\n      });\n    };\n\n    this.handleBadgeClassID = event => {\n      this.setState({\n        badgeClassID: event.target.value\n      });\n    };\n\n    this.handleURL = event => {\n      this.setState({\n        pic_url: event.target.files[0]\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); //data extraction (combining data)\n      // file upload\n\n      const storage = getStorage();\n      const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\n      var file = this.state.pic_url; // Create file metadata including the content type\n\n      /** @type {any} */\n\n      const metadata = {\n        contentType: this.state.pic_url.type\n      };\n      console.log(\"yes\");\n      uploadBytes(storageRef, file, metadata);\n      const badge = {\n        name: this.state.name,\n        requirements: this.state.requirements,\n        pic_url: this.state.pic_url.name,\n        badgeClassID: this.state.badgeClassID\n      };\n      console.log(\"BADGEEEE\" + JSON.stringify(badge));\n      const config = {\n        headers: {\n          'content-type': 'application/json'\n        }\n      };\n      axios.post('http://localhost:8081/newBadge', badge, config).then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:8081/badges`).then(res => {\n      console.log(res.data.length); // for(let i = 0; i < res.data.length; i++) {\n      //   const name = res.data[i].name;\n      //   const requirements = res.data[i].requirements;\n      //   const pic_url = res.data[i].pic_url;\n      //   const badgeClassID = res.data[i].badgeClassID;\n      //   console.log(name);\n      //   this.setState({ name });\n      //   this.setState({ requirements });\n      //   this.setState({ pic_url });\n      //   this.setState({ badgeClassID });\n      // }\n\n      this.setState({\n        data: res.data\n      });\n    });\n  }\n\n  render() {\n    const data = this.state.data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Badges Administration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"viewBadges\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add Badge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Badge Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                onChange: this.handleName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Badge Requirement:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"requirements\",\n                onChange: this.handleRequirement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Pic URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"pic_url\",\n                onChange: this.handleURL\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Badge Class ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"badgeClassID\",\n                onChange: this.handleBadgeClassID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"View Badges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), data && data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.requirements\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.badgeClassID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: '../images/' + item.pic_url,\n              style: {\n                height: 200,\n                width: 200\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/EditMazeContent?lvl=${item.badgeID}`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), \"            \"]\n        }, item.badgeID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/src/components/BadgeAdmin.js"],"names":["React","axios","Link","getStorage","ref","uploadBytes","getDownloadURL","Button","FormData","require","fs","BadgeAdmin","Component","state","data","name","requirements","pic_url","badgeClassID","handleName","event","setState","target","value","handleRequirement","handleBadgeClassID","handleURL","files","handleSubmit","preventDefault","storage","storageRef","file","metadata","contentType","type","console","log","badge","JSON","stringify","config","headers","post","then","res","componentDidMount","get","length","render","map","item","height","width","badgeID"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport Button from 'react-bootstrap/Button';\r\nconst FormData = require('form-data');\r\nconst fs = require('fs');\r\n\r\nexport default class BadgeAdmin extends React.Component {\r\n  state = {\r\n    data: [],\r\n    name: '',\r\n    requirements: '',\r\n    pic_url: '',\r\n    badgeClassID: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:8081/badges`)\r\n      .then(res => {\r\n        console.log(res.data.length);\r\n        // for(let i = 0; i < res.data.length; i++) {\r\n        //   const name = res.data[i].name;\r\n        //   const requirements = res.data[i].requirements;\r\n        //   const pic_url = res.data[i].pic_url;\r\n        //   const badgeClassID = res.data[i].badgeClassID;\r\n        //   console.log(name);\r\n        //   this.setState({ name });\r\n        //   this.setState({ requirements });\r\n        //   this.setState({ pic_url });\r\n        //   this.setState({ badgeClassID });\r\n        // }\r\n        this.setState({ data: res.data });\r\n      })\r\n  }\r\n\r\n  handleName = event => {\r\n    this.setState({ name: event.target.value });\r\n  }\r\n\r\n  handleRequirement = event => {\r\n    this.setState({ requirements: event.target.value });\r\n  }\r\n\r\n  handleBadgeClassID = event => {\r\n    this.setState({ badgeClassID: event.target.value });\r\n  }\r\n\r\n  handleURL = event => {\r\n    this.setState({ pic_url: event.target.files[0], });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    //data extraction (combining data)\r\n    // file upload\r\n    const storage = getStorage();\r\n    const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\r\n    var file = this.state.pic_url;\r\n    // Create file metadata including the content type\r\n    /** @type {any} */\r\n    const metadata = {\r\n      contentType: this.state.pic_url.type,\r\n    };\r\n    console.log(\"yes\");\r\n    uploadBytes(storageRef, file, metadata);\r\n    const badge = {\r\n      name: this.state.name,\r\n      requirements: this.state.requirements,\r\n      pic_url: this.state.pic_url.name,\r\n      badgeClassID: this.state.badgeClassID\r\n    };\r\n    console.log(\"BADGEEEE\" + JSON.stringify(badge))\r\n\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }\r\n\r\n    axios.post('http://localhost:8081/newBadge', badge, config)\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const data = this.state.data;\r\n    return (\r\n      <div>\r\n        <h1>Badges Administration</h1>\r\n        <div className=\"viewBadges\">\r\n          <div>\r\n            <h2>Add Badge</h2>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <label>\r\n                Badge Name:\r\n            <input type=\"text\" name=\"name\" onChange={this.handleName} />\r\n              </label>\r\n              <label>\r\n                Badge Requirement:\r\n            <input type=\"text\" name=\"requirements\" onChange={this.handleRequirement} />\r\n              </label>\r\n              <label>\r\n                Pic URL:\r\n            <input type=\"file\" name=\"pic_url\" onChange={this.handleURL} />\r\n              </label>\r\n              {/* Please remember to change and do JOIN table for it to not display as ID */}\r\n              <label>\r\n                Badge Class ID:\r\n            <input type=\"text\" name=\"badgeClassID\" onChange={this.handleBadgeClassID} />\r\n              </label>\r\n              <button type=\"submit\">Add</button>\r\n            </form>\r\n          </div>\r\n          <h2>View Badges</h2>\r\n          {data && data.map(item =>\r\n            <tr key={item.badgeID}>\r\n              <td>{item.name}</td>\r\n              <td>{item.requirements}</td>\r\n              <td>{item.badgeClassID}</td>\r\n              <td><img src={'../images/' + item.pic_url} style={{ height: 200, width: 200 }}></img></td>\r\n              <td>\r\n                <Link to={`/EditMazeContent?lvl=${item.badgeID}`}>\r\n                  <Button>Edit</Button>\r\n                </Link>\r\n              </td>            </tr>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}