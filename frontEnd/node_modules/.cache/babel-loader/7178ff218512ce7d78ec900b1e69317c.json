{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadi\\\\OneDrive\\\\Documents\\\\GitHub\\\\ADES\\\\frontEnd\\\\src\\\\components\\\\BadgeAdmin.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport Button from 'react-bootstrap/Button';\nimport '../css/Table&Add.css';\nimport ModalPopup from './EditBadge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BadgeAdmin extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      showModalPopup: false,\n      class: [],\n      name: '',\n      requirements: '',\n      pic_url: '',\n      badgeClassID: '',\n      badgeID: ''\n    };\n\n    this.isShowPopup = (status, badgeID, name, requirements, className, pic_url) => {\n      this.setState({\n        showModalPopup: status\n      });\n      this.setState({\n        badgeID: id\n      });\n      this.setState({\n        originName: name\n      });\n      this.setState({\n        originPoints: points\n      });\n      this.setState({\n        originUrl: url\n      });\n    };\n\n    this.handleName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleRequirement = event => {\n      this.setState({\n        requirements: event.target.value\n      });\n    };\n\n    this.handleURL = event => {\n      this.setState({\n        pic_url: event.target.files[0]\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); //data extraction (combining data)\n      // file upload\n\n      const storage = getStorage();\n      const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\n      var file = this.state.pic_url; // Create file metadata including the content type\n\n      /** @type {any} */\n\n      const metadata = {\n        contentType: this.state.pic_url.type\n      };\n      uploadBytes(storageRef, file, metadata);\n      getDownloadURL(storageRef).then(downloadURL => {\n        console.log('File available at', downloadURL);\n        var bcID = document.getElementById(\"dropDown\");\n        var bID = bcID.value;\n        var badgeClassID = parseInt(bID);\n        console.log(badgeClassID + \"classBADGE\");\n        const badge = {\n          name: this.state.name,\n          requirements: this.state.requirements,\n          pic_url: downloadURL,\n          badgeClassID: badgeClassID\n        };\n        console.log(\"BADGEEEE\" + JSON.stringify(badge));\n        const config = {\n          headers: {\n            'content-type': 'application/json'\n          }\n        };\n        axios.post('http://localhost:8081/newBadge', badge, config).then(res => {\n          console.log(res);\n          console.log(res.data);\n          window.location.reload();\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:8081/badges`).then(res => {\n      console.log(res.data.length);\n      this.setState({\n        data: res.data\n      });\n    });\n    axios.get(`http://localhost:8081/badgeClass`).then(res => {\n      console.log(res.data.length);\n      this.setState({\n        class: res.data\n      });\n    });\n  }\n\n  render() {\n    const data = this.state.data;\n    const data2 = this.state.class;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontFamily: \"sans-serif \",\n            color: 'blue'\n          },\n          children: \"Badges Administration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewBadges\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"divForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              id: \"add\",\n              children: \"Add Badge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.handleSubmit,\n              id: \"form\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Badge Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"name\",\n                  onChange: this.handleName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Badge Requirement:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"requirements\",\n                  onChange: this.handleRequirement\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Pic URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  name: \"pic_url\",\n                  onChange: this.handleURL\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Badge Class ID:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"badgeClassID\",\n                  onChange: this.handleBadgeClassID,\n                  id: \"dropDown\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"1\",\n                    children: \"Air\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"2\",\n                    children: \"Water\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"3\",\n                    children: \"Fire\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"4\",\n                    children: \"Geo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Badge Class\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                class: \"table\",\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Class Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Describtion \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 17\n                }, this), data2 && data2.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  id: \"tableRow\",\n                  class: \"spaceUnder\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.className\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.classDescription\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"View Badges\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              class: \"table\",\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Badge Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Requirements\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"badgeClass\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Picture\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), data && data.map(item2 => /*#__PURE__*/_jsxDEV(\"tr\", {\n                id: \"tableRow\",\n                class: \"spaceUnder\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item2.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item2.requirements\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item2.className\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: item2.pic_url,\n                    style: {\n                      height: 200,\n                      width: 200\n                    },\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    variant: \"warning\",\n                    onClick: () => this.isShowPopup(true, item2.badgeID, item2.name, item2.requirements, item2.className, item2.pic_url),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 21\n                }, this)]\n              }, item2.badgeID, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalPopup, {\n            showModalPopup: this.state.showModalPopup,\n            onPopupClose: this.isShowPopup,\n            badgeID: this.state.rewardID,\n            name: this.state.name,\n            requirements: this.state.requirements,\n            className: this.state.badgeClassID,\n            pic_url: this.state.pic_url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/src/components/BadgeAdmin.js"],"names":["React","axios","Link","getStorage","ref","uploadBytes","getDownloadURL","Button","ModalPopup","BadgeAdmin","Component","state","data","showModalPopup","class","name","requirements","pic_url","badgeClassID","badgeID","isShowPopup","status","className","setState","id","originName","originPoints","points","originUrl","url","handleName","event","target","value","handleRequirement","handleURL","files","handleSubmit","preventDefault","storage","storageRef","file","metadata","contentType","type","then","downloadURL","console","log","bcID","document","getElementById","bID","parseInt","badge","JSON","stringify","config","headers","post","res","window","location","reload","componentDidMount","get","length","render","data2","fontFamily","color","handleBadgeClassID","map","item","classDescription","item2","height","width","rewardID"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../css/Table&Add.css';\r\nimport ModalPopup from './EditBadge';\r\n\r\nexport default class BadgeAdmin extends React.Component {\r\n  state = {\r\n    data: [],\r\n    showModalPopup: false,\r\n    class: [],\r\n    name: '',\r\n    requirements: '',\r\n    pic_url: '',\r\n    badgeClassID: '',\r\n    badgeID:''\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:8081/badges`)\r\n      .then(res => {\r\n        console.log(res.data.length);\r\n\r\n        this.setState({ data: res.data });\r\n      })\r\n\r\n    axios.get(`http://localhost:8081/badgeClass`)\r\n      .then(res => {\r\n        console.log(res.data.length);\r\n\r\n        this.setState({ class: res.data });\r\n      })\r\n  }\r\n\r\n  isShowPopup = (status, badgeID, name, requirements, className,pic_url) => {\r\n    this.setState({ showModalPopup : status });\r\n    this.setState({ badgeID : id });\r\n    this.setState({ originName : name});\r\n    this.setState({ originPoints : points});\r\n    this.setState({ originUrl : url });\r\n}\r\n  handleName = event => {\r\n    this.setState({ name: event.target.value });\r\n  }\r\n\r\n  handleRequirement = event => {\r\n    this.setState({ requirements: event.target.value });\r\n  }\r\n\r\n \r\n\r\n  handleURL = event => {\r\n    this.setState({ pic_url: event.target.files[0], });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    //data extraction (combining data)\r\n    // file upload\r\n    const storage = getStorage();\r\n    const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\r\n    var file = this.state.pic_url;\r\n    // Create file metadata including the content type\r\n    /** @type {any} */\r\n    const metadata = {\r\n      contentType: this.state.pic_url.type,\r\n    };\r\n   \r\n    uploadBytes(storageRef, file, metadata);\r\n\r\n    getDownloadURL(storageRef).then((downloadURL) => {\r\n      console.log('File available at', downloadURL);\r\n\r\n      var bcID = document.getElementById(\"dropDown\");\r\n      var bID = bcID.value;\r\n      var badgeClassID = parseInt(bID);\r\n      console.log(badgeClassID + \"classBADGE\")\r\n      const badge = {\r\n        name: this.state.name,\r\n        requirements: this.state.requirements,\r\n        pic_url: downloadURL,\r\n        badgeClassID: badgeClassID\r\n      };\r\n      console.log(\"BADGEEEE\" + JSON.stringify(badge))\r\n\r\n      const config = {\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        }\r\n      }\r\n      axios.post('http://localhost:8081/newBadge', badge, config)\r\n        .then(res => {\r\n          console.log(res);\r\n          console.log(res.data);\r\n          window.location.reload();\r\n        })\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const data = this.state.data;\r\n    const data2 = this.state.class;\r\n    return (\r\n\r\n      <div id=\"body\">\r\n        <div id=\"div\">\r\n          <h1 style={{ fontFamily: \"sans-serif \", color: 'blue' }}>Badges Administration</h1>\r\n          <div className=\"viewBadges\">\r\n            <div id=\"divForm\">\r\n              <h2 id=\"add\">Add Badge</h2>\r\n              <form onSubmit={this.handleSubmit} id=\"form\" >\r\n                <label>\r\n                  Badge Name:\r\n                  <input type=\"text\" name=\"name\" onChange={this.handleName} />\r\n                </label>\r\n                <br/>\r\n                <label>\r\n                  Badge Requirement:\r\n                  <input type=\"text\" name=\"requirements\" onChange={this.handleRequirement} />\r\n                </label>\r\n                <br/>\r\n                <label>\r\n                  Pic URL:\r\n                  <input type=\"file\" name=\"pic_url\" onChange={this.handleURL} />\r\n                </label>\r\n                {/* Please remember to change and do JOIN table for it to not display as ID */}\r\n                <br/>\r\n                <label>\r\n                  Badge Class ID:\r\n                  <select name=\"badgeClassID\" onChange={this.handleBadgeClassID} id=\"dropDown\">\r\n                    <option value=\"1\">Air</option>\r\n                    <option value=\"2\">Water</option>\r\n                    <option value=\"3\">Fire</option>\r\n                    <option value=\"4\">Geo</option>\r\n                  </select>\r\n                  {/* <input type=\"text\" name=\"badgeClassID\" onChange={this.handleBadgeClassID} /> */}\r\n                </label>\r\n                <button  type=\"submit\">Add</button>\r\n              </form>\r\n            </div>\r\n\r\n            <div> <div>\r\n              <h2>Badge Class</h2>\r\n              <table class=\"table\">\r\n                <tr>\r\n                  <th>Class Name</th>\r\n                  <th>Describtion </th>\r\n\r\n                </tr>\r\n                {data2 && data2.map(item =>\r\n                  <tr id='tableRow' class=\"spaceUnder\">\r\n                    <td>{item.className}</td>\r\n                    <td>{item.classDescription}</td>\r\n\r\n                  </tr>\r\n                )}\r\n              </table>\r\n            </div></div>\r\n            <div>\r\n              <h2>View Badges</h2>\r\n              <table class=\"table\">\r\n                <tr>\r\n                  <th>Badge Name</th>\r\n                  <th>Requirements</th>\r\n                  <th>badgeClass</th>\r\n                  <th>Picture</th>\r\n                </tr>\r\n                {data && data.map(item2 =>\r\n                  <tr key={item2.badgeID} id='tableRow' class=\"spaceUnder\">\r\n                    <td>{item2.name}</td>\r\n                    <td>{item2.requirements}</td>\r\n                    <td>{item2.className}</td>\r\n                    <td><img src={item2.pic_url} style={{ height: 200, width: 200 }} alt=\"\"></img></td>\r\n                    <td><Button type=\"button\" variant=\"warning\" onClick={() => this.isShowPopup(true, item2.badgeID, item2.name, item2.requirements, item2.className,item2.pic_url)}>Edit</Button></td>\r\n                  </tr>\r\n                )}\r\n              </table>\r\n            </div>\r\n            <ModalPopup\r\n                    showModalPopup={this.state.showModalPopup}\r\n                    onPopupClose={this.isShowPopup}\r\n                    badgeID={this.state.rewardID}\r\n                    name={this.state.name}\r\n                    requirements={this.state.requirements}\r\n                    className={this.state.badgeClassID}\r\n                    pic_url={this.state.pic_url}\r\n                ></ModalPopup>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}