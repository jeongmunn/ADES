{"ast":null,"code":"import _classCallCheck from\"C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from'react';import Button from'react-bootstrap/Button';import{Modal}from'react-bootstrap';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuizPopup=/*#__PURE__*/function(_Component){_inherits(QuizPopup,_Component);var _super=_createSuper(QuizPopup);function QuizPopup(props){var _this;_classCallCheck(this,QuizPopup);_this=_super.call(this,props);_this.isShowModal=function(status){_this.handleClose();_this.setState({showModal:status});};_this.handleClose=function(){_this.props.onPopupClose(false);};_this.state={showModal:false,data:[],id:0,quizID:0};return _this;}_createClass(QuizPopup,[{key:\"render\",value:function render(){var _this2=this;var data=this.props.data;return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsxs(Modal,{show:this.props.showModalPopup,onHide:this.handleClose,size:\"lg\",\"aria-labelledby\":\"contained-modal-title-vcenter\",centered:true,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{id:\"sign-in-title\",children:\"Summary\"})}),/*#__PURE__*/_jsxs(Modal.Body,{children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"Summary\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"p-3 text-center\",children:\"Display Summary of Points\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped table-bordered\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Marks Awarded\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Points Earned\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:data&&data.map(function(item){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:item.pointsEarned}),/*#__PURE__*/_jsx(\"td\",{children:item.marksEarned})]},item.quizHistoryID);})})]}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return _this2.isShowModal(true);},children:\"Close\"})]})]})]})});}}]);return QuizPopup;}(Component);export{QuizPopup as default};","map":{"version":3,"sources":["C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/src/components/QuizPopup.js"],"names":["React","Component","Fragment","Button","Modal","axios","QuizPopup","props","isShowModal","status","handleClose","setState","showModal","onPopupClose","state","data","id","quizID","showModalPopup","map","item","pointsEarned","marksEarned","quizHistoryID"],"mappings":"oqBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,OAASC,KAAT,KAAsB,iBAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2FAEqBC,CAAAA,S,sGAEjB,mBAAYC,KAAZ,CAAmB,2CACf,uBAAMA,KAAN,EADe,MAUnBC,WAVmB,CAUL,SAACC,MAAD,CAAY,CACtB,MAAKC,WAAL,GACA,MAAKC,QAAL,CAAc,CAAEC,SAAS,CAAEH,MAAb,CAAd,EACH,CAbkB,OAenBC,WAfmB,CAeL,UAAM,CAChB,MAAKH,KAAL,CAAWM,YAAX,CAAwB,KAAxB,EACH,CAjBkB,CAEf,MAAKC,KAAL,CAAa,CACTF,SAAS,CAAE,KADF,CAETG,IAAI,CAAE,EAFG,CAGTC,EAAE,CAAC,CAHM,CAITC,MAAM,CAAC,CAJE,CAAb,CAFe,aAQlB,C,4CAeD,iBAAS,iBAEL,GAAMF,CAAAA,IAAI,CAAG,KAAKR,KAAL,CAAWQ,IAAxB,CAEA,mBACI,KAAC,QAAD,wBACI,MAAC,KAAD,EAAO,IAAI,CAAE,KAAKR,KAAL,CAAWW,cAAxB,CAAwC,MAAM,CAAE,KAAKR,WAArD,CACI,IAAI,CAAC,IADT,CAEI,kBAAgB,+BAFpB,CAGI,QAAQ,KAHZ,wBAII,KAAC,KAAD,CAAO,MAAP,EAAc,WAAW,KAAzB,uBACI,KAAC,KAAD,CAAO,KAAP,EAAa,EAAE,CAAC,eAAhB,qBADJ,EAJJ,cASI,MAAC,KAAD,CAAO,IAAP,yBACI,aADJ,cAEI,aAAK,SAAS,CAAC,SAAf,wBACI,WAAI,SAAS,CAAC,iBAAd,uCADJ,cAEI,eAAO,SAAS,CAAC,oCAAjB,wBACI,oCACI,mCACI,qCADJ,cAEI,qCAFJ,GADJ,EADJ,cAOI,uBACKK,IAAI,EAAIA,IAAI,CAACI,GAAL,CAAS,SAAAC,IAAI,qBAClB,mCACI,oBAAKA,IAAI,CAACC,YAAV,EADJ,cAEI,oBAAKD,IAAI,CAACE,WAAV,EAFJ,GAASF,IAAI,CAACG,aAAd,CADkB,EAAb,CADb,EAPJ,GAFJ,cAkBI,KAAC,MAAD,EAAQ,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACf,WAAL,CAAiB,IAAjB,CAAN,EAAjB,mBAlBJ,GAFJ,GATJ,GADJ,EADJ,CAqCH,C,uBAlEkCP,S,SAAlBK,S","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Modal } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nexport default class QuizPopup extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            data: [],\r\n            id:0,\r\n            quizID:0\r\n        };\r\n    }\r\n\r\n    isShowModal = (status) => {\r\n        this.handleClose();\r\n        this.setState({ showModal: status });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.onPopupClose(false);\r\n    }\r\n\r\n  \r\n    \r\n \r\n\r\n    render() {\r\n\r\n        const data = this.props.data;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Modal show={this.props.showModalPopup} onHide={this.handleClose}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered  >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"sign-in-title\">\r\n                            Summary\r\n                         </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <hr />\r\n                        <div className=\"Summary\">\r\n                            <h3 className=\"p-3 text-center\">Display Summary of Points</h3>\r\n                            <table className=\"table table-striped table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Marks Awarded</th>\r\n                                        <th>Points Earned</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {data && data.map(item =>\r\n                                        <tr key={item.quizHistoryID}>\r\n                                            <td>{item.pointsEarned}</td>\r\n                                            <td>{item.marksEarned}</td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                            <Button onClick={() => this.isShowModal(true)}>Close</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal >\r\n            </Fragment >\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}