{"ast":null,"code":"import React__default, { useContext, createElement } from 'react';\nimport { createUseStyles, jss } from 'react-jss';\nimport clsx from 'clsx';\nimport Color from 'color';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar stepStyleDefaults = {\n  activeBgColor: '#ed1d24',\n  activeTextColor: '#ffffff',\n  completedBgColor: '#a10308',\n  completedTextColor: '#ffffff',\n  inactiveBgColor: '#e0e0e0',\n  inactiveTextColor: '#ffffff',\n  size: '2em',\n  circleFontSize: '1rem',\n  borderRadius: '50%'\n};\nvar HOVER_COLOR_DEFAULT_RATIO = 0.15;\nvar ACTIVE_COLOR_DEFAULT_RATIO = 0.2;\n\nvar shadeOrTintColor = function shadeOrTintColor(colorString, ratio) {\n  var color = Color(colorString);\n  return color.isDark() ? color.darken(ratio).hex() : color.lighten(ratio).hex();\n};\n\nvar useStepStyles = /*#__PURE__*/createUseStyles({\n  StepMain: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  StepButton: function StepButton(props) {\n    return {\n      border: 'none',\n      margin: 0,\n      padding: 0,\n      cursor: 'pointer',\n      borderRadius: props.borderRadius,\n      backgroundColor: props.inactiveBgColor,\n      width: props.size,\n      height: props.size,\n      fontSize: '1em',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '&.active': {\n        backgroundColor: props.activeBgColor,\n        '&:hover': {\n          backgroundColor: shadeOrTintColor(props.activeBgColor, HOVER_COLOR_DEFAULT_RATIO)\n        },\n        '&:active': {\n          backgroundColor: shadeOrTintColor(props.activeBgColor, ACTIVE_COLOR_DEFAULT_RATIO)\n        }\n      },\n      '&.completed': {\n        backgroundColor: props.completedBgColor,\n        '&:hover': {\n          backgroundColor: shadeOrTintColor(props.completedBgColor, HOVER_COLOR_DEFAULT_RATIO)\n        },\n        '&:active': {\n          backgroundColor: shadeOrTintColor(props.completedBgColor, ACTIVE_COLOR_DEFAULT_RATIO)\n        }\n      }\n    };\n  },\n  StepButtonContent: function StepButtonContent(props) {\n    return {\n      color: props.inactiveTextColor,\n      fontSize: props.circleFontSize,\n      fontVariantNumeric: 'tabular-nums',\n      '&.active': {\n        color: props.activeTextColor\n      },\n      '&.completed': {\n        color: props.completedTextColor\n      }\n    };\n  }\n});\nvar StepperContext = /*#__PURE__*/React__default.createContext({\n  activeStep: 0,\n  hideConnectors: false,\n  nonLinear: false,\n  connectorStateColors: false\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  StepperContext.displayName = 'StepperContext';\n}\n\nvar connectorStyleDefaults = {\n  disabledColor: '#bdbdbd',\n  activeColor: '#ed1d24',\n  completedColor: '#a10308',\n  size: 1,\n  style: 'solid'\n};\nvar useConnectorStyles = /*#__PURE__*/createUseStyles({\n  ConnectorContainer: function ConnectorContainer(props) {\n    return {\n      top: \"calc((\" + props.stepSize + \" - \" + props.size + \") / 2)\",\n      left: \"calc(-50% + \" + props.stepSize + \" - 8px)\",\n      right: \"calc(50% + \" + props.stepSize + \" - 8px)\",\n      position: 'absolute'\n    };\n  },\n  Connector: function Connector(props) {\n    return {\n      borderTopStyle: props.style,\n      borderTopWidth: props.size,\n      borderColor: props.disabledColor,\n      display: 'block',\n      '&.completed': {\n        borderColor: props.completedColor\n      },\n      '&.active': {\n        borderColor: props.activeColor\n      }\n    };\n  }\n});\n\nvar convertNumericToPixel = function convertNumericToPixel(object, property) {\n  if (typeof object[property] === 'number') {\n    object[property] = object[property] + \"px\";\n  }\n};\n\nvar StepContext = /*#__PURE__*/React__default.createContext({\n  completed: false,\n  active: false,\n  disabled: false,\n  index: 0\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  StepContext.displayName = 'StepContext';\n}\n\nvar Connector = function Connector() {\n  var _React$useContext = React__default.useContext(StepperContext),\n      connectorStateColors = _React$useContext.connectorStateColors,\n      connectorStyleConfig = _React$useContext.connectorStyleConfig;\n\n  var _React$useContext2 = React__default.useContext(StepContext),\n      completed = _React$useContext2.completed,\n      active = _React$useContext2.active,\n      stepSize = _React$useContext2.stepSize;\n\n  var connectorStyle = _extends({}, connectorStyleDefaults, connectorStyleConfig, {\n    stepSize: stepSize\n  });\n\n  convertNumericToPixel(connectorStyle, 'stepSize');\n  convertNumericToPixel(connectorStyle, 'size');\n  var classes = useConnectorStyles(connectorStyle);\n  return React__default.createElement(\"div\", {\n    className: classes.ConnectorContainer\n  }, React__default.createElement(\"span\", {\n    className: clsx(classes.Connector, {\n      completed: completed && connectorStateColors\n    }, {\n      active: active && connectorStateColors\n    })\n  }));\n};\n\nvar _excluded = [\"children\", \"contentClasses\"];\n\nvar StepButton = function StepButton(_ref) {\n  var children = _ref.children,\n      contentClasses = _ref.contentClasses,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var _React$useContext = React__default.useContext(StepContext),\n      completed = _React$useContext.completed,\n      disabled = _React$useContext.disabled,\n      index = _React$useContext.index;\n\n  return React__default.createElement(\"button\", Object.assign({\n    disabled: disabled\n  }, rest), React__default.createElement(\"span\", {\n    className: clsx(contentClasses, {\n      active: !disabled && !completed\n    }, {\n      completed: completed\n    })\n  }, children || index + 1));\n};\n\nvar useStepLabelStyles = /*#__PURE__*/createUseStyles({\n  LabelContainer: function LabelContainer(props) {\n    return {\n      width: '100%',\n      fontSize: props.fontSize || '0.875rem',\n      fontWeight: 400,\n      lineHeight: 1.4\n    };\n  },\n  Label: function Label(props) {\n    return {\n      display: 'block',\n      marginTop: 16,\n      textAlign: 'center',\n      fontWeight: props.fontWeight || 500\n    };\n  }\n});\n\nvar StepLabel = function StepLabel(_ref) {\n  var children = _ref.children,\n      fontSize = _ref.fontSize,\n      fontWeight = _ref.fontWeight;\n  var classes = useStepLabelStyles({\n    fontSize: fontSize,\n    fontWeight: fontWeight\n  });\n  return React__default.createElement(\"div\", {\n    className: classes.LabelContainer\n  }, React__default.createElement(\"span\", {\n    className: classes.Label\n  }, children));\n};\n\nvar _excluded$1 = [\"children\", \"label\", \"styleConfig\", \"completed\", \"active\", \"disabled\", \"className\", \"index\"];\n\nvar Step = function Step(_ref) {\n  var children = _ref.children,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? '' : _ref$label,\n      styleConfig = _ref.styleConfig,\n      completedProp = _ref.completed,\n      activeProp = _ref.active,\n      disabledProp = _ref.disabled,\n      className = _ref.className,\n      _ref$index = _ref.index,\n      index = _ref$index === void 0 ? 0 : _ref$index,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  var _React$useContext = useContext(StepperContext),\n      activeStep = _React$useContext.activeStep,\n      hideConnectors = _React$useContext.hideConnectors,\n      nonLinear = _React$useContext.nonLinear;\n\n  var _activeProp = activeProp,\n      active = _activeProp === void 0 ? false : _activeProp,\n      _completedProp = completedProp,\n      completed = _completedProp === void 0 ? false : _completedProp,\n      _disabledProp = disabledProp,\n      disabled = _disabledProp === void 0 ? false : _disabledProp;\n\n  if (activeStep === index) {\n    active = activeProp !== undefined ? activeProp : true;\n  } else if (!nonLinear && activeStep > index && !activeProp && !disabledProp) {\n    completed = completedProp !== undefined ? completedProp : true;\n  } else if (!nonLinear && activeStep < index && !activeProp && !completedProp) {\n    disabled = disabledProp !== undefined ? disabledProp : true;\n  }\n\n  var stepStyleProps = _extends({}, styleConfig, {\n    completed: completed && !disabled,\n    active: active || !disabled\n  });\n\n  var classes = useStepStyles(_extends({}, stepStyleDefaults, stepStyleProps.size && !stepStyleProps.circleFontSize && {\n    circleFontSize: \"calc(\" + stepStyleProps.size + \" / 2)\"\n  }, stepStyleProps));\n  var contextValue = {\n    completed: completed,\n    active: active,\n    disabled: disabled,\n    index: index,\n    stepSize: styleConfig && styleConfig.size || stepStyleDefaults.size\n  };\n  return createElement(StepContext.Provider, {\n    value: contextValue\n  }, index !== 0 && (hideConnectors === 'inactive' && (active || completed) || hideConnectors !== true && hideConnectors !== 'inactive') && createElement(Connector, null), createElement(\"div\", {\n    className: classes.StepMain\n  }, createElement(StepButton, Object.assign({\n    className: clsx(classes.StepButton, {\n      active: !disabled && !completed\n    }, {\n      completed: completed\n    }, className),\n    contentClasses: classes.StepButtonContent\n  }, rest), children || index + 1), label && createElement(StepLabel, {\n    fontSize: styleConfig == null ? void 0 : styleConfig.labelFontSize,\n    fontWeight: styleConfig == null ? void 0 : styleConfig.fontWeight\n  }, label)));\n};\n\nvar useStepperStyles = /*#__PURE__*/createUseStyles({\n  StepperContainer: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    padding: 24,\n    fontFamily: 'Arial, Helvetica, sans-serif'\n  },\n  StepContainer: {\n    flex: 1,\n    position: 'relative',\n    paddingLeft: 8,\n    paddingRight: 8\n  }\n});\nvar _excluded$2 = [\"steps\", \"children\", \"connectorStateColors\", \"className\", \"stepClassName\", \"activeStep\", \"styleConfig\", \"connectorStyleConfig\", \"hideConnectors\", \"nonLinear\"];\n\nvar generateId = function generateId(rule) {\n  return \"RFS-\" + rule.key;\n};\n\nvar createGenerateId = function createGenerateId() {\n  return generateId;\n};\n\njss.setup({\n  createGenerateId: createGenerateId\n});\n\nvar Stepper = function Stepper(_ref) {\n  var steps = _ref.steps,\n      children = _ref.children,\n      _ref$connectorStateCo = _ref.connectorStateColors,\n      connectorStateColors = _ref$connectorStateCo === void 0 ? false : _ref$connectorStateCo,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$stepClassName = _ref.stepClassName,\n      stepClassName = _ref$stepClassName === void 0 ? '' : _ref$stepClassName,\n      _ref$activeStep = _ref.activeStep,\n      activeStep = _ref$activeStep === void 0 ? 0 : _ref$activeStep,\n      styleConfig = _ref.styleConfig,\n      connectorStyleConfig = _ref.connectorStyleConfig,\n      _ref$hideConnectors = _ref.hideConnectors,\n      hideConnectors = _ref$hideConnectors === void 0 ? false : _ref$hideConnectors,\n      _ref$nonLinear = _ref.nonLinear,\n      nonLinear = _ref$nonLinear === void 0 ? false : _ref$nonLinear,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n  var classes = useStepperStyles();\n  var contextValue = React__default.useMemo(function () {\n    return {\n      activeStep: activeStep,\n      hideConnectors: hideConnectors,\n      nonLinear: nonLinear,\n      connectorStateColors: connectorStateColors && !nonLinear,\n      connectorStyleConfig: connectorStyleConfig\n    };\n  }, [activeStep, hideConnectors, nonLinear, connectorStateColors, connectorStyleConfig]);\n  var useStepsProp = steps instanceof Array && steps.length > 0;\n  var stepsArray = useStepsProp ? steps : React__default.Children.toArray(children);\n  var stepsToRender = stepsArray.map(function (step, index) {\n    if (!useStepsProp && !React__default.isValidElement(step)) return null;\n    var stepProps = {\n      className: stepClassName,\n      styleConfig: styleConfig,\n      index: index\n    };\n    return React__default.createElement(\"div\", {\n      key: index,\n      className: classes.StepContainer\n    }, React__default.isValidElement(step) ? React__default.cloneElement(step, _extends({}, stepProps, step.props)) : React__default.createElement(Step, Object.assign({}, stepProps, step)));\n  });\n  return React__default.createElement(StepperContext.Provider, {\n    value: contextValue\n  }, React__default.createElement(\"div\", Object.assign({\n    className: clsx(classes.StepperContainer, className)\n  }, rest), stepsToRender));\n};\n\nexport { Step, Stepper };","map":{"version":3,"sources":["../src/components/Step/StepStyles.ts","../src/components/Stepper/StepperContext.ts","../src/components/Connector/ConnectorStyles.ts","../src/utils.ts","../src/components/Step/StepContext.ts","../src/components/Connector/Connector.tsx","../src/components/StepButton/StepButton.tsx","../src/components/StepLabel/StepLabelStyles.ts","../src/components/StepLabel/StepLabel.tsx","../src/components/Step/Step.tsx","../src/components/Stepper/StepperStyles.ts","../src/components/Stepper/Stepper.tsx"],"names":["stepStyleDefaults","activeBgColor","activeTextColor","completedBgColor","completedTextColor","inactiveBgColor","inactiveTextColor","size","circleFontSize","borderRadius","HOVER_COLOR_DEFAULT_RATIO","ACTIVE_COLOR_DEFAULT_RATIO","shadeOrTintColor","color","Color","useStepStyles","createUseStyles","StepMain","display","flexDirection","alignItems","StepButton","border","margin","padding","cursor","props","backgroundColor","width","height","fontSize","justifyContent","StepButtonContent","fontVariantNumeric","StepperContext","activeStep","hideConnectors","nonLinear","connectorStateColors","process","connectorStyleDefaults","disabledColor","activeColor","completedColor","style","useConnectorStyles","ConnectorContainer","top","left","right","position","Connector","borderTopStyle","borderTopWidth","borderColor","convertNumericToPixel","object","StepContext","completed","active","disabled","index","connectorStyleConfig","React","stepSize","connectorStyle","classes","className","clsx","children","contentClasses","rest","useStepLabelStyles","LabelContainer","fontWeight","lineHeight","Label","marginTop","textAlign","StepLabel","Step","label","styleConfig","completedProp","activeProp","disabledProp","stepStyleProps","contextValue","value","labelFontSize","useStepperStyles","StepperContainer","fontFamily","StepContainer","flex","paddingLeft","paddingRight","generateId","rule","createGenerateId","jss","Stepper","steps","stepClassName","useStepsProp","stepsArray","stepsToRender","stepProps","key","step"],"mappings":"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","sourcesContent":["import { createUseStyles } from 'react-jss';\nimport { StepStyleProps } from './StepTypes';\nimport Color from 'color';\n\nexport const stepStyleDefaults = {\n  activeBgColor: '#ed1d24',\n  activeTextColor: '#ffffff',\n  completedBgColor: '#a10308',\n  completedTextColor: '#ffffff',\n  inactiveBgColor: '#e0e0e0',\n  inactiveTextColor: '#ffffff',\n  size: '2em',\n  circleFontSize: '1rem',\n  borderRadius: '50%',\n};\n\nconst HOVER_COLOR_DEFAULT_RATIO = 0.15;\nconst ACTIVE_COLOR_DEFAULT_RATIO = 0.2;\n\nconst shadeOrTintColor = (colorString: string, ratio: number) => {\n  const color = Color(colorString);\n  return color.isDark()\n    ? color.darken(ratio).hex()\n    : color.lighten(ratio).hex();\n};\n\nexport const useStepStyles = createUseStyles({\n  StepMain: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  StepButton: (props: StepStyleProps) => ({\n    border: 'none',\n    margin: 0,\n    padding: 0,\n    cursor: 'pointer',\n    borderRadius: props.borderRadius,\n    backgroundColor: props.inactiveBgColor,\n    width: props.size,\n    height: props.size,\n    fontSize: '1em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&.active': {\n      backgroundColor: props.activeBgColor,\n      '&:hover': {\n        backgroundColor: shadeOrTintColor(\n          props.activeBgColor,\n          HOVER_COLOR_DEFAULT_RATIO\n        ),\n      },\n      '&:active': {\n        backgroundColor: shadeOrTintColor(\n          props.activeBgColor,\n          ACTIVE_COLOR_DEFAULT_RATIO\n        ),\n      },\n    },\n    '&.completed': {\n      backgroundColor: props.completedBgColor,\n      '&:hover': {\n        backgroundColor: shadeOrTintColor(\n          props.completedBgColor,\n          HOVER_COLOR_DEFAULT_RATIO\n        ),\n      },\n      '&:active': {\n        backgroundColor: shadeOrTintColor(\n          props.completedBgColor,\n          ACTIVE_COLOR_DEFAULT_RATIO\n        ),\n      },\n    },\n  }),\n  StepButtonContent: (props: StepStyleProps) => ({\n    color: props.inactiveTextColor,\n    fontSize: props.circleFontSize,\n    fontVariantNumeric: 'tabular-nums',\n    '&.active': {\n      color: props.activeTextColor,\n    },\n    '&.completed': {\n      color: props.completedTextColor,\n    },\n  }),\n});\n","import React from 'react';\nimport { ConnectorStyleProps } from '../Connector/ConnectorTypes';\n\ninterface IStepperContext {\n  activeStep: number;\n  hideConnectors: boolean | 'inactive';\n  nonLinear: boolean;\n  connectorStateColors: boolean;\n  connectorStyleConfig?: ConnectorStyleProps;\n}\n\nconst StepperContext = React.createContext<IStepperContext>({\n  activeStep: 0,\n  hideConnectors: false,\n  nonLinear: false,\n  connectorStateColors: false,\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  StepperContext.displayName = 'StepperContext';\n}\n\nexport default StepperContext;\n","import { createUseStyles } from 'react-jss';\nimport { ConnectorStyleProps } from './ConnectorTypes';\n\nexport const connectorStyleDefaults: ConnectorStyleProps = {\n  disabledColor: '#bdbdbd',\n  activeColor: '#ed1d24',\n  completedColor: '#a10308',\n  size: 1,\n  style: 'solid',\n};\n\nexport const useConnectorStyles = createUseStyles({\n  ConnectorContainer: (props: ConnectorStyleProps) => ({\n    top: `calc((${props.stepSize} - ${props.size}) / 2)`,\n    left: `calc(-50% + ${props.stepSize} - 8px)`,\n    right: `calc(50% + ${props.stepSize} - 8px)`,\n    position: 'absolute',\n  }),\n  Connector: (props: ConnectorStyleProps) => ({\n    borderTopStyle: props.style,\n    borderTopWidth: props.size,\n    borderColor: props.disabledColor,\n    display: 'block',\n    '&.completed': {\n      borderColor: props.completedColor,\n    },\n    '&.active': {\n      borderColor: props.activeColor,\n    },\n  }),\n});\n","interface IObject {\n  [key: string]: any;\n}\n\nexport const convertNumericToPixel = (object: IObject, property: string) => {\n  if (typeof object[property] === 'number') {\n    object[property] = `${object[property]}px`;\n  }\n};\n","import React from 'react';\n\ninterface IStepContext {\n  completed: boolean;\n  active: boolean;\n  disabled: boolean;\n  index: number;\n  stepSize?: React.ReactText;\n}\n\nconst StepContext = React.createContext<IStepContext>({\n  completed: false,\n  active: false,\n  disabled: false,\n  index: 0,\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  StepContext.displayName = 'StepContext';\n}\n\nexport default StepContext;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport { connectorStyleDefaults, useConnectorStyles } from './ConnectorStyles';\nimport { ConnectorStyleProps } from './ConnectorTypes';\nimport { convertNumericToPixel } from '../../utils';\nimport StepContext from '../Step/StepContext';\nimport StepperContext from '../Stepper/StepperContext';\n\nconst Connector: React.FC = () => {\n  const { connectorStateColors, connectorStyleConfig } = React.useContext(\n    StepperContext\n  );\n  const { completed, active, stepSize } = React.useContext(StepContext);\n\n  const connectorStyle: ConnectorStyleProps = {\n    ...connectorStyleDefaults,\n    ...connectorStyleConfig,\n    stepSize,\n  };\n\n  convertNumericToPixel(connectorStyle, 'stepSize');\n  convertNumericToPixel(connectorStyle, 'size');\n\n  const classes = useConnectorStyles(connectorStyle);\n  return (\n    <div className={classes.ConnectorContainer}>\n      <span\n        className={clsx(\n          classes.Connector,\n          { completed: completed && connectorStateColors },\n          { active: active && connectorStateColors }\n        )}\n      ></span>\n    </div>\n  );\n};\n\nexport default Connector;\n","import React from 'react';\nimport clsx from 'clsx';\nimport StepContext from '../Step/StepContext';\nimport { StepButtonProps } from './StepButtonProps';\n\nconst StepButton: React.FC<StepButtonProps> = ({\n  children,\n  contentClasses,\n  ...rest\n}) => {\n  const { completed, disabled, index } = React.useContext(StepContext);\n\n  return (\n    <button disabled={disabled} {...rest}>\n      <span\n        className={clsx(\n          contentClasses,\n          { active: !disabled && !completed },\n          { completed }\n        )}\n      >\n        {children || index + 1}\n      </span>\n    </button>\n  );\n};\n\nexport default StepButton;\n","import { createUseStyles } from 'react-jss';\nimport { StepLabelStyleProps } from './StepLabelTypes';\n\nexport const useStepLabelStyles = createUseStyles({\n  LabelContainer: (props: StepLabelStyleProps) => ({\n    width: '100%',\n    fontSize: props.fontSize || '0.875rem',\n    fontWeight: 400,\n    lineHeight: 1.4,\n  }),\n  Label: (props: StepLabelStyleProps) => ({\n    display: 'block',\n    marginTop: 16,\n    textAlign: 'center',\n    fontWeight: props.fontWeight || 500,\n  }),\n});\n","import React from 'react';\nimport { useStepLabelStyles } from './StepLabelStyles';\nimport { StepLabelProps } from './StepLabelTypes';\n\nconst StepLabel: React.FC<StepLabelProps> = ({\n  children,\n  fontSize,\n  fontWeight,\n}) => {\n  const classes = useStepLabelStyles({ fontSize, fontWeight });\n\n  return (\n    <div className={classes.LabelContainer}>\n      <span className={classes.Label}>{children}</span>\n    </div>\n  );\n};\n\nexport default StepLabel;\n","import * as React from 'react';\nimport clsx from 'clsx';\n\nimport { useStepStyles, stepStyleDefaults } from './StepStyles';\nimport StepperContext from '../Stepper/StepperContext';\nimport Connector from '../Connector';\nimport { StepProps, StepStyleProps } from './StepTypes';\nimport StepContext from './StepContext';\nimport StepButton from '../StepButton';\nimport StepLabel from '../StepLabel';\n\nconst Step: React.FC<StepProps> = ({\n  children,\n  label = '',\n  styleConfig,\n  completed: completedProp,\n  active: activeProp,\n  disabled: disabledProp,\n  className,\n  index = 0,\n  ...rest\n}) => {\n  const { activeStep, hideConnectors, nonLinear } = React.useContext(\n    StepperContext\n  );\n\n  let [active = false, completed = false, disabled = false] = [\n    activeProp,\n    completedProp,\n    disabledProp,\n  ];\n\n  if (activeStep === index) {\n    active = activeProp !== undefined ? activeProp : true;\n  } else if (!nonLinear && activeStep > index && !activeProp && !disabledProp) {\n    completed = completedProp !== undefined ? completedProp : true;\n  } else if (\n    !nonLinear &&\n    activeStep < index &&\n    !activeProp &&\n    !completedProp\n  ) {\n    disabled = disabledProp !== undefined ? disabledProp : true;\n  }\n\n  const stepStyleProps: StepStyleProps = {\n    ...styleConfig!,\n    completed: completed && !disabled,\n    active: active || !disabled,\n  };\n  const classes = useStepStyles({\n    ...stepStyleDefaults,\n    ...(stepStyleProps.size &&\n      !stepStyleProps.circleFontSize && {\n        circleFontSize: `calc(${stepStyleProps.size} / 2)`,\n      }),\n    ...stepStyleProps,\n  });\n\n  const contextValue = {\n    completed,\n    active,\n    disabled,\n    index,\n    stepSize: (styleConfig && styleConfig.size) || stepStyleDefaults.size,\n  };\n\n  return (\n    <StepContext.Provider value={contextValue}>\n      {index !== 0 &&\n        // If hideConnectors === 'inactive' render only active or completed connectors\n        // If hideConnectors is something other than 'inactive' or true render all connectors\n        ((hideConnectors === 'inactive' && (active || completed)) ||\n          (hideConnectors !== true && hideConnectors !== 'inactive')) && (\n          <Connector />\n        )}\n      <div className={classes.StepMain}>\n        <StepButton\n          className={clsx(\n            classes.StepButton,\n            { active: !disabled && !completed },\n            { completed },\n            className\n          )}\n          contentClasses={classes.StepButtonContent}\n          {...rest}\n        >\n          {children || index + 1}\n        </StepButton>\n        {label && (\n          <StepLabel\n            fontSize={styleConfig?.labelFontSize}\n            fontWeight={styleConfig?.fontWeight}\n          >\n            {label}\n          </StepLabel>\n        )}\n      </div>\n    </StepContext.Provider>\n  );\n};\n\nexport default Step;\n","import { createUseStyles } from 'react-jss';\n\nexport const useStepperStyles = createUseStyles({\n  StepperContainer: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    padding: 24,\n    fontFamily: 'Arial, Helvetica, sans-serif',\n  },\n  StepContainer: {\n    flex: 1,\n    position: 'relative',\n    paddingLeft: 8,\n    paddingRight: 8,\n  },\n});\n","import React from 'react';\nimport { jss } from 'react-jss';\nimport clsx from 'clsx';\nimport { GenerateId, CreateGenerateId } from 'jss';\n\nimport Step from '../Step/Step';\nimport { StepperProps } from './StepperTypes';\nimport { useStepperStyles } from './StepperStyles';\nimport StepperContext from './StepperContext';\n\nconst generateId: GenerateId = rule => `RFS-${rule.key}`;\n\nconst createGenerateId: CreateGenerateId = () => {\n  return generateId;\n};\n\njss.setup({ createGenerateId });\n\nconst Stepper: React.FC<StepperProps> = ({\n  steps,\n  children,\n  connectorStateColors = false,\n  className = '',\n  stepClassName = '',\n  activeStep = 0,\n  styleConfig,\n  connectorStyleConfig,\n  hideConnectors = false,\n  nonLinear = false,\n  ...rest\n}) => {\n  const classes = useStepperStyles();\n\n  const contextValue = React.useMemo(\n    () => ({\n      activeStep,\n      hideConnectors,\n      nonLinear,\n      connectorStateColors: connectorStateColors && !nonLinear,\n      connectorStyleConfig,\n    }),\n    [\n      activeStep,\n      hideConnectors,\n      nonLinear,\n      connectorStateColors,\n      connectorStyleConfig,\n    ]\n  );\n\n  const useStepsProp = steps instanceof Array && steps.length > 0;\n  const stepsArray = useStepsProp ? steps : React.Children.toArray(children);\n\n  const stepsToRender = stepsArray!.map((step, index) => {\n    if (!useStepsProp && !React.isValidElement(step)) return null;\n\n    const stepProps = {\n      className: stepClassName,\n      styleConfig,\n      index,\n    };\n\n    return (\n      <div key={index} className={classes.StepContainer}>\n        {React.isValidElement(step) ? (\n          React.cloneElement(step, {\n            ...stepProps,\n            ...step.props,\n          })\n        ) : (\n          <Step {...stepProps} {...step} />\n        )}\n      </div>\n    );\n  });\n\n  return (\n    <StepperContext.Provider value={contextValue}>\n      <div className={clsx(classes.StepperContainer, className)} {...rest}>\n        {stepsToRender}\n      </div>\n    </StepperContext.Provider>\n  );\n};\n\nexport default Stepper;\n"]},"metadata":{},"sourceType":"module"}