{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadi\\\\OneDrive\\\\Documents\\\\GitHub\\\\ADES\\\\frontEnd\\\\src\\\\components\\\\EditBadge.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport { Row, Col } from 'react-bootstrap';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport '../css/badgemazeEdit.css';\nimport { Modal } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EditBadge extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showModal: false,\n      data: [],\n      name: '',\n      requirements: '',\n      pic_url: '',\n      badgeClassID: ''\n    };\n\n    this.handleName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleRequirement = event => {\n      this.setState({\n        requirements: event.target.value\n      });\n    };\n\n    this.handleURL = event => {\n      this.setState({\n        pic_url: event.target.files[0]\n      });\n    };\n\n    this.handleBadgeClassID = event => {\n      this.setState({\n        badgeClassID: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // file upload\n\n      const storage = getStorage();\n      const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\n      var file = this.state.pic_url; // Create file metadata including the content type\n\n      /** @type {any} */\n\n      const metadata = {\n        contentType: this.state.pic_url.type\n      };\n      uploadBytes(storageRef, file, metadata);\n      getDownloadURL(storageRef).then(downloadURL => {\n        console.log('File available at', downloadURL);\n        var bcID = document.getElementById(\"dropDown\");\n        var bID = bcID.value;\n        var badgeClassID = parseInt(bID);\n        const badge = {\n          name: this.state.name,\n          requirements: this.state.requirements,\n          pic_url: downloadURL,\n          badgeClassID: badgeClassID\n        };\n        console.log(\"BADGEEEE\" + JSON.stringify(badge));\n        const config = {\n          headers: {\n            'content-type': 'application/json'\n          }\n        };\n        const badgeID = parseInt(this.props.badgeID);\n        const baseUrl = \"http://localhost:8081\";\n        console.log(badgeID);\n        axios.put(`${baseUrl}/editBadge/${badgeID}`, badge, config).then(res => {\n          console.log(res);\n          console.log(res.data);\n          window.location.replace('http://localhost:3000/badgesAdmin');\n        });\n      });\n    };\n\n    this.handleClose = () => {\n      this.props.onPopupClose(false, this.props.rewardID, '', '', '');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bodyEdit\",\n      children: /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          show: this.props.showModalPopup,\n          onHide: this.handleClose,\n          size: \"lg\",\n          \"aria-labelledby\": \"contained-modal-title-vcenter\",\n          centered: true,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Edit Ba\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editReward\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: this.handleSubmit,\n                className: \"rewardForm\",\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xs: 12,\n                    md: 8,\n                    lg: 4,\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      value: \"{this.props.name}\",\n                      onChange: this.handleName,\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: 12,\n                    md: 5,\n                    lg: 3,\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"number\",\n                      value: this.props.requirements,\n                      onChange: this.handleRequirement,\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: 12,\n                    md: 5,\n                    lg: 3,\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"file\",\n                      onChange: this.handleURL\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xs: 12,\n                    md: 2,\n                    lg: 2,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"primary\",\n                      type: \"submit\",\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"badgeClassID\",\n                    onChange: this.handleBadgeClassID,\n                    id: \"dropDown\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"1\",\n                      children: \"Air\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"2\",\n                      children: \"Water\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"3\",\n                      children: \"Fire\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"4\",\n                      children: \"Geo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/src/components/EditBadge.js"],"names":["React","Component","Fragment","axios","Form","Row","Col","getStorage","ref","uploadBytes","getDownloadURL","Modal","Button","EditBadge","state","showModal","data","name","requirements","pic_url","badgeClassID","handleName","event","setState","target","value","handleRequirement","handleURL","files","handleBadgeClassID","handleSubmit","preventDefault","storage","storageRef","file","metadata","contentType","type","then","downloadURL","console","log","bcID","document","getElementById","bID","parseInt","badge","JSON","stringify","config","headers","badgeID","props","baseUrl","put","res","window","location","replace","handleClose","onPopupClose","rewardID","render","showModalPopup"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport '../css/badgemazeEdit.css';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nexport default class EditBadge extends React.Component {\r\n\r\n    state = {\r\n        showModal: false,\r\n        data: [],\r\n        name: '',\r\n        requirements: '',\r\n        pic_url: '',\r\n        badgeClassID: ''\r\n    }\r\n\r\n\r\n\r\n    handleName = event => {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    handleRequirement = event => {\r\n        this.setState({ requirements: event.target.value });\r\n    }\r\n\r\n    handleURL = event => {\r\n        this.setState({ pic_url: event.target.files[0], });\r\n    }\r\n\r\n    handleBadgeClassID = event => {\r\n        this.setState({ badgeClassID: event.target.value });\r\n    }\r\n\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        // file upload\r\n        const storage = getStorage();\r\n        const storageRef = ref(storage, 'img/' + this.state.pic_url.name);\r\n        var file = this.state.pic_url;\r\n        // Create file metadata including the content type\r\n        /** @type {any} */\r\n        const metadata = {\r\n            contentType: this.state.pic_url.type,\r\n        };\r\n        \r\n        uploadBytes(storageRef, file, metadata);\r\n\r\n        getDownloadURL(storageRef).then((downloadURL) => {\r\n            console.log('File available at', downloadURL);\r\n\r\n            var bcID = document.getElementById(\"dropDown\");\r\n            var bID = bcID.value;\r\n            var badgeClassID = parseInt(bID);\r\n\r\n            const badge = {\r\n                name: this.state.name,\r\n                requirements: this.state.requirements,\r\n                pic_url: downloadURL,\r\n                badgeClassID: badgeClassID\r\n            };\r\n\r\n            console.log(\"BADGEEEE\" + JSON.stringify(badge))\r\n\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                }\r\n            }\r\n\r\n            const badgeID = parseInt(this.props.badgeID);\r\n            const baseUrl = \"http://localhost:8081\";\r\n            console.log(badgeID);\r\n\r\n            axios.put(`${baseUrl}/editBadge/${badgeID}`, badge, config)\r\n                .then(res => {\r\n                    console.log(res);\r\n                    console.log(res.data);\r\n                    window.location.replace('http://localhost:3000/badgesAdmin')\r\n                })\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.onPopupClose(false, this.props.rewardID, '', '', '');\r\n      }\r\n    render() {\r\n        return (\r\n\r\n\r\n            \r\n            <div id=\"bodyEdit\">\r\n                \r\n                <Fragment>\r\n        <Modal show={this.props.showModalPopup} onHide={this.handleClose}\r\n          size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Edit Ba\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"editReward\">\r\n              <Form onSubmit={this.handleSubmit} className=\"rewardForm\">\r\n                <Row>\r\n                  <Col xs={12} md={8} lg={4}>\r\n                    <Form.Control value=\"{this.props.name}\" onChange={this.handleName}  required />\r\n                  </Col>\r\n                  <Col xs={12} md={5} lg={3}>\r\n                    <Form.Control type=\"number\" value={this.props.requirements} onChange={this.handleRequirement}  required />\r\n                  </Col>\r\n                  <Col xs={12} md={5} lg={3}>\r\n                    <Form.Control type=\"file\" onChange={this.handleURL} />\r\n                  </Col>\r\n                  <Col xs={12} md={2} lg={2}>\r\n                    <Button variant=\"primary\" type=\"submit\">Edit</Button>\r\n                  </Col>\r\n                  <select name=\"badgeClassID\" onChange={this.handleBadgeClassID} id=\"dropDown\">\r\n                                    <option value=\"1\">Air</option>\r\n                                    <option value=\"2\">Water</option>\r\n                                    <option value=\"3\">Fire</option>\r\n                                    <option value=\"4\">Geo</option>\r\n                                </select>\r\n                </Row>\r\n              </Form>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </Fragment>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}