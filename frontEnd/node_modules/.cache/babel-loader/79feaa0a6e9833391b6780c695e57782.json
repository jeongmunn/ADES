{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadi\\\\OneDrive\\\\Documents\\\\GitHub\\\\ADES\\\\frontEnd\\\\src\\\\components\\\\Quiz.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport '../css/pop-up.css';\nimport $ from 'jquery';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BadgeAdmin extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: []\n    };\n\n    this.handleButton = event => {\n      event.preventDefault();\n      console.log(\"BUTTON CLICKED\"); // Get the modal\n\n      var modal = document.getElementById(\"myModal\");\n      const quizID = event.target.getAttribute(\"data-index\");\n      const totalMarks = event.target.getAttribute(\"data-mark\");\n      const totalPoints = event.target.getAttribute(\"data-points\");\n      console.log(quizID);\n      console.log(totalMarks);\n      console.log(totalPoints);\n      const quiz = {\n        quizID: quizID,\n        studentID: '2',\n        pointsEarned: totalPoints,\n        marksEarned: totalMarks\n      };\n      const config = {\n        headers: {\n          'content-type': 'application/json'\n        }\n      };\n      axios.post('http://localhost:8081/newBadge', quiz, config).then(res => {\n        console.log(res);\n        console.log(res.data);\n\n        if (error) {} // window.location.reload();\n\n      }); // Get the <span> element that closes the modal\n\n      var span = document.getElementsByClassName(\"close\")[0]; // When the user clicks the button, open the modal \n\n      modal.style.display = \"block\"; // When the user clicks on <span> (x), close the modal\n\n      span.onclick = function () {\n        modal.style.display = \"none\";\n      };\n\n      if (event.target === modal) {\n        modal.style.display = \"none\";\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:8081/quiz`).then(res => {\n      console.log(res.data.length);\n      this.setState({\n        data: res.data\n      }); // console.log(res.data[0])\n      // for (var i = 0; i < res.data.length; i++) {\n      //   var quiz = res.data[i];\n      //   console.log(\"quizid:\" + quiz.quizID);\n      //   console.log(\"total Marks:\" + quiz.totalMarks);\n      //   console.log(\"toalPoints:\" + quiz.totalPoints);\n      //   //cpmplie the data that the card needs for its creation\n      //   var cardInfo = {\n      //     \"quizID\": quiz.quizID,\n      //     \"totalMarks\": quiz.totalMarks,\n      //     \"totalPoints\": quiz.totalPoints,\n      //     \"event\":this.handleButton\n      //   }\n      //   console.log(\" -----------Card Info data pack-----------\");\n      //   console.log(cardInfo);\n      //   var newCard = createCard(cardInfo);\n      //   $('#users').append(newCard);\n      // }\n\n      console.log(res.data.length);\n      this.setState({\n        data: res.data\n      });\n    });\n\n    function createCard(cardInfo) {\n      console.log(cardInfo);\n      var card = `\n        <div class=\"card\" style=\" width:60% ;margin-right:10px;\">\n        <div class=\"card-body\">\n           \n           \n        </div> <p class=\"card-text\" style=\" font-size:20px;margin-left:20px\">Quiz ${cardInfo.quizID}</p>\n        <div style=\"margin-left:20px \"> \n        <div >\n            Total Marks:${cardInfo.totalMarks}\n        </div>\n        <div >\n            Total Points:${cardInfo.totalPoints}\n        </div>\n        <button onClick=${cardInfo.event}  type=\"submit\" id=\"myBtn\">Open Modal</button>\n        \n          </div>\n\n        \n         </div>\n            `;\n      return card;\n    }\n  }\n\n  //NEED TO GET STUDENT ID!\n  render() {\n    const data = this.state.data; // When the user clicks anywhere outside of the modal, close it\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"users\",\n        class: \"row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"myModal\",\n          class: \"modal\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"close\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"QUIZ completed!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table\",\n        children: data && data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: \"tableRow\",\n          class: \"spaceUnder\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.quizID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.totalMarks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.totalPoints\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleButton,\n              \"data-index\": item.quizID,\n              \"data-mark\": item.totalMarks,\n              \"data-points\": item.totalPoints,\n              type: \"submit\",\n              id: \"myBtn\",\n              children: \"Open Modal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this)]\n        }, item.quizID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/src/components/Quiz.js"],"names":["React","axios","Link","$","Button","BadgeAdmin","Component","state","data","handleButton","event","preventDefault","console","log","modal","document","getElementById","quizID","target","getAttribute","totalMarks","totalPoints","quiz","studentID","pointsEarned","marksEarned","config","headers","post","then","res","error","span","getElementsByClassName","style","display","onclick","componentDidMount","get","length","setState","createCard","cardInfo","card","render","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link, } from 'react-router-dom';\r\nimport '../css/pop-up.css';\r\nimport $ from 'jquery';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class BadgeAdmin extends React.Component {\r\n  state = {\r\n    data: [],\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    axios.get(`http://localhost:8081/quiz`)\r\n      .then(res => {\r\n        console.log(res.data.length);\r\n        this.setState({ data: res.data });\r\n        // console.log(res.data[0])\r\n        // for (var i = 0; i < res.data.length; i++) {\r\n        //   var quiz = res.data[i];\r\n        //   console.log(\"quizid:\" + quiz.quizID);\r\n        //   console.log(\"total Marks:\" + quiz.totalMarks);\r\n        //   console.log(\"toalPoints:\" + quiz.totalPoints);\r\n\r\n        //   //cpmplie the data that the card needs for its creation\r\n        //   var cardInfo = {\r\n        //     \"quizID\": quiz.quizID,\r\n        //     \"totalMarks\": quiz.totalMarks,\r\n        //     \"totalPoints\": quiz.totalPoints,\r\n        //     \"event\":this.handleButton\r\n\r\n        //   }\r\n        //   console.log(\" -----------Card Info data pack-----------\");\r\n        //   console.log(cardInfo);\r\n\r\n\r\n\r\n        //   var newCard = createCard(cardInfo);\r\n        //   $('#users').append(newCard);\r\n\r\n        // }\r\n        console.log(res.data.length);\r\n\r\n        this.setState({ data: res.data });\r\n\r\n\r\n      });\r\n\r\n\r\n    function createCard(cardInfo) {\r\n\r\n      console.log(cardInfo)\r\n      var card = `\r\n        <div class=\"card\" style=\" width:60% ;margin-right:10px;\">\r\n        <div class=\"card-body\">\r\n           \r\n           \r\n        </div> <p class=\"card-text\" style=\" font-size:20px;margin-left:20px\">Quiz ${cardInfo.quizID}</p>\r\n        <div style=\"margin-left:20px \"> \r\n        <div >\r\n            Total Marks:${cardInfo.totalMarks}\r\n        </div>\r\n        <div >\r\n            Total Points:${cardInfo.totalPoints}\r\n        </div>\r\n        <button onClick=${cardInfo.event}  type=\"submit\" id=\"myBtn\">Open Modal</button>\r\n        \r\n          </div>\r\n\r\n        \r\n         </div>\r\n            `;\r\n\r\n      return card;\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n  handleButton = event => {\r\n    event.preventDefault();\r\n    console.log(\"BUTTON CLICKED\");\r\n    // Get the modal\r\n    var modal = document.getElementById(\"myModal\");\r\n    const quizID = event.target.getAttribute(\"data-index\");\r\n    const totalMarks = event.target.getAttribute(\"data-mark\");\r\n    const totalPoints = event.target.getAttribute(\"data-points\");\r\n    console.log(quizID);\r\n    console.log(totalMarks);\r\n    console.log(totalPoints);\r\n  \r\n    const quiz = {\r\n      quizID : quizID ,\r\n        studentID: '2' ,\r\n        pointsEarned :totalPoints,\r\n        marksEarned: totalMarks\r\n    };\r\n\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }\r\n    axios.post('http://localhost:8081/newBadge', quiz, config)\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        if(error){\r\n\r\n        }\r\n        // window.location.reload();\r\n      })\r\n\r\n    // Get the <span> element that closes the modal\r\n    var span = document.getElementsByClassName(\"close\")[0];\r\n\r\n    // When the user clicks the button, open the modal \r\n   \r\n      modal.style.display = \"block\";\r\n    \r\n\r\n    // When the user clicks on <span> (x), close the modal\r\n    span.onclick = function () {\r\n      modal.style.display = \"none\";\r\n    }\r\n    if (event.target === modal) {\r\n      modal.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  //NEED TO GET STUDENT ID!\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const data = this.state.data;\r\n\r\n\r\n    // When the user clicks anywhere outside of the modal, close it\r\n\r\n    return (\r\n\r\n      <div>\r\n        <div id=\"users\" class=\"row\">\r\n\r\n\r\n        </div>\r\n        <div>\r\n\r\n\r\n          {/* <button onClick={this.handleButton}  type=\"submit\" id=\"myBtn\">Open Modal</button>\r\n */}\r\n\r\n          <div id=\"myModal\" class=\"modal\">\r\n\r\n\r\n            <div class=\"modal-content\">\r\n              <span class=\"close\">&times;</span>\r\n              <p>QUIZ completed!</p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <table class=\"table\">\r\n                \r\n                {data && data.map(item =>\r\n                  <tr key={item.quizID} id='tableRow' class=\"spaceUnder\">\r\n                    <td>{item.quizID}</td>\r\n                    <td>{item.totalMarks}</td>\r\n                    <td>{item.totalPoints}</td>\r\n                  \r\n                    <td>\r\n                    <button onClick={this.handleButton}  data-index={item.quizID} data-mark={item.totalMarks} data-points={item.totalPoints} type=\"submit\" id=\"myBtn\">Open Modal</button>\r\n                    \r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </table>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}