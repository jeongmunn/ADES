{"ast":null,"code":"import React__default, { useState, createElement, useImperativeHandle, Fragment } from 'react';\nimport usePortal from 'react-useportal';\nimport { useLockBodyScroll } from 'react-use';\nimport styled from 'styled-components';\n\nvar useModal = function useModal(initialStatus) {\n  if (initialStatus === void 0) {\n    initialStatus = false;\n  }\n\n  var _useState = useState(initialStatus),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  return {\n    modalStatus: status,\n    closeModal: function closeModal() {\n      return setStatus(false);\n    },\n    openModal: function openModal() {\n      return setStatus(true);\n    }\n  };\n};\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\nvar _circle;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction SvgCircle(props) {\n  return /*#__PURE__*/createElement(\"svg\", _extends({\n    className: \"circle_svg__hamburger-toggle__circle\",\n    viewBox: \"0 0 32 32\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props), _circle || (_circle = /*#__PURE__*/createElement(\"circle\", {\n    cx: 16,\n    cy: 16,\n    r: 16\n  })));\n}\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\nvar Content = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  box-sizing: border-box;\\n  display: flex;\\n  flex-direction: column;\\n  height: 100vh;\\n  left: 0;\\n  max-height: 100vh;\\n  max-width: 100vw;\\n  opacity: \", \";\\n  overflow: auto;\\n  padding: 50px 10px;\\n  pointer-events: \", \";\\n  position: fixed;\\n  top: 0;\\n  transform: \", \";\\n  transition: opacity 0.5s, transform 0.3s;\\n  width: 100%;\\n  z-index: 1000;\\n\"])), function (_ref) {\n  var status = _ref.status;\n  return status ? 1 : 0;\n}, function (_ref2) {\n  var status = _ref2.status;\n  return status ? 'auto' : 'none';\n}, function (_ref3) {\n  var status = _ref3.status;\n  return status ? 'none' : 'translateY(20px)';\n});\nvar IconWrapper = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  height: 100vh;\\n  left: 0;\\n  max-height: 100vh;\\n  max-width: 100vw;\\n  overflow: hidden;\\n  position: fixed;\\n  top: 0;\\n  width: 100vw;\\n  z-index: \", \";\\n\"])), function (_ref4) {\n  var status = _ref4.status;\n  return status ? 999 : -1;\n});\nvar IconPositionWrapper = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  pointer-events: none;\\n  position: absolute;\\n  transform: translate(-50%, -50%);\\n\"])));\nvar CircleSVG = styled(function (_ref5) {\n  var props = _objectWithoutPropertiesLoose(_ref5, [\"bgColor\", \"status\"]);\n\n  return React__default.createElement(SvgCircle, Object.assign({}, props));\n})(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  fill: \", \";\\n  height: 60px;\\n  transform: \", \";\\n  transform-origin: center;\\n  transition: transform 0.5s;\\n  width: 60px;\\n\"])), function (_ref6) {\n  var bgColor = _ref6.bgColor;\n  return bgColor;\n}, function (_ref7) {\n  var status = _ref7.status;\n  return status ? 'scale(100) translate3d(1%, 1%, 0)' : 'scale(0)';\n});\nvar ReactCircleModal = React__default.forwardRef(function (_ref, ref) {\n  var backgroundColor = _ref.backgroundColor,\n      children = _ref.children,\n      _ref$offsetX = _ref.offsetX,\n      offsetX = _ref$offsetX === void 0 ? 0 : _ref$offsetX,\n      _ref$offsetY = _ref.offsetY,\n      offsetY = _ref$offsetY === void 0 ? 0 : _ref$offsetY,\n      toogleComponent = _ref.toogleComponent;\n\n  var _usePortal = usePortal(),\n      Portal = _usePortal.Portal;\n\n  var _useModal = useModal(false),\n      modalStatus = _useModal.modalStatus,\n      closeModal = _useModal.closeModal,\n      openModal = _useModal.openModal;\n\n  var _useState = useState(modalStatus),\n      wrapperStatus = _useState[0],\n      setWrapperStatus = _useState[1];\n\n  var _useState2 = useState({\n    left: 0,\n    top: 0\n  }),\n      positions = _useState2[0],\n      setPositions = _useState2[1];\n\n  useLockBodyScroll(modalStatus);\n  useImperativeHandle(ref, function () {\n    return {\n      menuStatus: modalStatus,\n      closeMenu: function closeMenu() {\n        setTimeout(function () {\n          return setWrapperStatus(false);\n        }, 500);\n        closeModal();\n      },\n      openMenu: function openMenu() {\n        setWrapperStatus(true);\n        openModal();\n      }\n    };\n  });\n  return React__default.createElement(Fragment, null, toogleComponent(function (event) {\n    setPositions({\n      left: event.clientX,\n      top: event.clientY\n    });\n    openModal();\n    setWrapperStatus(true);\n  }, modalStatus), React__default.createElement(Portal, null, React__default.createElement(IconWrapper, {\n    status: wrapperStatus\n  }, React__default.createElement(IconPositionWrapper, {\n    style: {\n      top: positions.top + offsetY + \"px\",\n      left: positions.left + offsetX + \"px\"\n    }\n  }, React__default.createElement(CircleSVG, {\n    bgColor: backgroundColor,\n    status: modalStatus\n  }))), React__default.createElement(Content, {\n    status: modalStatus\n  }, children(function () {\n    setTimeout(function () {\n      return setWrapperStatus(false);\n    }, 500);\n    closeModal();\n  }))));\n});\nexport default ReactCircleModal;\nexport { ReactCircleModal };","map":{"version":3,"sources":["../src/hooks/useModal.tsx","../src/style.tsx","../src/index.tsx"],"names":["useModal","initialStatus","status","setStatus","useState","modalStatus","closeModal","openModal","Content","styled","IconWrapper","IconPositionWrapper","CircleSVG","props","React","bgColor","ReactCircleModal","backgroundColor","children","offsetX","offsetY","toogleComponent","Portal","usePortal","wrapperStatus","setWrapperStatus","positions","setPositions","left","top","useLockBodyScroll","useImperativeHandle","menuStatus","closeMenu","setTimeout","openMenu","event","clientY","style"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nconst useModal = (initialStatus = false) => {\n  const [status, setStatus] = useState(initialStatus)\n\n  return {\n    modalStatus: status,\n    closeModal: () => setStatus(false),\n    openModal: () => setStatus(true)\n  }\n}\n\nexport default useModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ReactComponent as Circle } from './circle.svg'\n\ninterface ModalStatus {\n  status: boolean\n}\n\ninterface ModalBgColor {\n  bgColor: string\n}\n\nexport const Content = styled.div<ModalStatus>`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  left: 0;\n  max-height: 100vh;\n  max-width: 100vw;\n  opacity: ${({ status }) => (status ? 1 : 0)};\n  overflow: auto;\n  padding: 50px 10px;\n  pointer-events: ${({ status }) => (status ? 'auto' : 'none')};\n  position: fixed;\n  top: 0;\n  transform: ${({ status }) => (status ? 'none' : 'translateY(20px)')};\n  transition: opacity 0.5s, transform 0.3s;\n  width: 100%;\n  z-index: 1000;\n`\n\nexport const IconWrapper = styled.div<ModalStatus>`\n  height: 100vh;\n  left: 0;\n  max-height: 100vh;\n  max-width: 100vw;\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  z-index: ${({ status }) => (status ? 999 : -1)};\n`\n\nexport const IconPositionWrapper = styled.div`\n  pointer-events: none;\n  position: absolute;\n  transform: translate(-50%, -50%);\n`\n\nexport const CircleSVG = styled(\n  ({ bgColor, status, ...props }: ModalStatus & ModalBgColor) => (\n    <Circle {...props} />\n  )\n)`\n  fill: ${({ bgColor }) => bgColor};\n  height: 60px;\n  transform: ${({ status }) =>\n    status ? 'scale(100) translate3d(1%, 1%, 0)' : 'scale(0)'};\n  transform-origin: center;\n  transition: transform 0.5s;\n  width: 60px;\n`\n","import React, { Fragment, useImperativeHandle, useState } from 'react'\nimport usePortal from 'react-useportal'\nimport { useLockBodyScroll } from 'react-use'\nimport useModal from './hooks/useModal'\nimport { CircleSVG, Content, IconWrapper, IconPositionWrapper } from './style'\n\ntype RefContent = {\n  menuStatus: boolean\n  closeMenu: () => void\n  openMenu: () => void\n}\n\ninterface Props {\n  backgroundColor: string\n  children: (\n    onClick: (event: React.MouseEvent) => void\n  ) => React.ReactNode\n  toogleComponent: (\n    onClick: (event: React.MouseEvent) => void,\n    status: boolean\n  ) => React.ReactNode\n  offsetX?: number\n  offsetY?: number\n}\n\nexport const ReactCircleModal = React.forwardRef<RefContent | null, Props>(\n  (\n    {\n      backgroundColor,\n      children,\n      offsetX = 0,\n      offsetY = 0,\n      toogleComponent,\n    },\n    ref\n  ) => {\n    const { Portal } = usePortal()\n    const { modalStatus, closeModal, openModal } = useModal(false)\n    const [wrapperStatus, setWrapperStatus] = useState(modalStatus)\n    const [positions, setPositions] = useState({ left: 0, top: 0 })\n\n    useLockBodyScroll(modalStatus)\n    useImperativeHandle(ref, () => ({\n      menuStatus: modalStatus,\n      closeMenu: () => {\n        setTimeout(() => setWrapperStatus(false), 500)\n        closeModal()\n      },\n      openMenu: () => {\n        setWrapperStatus(true)\n        openModal()\n      }\n    }))\n\n    return (\n      <Fragment>\n        {toogleComponent((event) => {\n          setPositions({ left: event.clientX, top: event.clientY })\n          openModal()\n          setWrapperStatus(true)\n        }, modalStatus)}\n        <Portal>\n          <IconWrapper status={wrapperStatus}>\n            <IconPositionWrapper\n              style={{\n                top: `${positions.top + offsetY}px`,\n                left: `${positions.left + offsetX}px`\n              }}\n            >\n              <CircleSVG bgColor={backgroundColor} status={modalStatus} />\n            </IconPositionWrapper>\n          </IconWrapper>\n          <Content status={modalStatus}>\n            {children(() => {\n              setTimeout(() => setWrapperStatus(false), 500)\n              closeModal()\n            })}\n          </Content>\n        </Portal>\n      </Fragment>\n    )\n  }\n)\n\nexport default ReactCircleModal\n"]},"metadata":{},"sourceType":"module"}