{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadi\\\\OneDrive\\\\Documents\\\\GitHub\\\\ADES\\\\frontEnd\\\\src\\\\components\\\\Quiz.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport '../css/pop-up.css';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BadgeAdmin extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: []\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(\"BUTTON CLICKED\"); // Get the modal\n\n      var modal = document.getElementById(\"myModal\"); // Get the button that opens the modal\n\n      var btn = document.getElementById(\"myBtn\"); // Get the <span> element that closes the modal\n\n      var span = document.getElementsByClassName(\"close\")[0]; // When the user clicks the button, open the modal \n\n      btn.onclick = function () {\n        modal.style.display = \"block\";\n      }; // When the user clicks on <span> (x), close the modal\n\n\n      span.onclick = function () {\n        modal.style.display = \"none\";\n      };\n\n      if (event.target == modal) {\n        modal.style.display = \"none\";\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:8081/quiz`).then(res => {\n      console.log(res.data.length);\n      this.setState({\n        data: res.data\n      });\n      console.log(res.data[0]);\n\n      for (var i = 0; i < res.data.length; i++) {\n        var quiz = res.data[i];\n        console.log(\"quizid:\" + quiz.quizID);\n        console.log(\"total Marks:\" + quiz.totalMarks);\n        console.log(\"toalPoints:\" + quiz.totalPoints); //cpmplie the data that the card needs for its creation\n\n        var cardInfo = {\n          \"quizID\": quiz.quizID,\n          \"totalMarks\": quiz.totalMarks,\n          \"totalPoints\": quiz.totalPoints\n        };\n        console.log(\" -----------Card Info data pack-----------\");\n        console.log(cardInfo);\n        var newCard = createCard(cardInfo);\n        $('#users').append(newCard);\n      }\n    });\n\n    function createCard(cardInfo) {\n      console.log(cardInfo);\n      var card = `\n        <div class=\"card\" style=\" width:60% ;margin-right:10px;\">\n        <div class=\"card-body\">\n           \n           \n        </div> <p class=\"card-text\" style=\" font-size:20px;margin-left:20px\">Quiz ${cardInfo.quizID}</p>\n        <div style=\"margin-left:20px \"> \n        <div >\n            Total Marks:${cardInfo.totalMarks}\n        </div>\n        <div >\n            Total Points:${cardInfo.totalPoints}\n        </div>\n        <Link to={\"/EditBadge?id=${cardInfo.quizID}\"}>\n                      <Button>Do quiz</Button>\n                    </Link>\n        \n          </div>\n\n        \n         </div>\n            `;\n      return card;\n    }\n  }\n\n  //NEED TO GET STUDENT ID!\n  render() {\n    const data = this.state.data; // When the user clicks anywhere outside of the modal, close it\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"users\",\n        class: \"row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"myBtn\",\n          children: \"Open Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"myModal\",\n          class: \"modal\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"close\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Some text in the Modal..\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/khadi/OneDrive/Documents/GitHub/ADES/frontEnd/src/components/Quiz.js"],"names":["React","axios","Link","$","BadgeAdmin","Component","state","data","handleSubmit","event","preventDefault","console","log","modal","document","getElementById","btn","span","getElementsByClassName","onclick","style","display","target","componentDidMount","get","then","res","length","setState","i","quiz","quizID","totalMarks","totalPoints","cardInfo","newCard","createCard","append","card","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link, } from 'react-router-dom';\r\nimport '../css/pop-up.css';\r\nimport $ from 'jquery'; \r\n\r\n\r\nexport default class BadgeAdmin extends React.Component {\r\n  state = {\r\n    data: [],\r\n    \r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n      \r\n    axios.get(`http://localhost:8081/quiz`)\r\n      .then(res => {\r\n        console.log(res.data.length);\r\n        this.setState({ data: res.data });\r\n        console.log(res.data[0])\r\n        for (var i = 0; i < res.data.length; i++) {\r\n            var quiz = res.data[i];\r\n            console.log(\"quizid:\" + quiz.quizID);\r\n            console.log(\"total Marks:\" + quiz.totalMarks);\r\n            console.log(\"toalPoints:\" + quiz.totalPoints);\r\n            \r\n            //cpmplie the data that the card needs for its creation\r\n            var cardInfo = {\r\n                \"quizID\" : quiz.quizID,\r\n                \"totalMarks\" : quiz.totalMarks,\r\n                \"totalPoints\" : quiz.totalPoints\r\n               \r\n            }\r\n            console.log(\" -----------Card Info data pack-----------\");\r\n            console.log(cardInfo);\r\n\r\n\r\n\r\n            var newCard = createCard(cardInfo);\r\n            $('#users').append(newCard);\r\n       \r\n      }\r\n\r\n    \r\n    });\r\n    \r\n\r\n    function createCard(cardInfo) {\r\n        console.log(cardInfo)\r\n        var card = `\r\n        <div class=\"card\" style=\" width:60% ;margin-right:10px;\">\r\n        <div class=\"card-body\">\r\n           \r\n           \r\n        </div> <p class=\"card-text\" style=\" font-size:20px;margin-left:20px\">Quiz ${cardInfo.quizID}</p>\r\n        <div style=\"margin-left:20px \"> \r\n        <div >\r\n            Total Marks:${cardInfo.totalMarks}\r\n        </div>\r\n        <div >\r\n            Total Points:${cardInfo.totalPoints}\r\n        </div>\r\n        <Link to={\"/EditBadge?id=${cardInfo.quizID}\"}>\r\n                      <Button>Do quiz</Button>\r\n                    </Link>\r\n        \r\n          </div>\r\n\r\n        \r\n         </div>\r\n            `;\r\n\r\n        return card;\r\n    }\r\n\r\n\r\n\r\n   \r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(\"BUTTON CLICKED\")\r\n        // Get the modal\r\nvar modal = document.getElementById(\"myModal\");\r\n\r\n// Get the button that opens the modal\r\nvar btn = document.getElementById(\"myBtn\");\r\n\r\n// Get the <span> element that closes the modal\r\nvar span = document.getElementsByClassName(\"close\")[0];\r\n\r\n// When the user clicks the button, open the modal \r\nbtn.onclick = function() {\r\n  modal.style.display = \"block\";\r\n}\r\n\r\n// When the user clicks on <span> (x), close the modal\r\nspan.onclick = function() {\r\n  modal.style.display = \"none\";\r\n}\r\n    if (event.target == modal) {\r\n      modal.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n //NEED TO GET STUDENT ID!\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n  render() {\r\n    \r\n    const data = this.state.data;\r\n\r\n\r\n// When the user clicks anywhere outside of the modal, close it\r\n\r\n    return (\r\n      \r\n      <div>\r\n<div id=\"users\" class=\"row\">\r\n\r\n\r\n</div>\r\n<div>\r\n\r\n<button  type=\"submit\" id=\"myBtn\">Open Modal</button>\r\n\r\n\r\n<div id=\"myModal\" class=\"modal\">\r\n\r\n \r\n  <div class=\"modal-content\">\r\n    <span class=\"close\">&times;</span>\r\n    <p>Some text in the Modal..</p>\r\n  </div>\r\n\r\n</div></div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}