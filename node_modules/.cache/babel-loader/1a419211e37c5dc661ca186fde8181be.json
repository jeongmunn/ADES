{"ast":null,"code":"// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nmodule.exports = function (css, options) {\n  options = options || {};\n  /**\r\n   * Positional.\r\n   */\n\n  var lineno = 1;\n  var column = 1;\n  /**\r\n   * Update lineno and column based on `str`.\r\n   */\n\n  function updatePosition(str) {\n    var lines = str.match(/\\n/g);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf('\\n');\n    column = ~i ? str.length - i : column + str.length;\n  }\n  /**\r\n   * Mark position and patch `node.position`.\r\n   */\n\n\n  function position() {\n    var start = {\n      line: lineno,\n      column: column\n    };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n  /**\r\n   * Store position information for a node\r\n   */\n\n\n  function Position(start) {\n    this.start = start;\n    this.end = {\n      line: lineno,\n      column: column\n    };\n    this.source = options.source;\n  }\n  /**\r\n   * Non-enumerable source string\r\n   */\n\n\n  Position.prototype.content = css;\n  /**\r\n   * Error `msg`.\r\n   */\n\n  var errorsList = [];\n\n  function error(msg) {\n    var err = new Error(options.source + ':' + lineno + ':' + column + ': ' + msg);\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = css;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n  /**\r\n   * Parse stylesheet.\r\n   */\n\n\n  function stylesheet() {\n    var rulesList = rules();\n    return {\n      type: 'stylesheet',\n      stylesheet: {\n        source: options.source,\n        rules: rulesList,\n        parsingErrors: errorsList\n      }\n    };\n  }\n  /**\r\n   * Opening brace.\r\n   */\n\n\n  function open() {\n    return match(/^{\\s*/);\n  }\n  /**\r\n   * Closing brace.\r\n   */\n\n\n  function close() {\n    return match(/^}/);\n  }\n  /**\r\n   * Parse ruleset.\r\n   */\n\n\n  function rules() {\n    var node;\n    var rules = [];\n    whitespace();\n    comments(rules);\n\n    while (css.length && css.charAt(0) != '}' && (node = atrule() || rule())) {\n      if (node !== false) {\n        rules.push(node);\n        comments(rules);\n      }\n    }\n\n    return rules;\n  }\n  /**\r\n   * Match `re` and return captures.\r\n   */\n\n\n  function match(re) {\n    var m = re.exec(css);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n  /**\r\n   * Parse whitespace.\r\n   */\n\n\n  function whitespace() {\n    match(/^\\s*/);\n  }\n  /**\r\n   * Parse comments;\r\n   */\n\n\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n\n    while (c = comment()) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n\n    return rules;\n  }\n  /**\r\n   * Parse comment.\r\n   */\n\n\n  function comment() {\n    var pos = position();\n    if ('/' != css.charAt(0) || '*' != css.charAt(1)) return;\n    var i = 2;\n\n    while (\"\" != css.charAt(i) && ('*' != css.charAt(i) || '/' != css.charAt(i + 1))) {\n      ++i;\n    }\n\n    i += 2;\n\n    if (\"\" === css.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = css.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    css = css.slice(i);\n    column += 2;\n    return pos({\n      type: 'comment',\n      comment: str\n    });\n  }\n  /**\r\n   * Parse selector.\r\n   */\n\n\n  function selector() {\n    var m = match(/^([^{]+)/);\n    if (!m) return;\n    /* @fix Remove all comments from selectors\r\n     * http://ostermiller.org/findcomment.html */\n\n    return trim(m[0]).replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '').replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, function (m) {\n      return m.replace(/,/g, \"\\u200C\");\n    }).split(/\\s*(?![^(]*\\)),\\s*/).map(function (s) {\n      return s.replace(/\\u200C/g, ',');\n    });\n  }\n  /**\r\n   * Parse declaration.\r\n   */\n\n\n  function declaration() {\n    var pos = position(); // prop\n\n    var prop = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n    if (!prop) return;\n    prop = trim(prop[0]); // :\n\n    if (!match(/^:\\s*/)) return error(\"property missing ':'\"); // val\n\n    var val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\n    var ret = pos({\n      type: 'declaration',\n      property: prop.replace(commentre, ''),\n      value: val ? trim(val[0]).replace(commentre, '') : ''\n    }); // ;\n\n    match(/^[;\\s]*/);\n    return ret;\n  }\n  /**\r\n   * Parse declarations.\r\n   */\n\n\n  function declarations() {\n    var decls = [];\n    if (!open()) return error(\"missing '{'\");\n    comments(decls); // declarations\n\n    var decl;\n\n    while (decl = declaration()) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    if (!close()) return error(\"missing '}'\");\n    return decls;\n  }\n  /**\r\n   * Parse keyframe.\r\n   */\n\n\n  function keyframe() {\n    var m;\n    var vals = [];\n    var pos = position();\n\n    while (m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/)) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n\n    if (!vals.length) return;\n    return pos({\n      type: 'keyframe',\n      values: vals,\n      declarations: declarations()\n    });\n  }\n  /**\r\n   * Parse keyframes.\r\n   */\n\n\n  function atkeyframes() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?keyframes\\s*/);\n    if (!m) return;\n    var vendor = m[1]; // identifier\n\n    var m = match(/^([-\\w]+)\\s*/);\n    if (!m) return error(\"@keyframes missing name\");\n    var name = m[1];\n    if (!open()) return error(\"@keyframes missing '{'\");\n    var frame;\n    var frames = comments();\n\n    while (frame = keyframe()) {\n      frames.push(frame);\n      frames = frames.concat(comments());\n    }\n\n    if (!close()) return error(\"@keyframes missing '}'\");\n    return pos({\n      type: 'keyframes',\n      name: name,\n      vendor: vendor,\n      keyframes: frames\n    });\n  }\n  /**\r\n   * Parse supports.\r\n   */\n\n\n  function atsupports() {\n    var pos = position();\n    var m = match(/^@supports *([^{]+)/);\n    if (!m) return;\n    var supports = trim(m[1]);\n    if (!open()) return error(\"@supports missing '{'\");\n    var style = comments().concat(rules());\n    if (!close()) return error(\"@supports missing '}'\");\n    return pos({\n      type: 'supports',\n      supports: supports,\n      rules: style\n    });\n  }\n  /**\r\n   * Parse host.\r\n   */\n\n\n  function athost() {\n    var pos = position();\n    var m = match(/^@host\\s*/);\n    if (!m) return;\n    if (!open()) return error(\"@host missing '{'\");\n    var style = comments().concat(rules());\n    if (!close()) return error(\"@host missing '}'\");\n    return pos({\n      type: 'host',\n      rules: style\n    });\n  }\n  /**\r\n   * Parse media.\r\n   */\n\n\n  function atmedia() {\n    var pos = position();\n    var m = match(/^@media *([^{]+)/);\n    if (!m) return;\n    var media = trim(m[1]);\n    if (!open()) return error(\"@media missing '{'\");\n    var style = comments().concat(rules());\n    if (!close()) return error(\"@media missing '}'\");\n    return pos({\n      type: 'media',\n      media: media,\n      rules: style\n    });\n  }\n  /**\r\n   * Parse custom-media.\r\n   */\n\n\n  function atcustommedia() {\n    var pos = position();\n    var m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n    if (!m) return;\n    return pos({\n      type: 'custom-media',\n      name: trim(m[1]),\n      media: trim(m[2])\n    });\n  }\n  /**\r\n   * Parse paged media.\r\n   */\n\n\n  function atpage() {\n    var pos = position();\n    var m = match(/^@page */);\n    if (!m) return;\n    var sel = selector() || [];\n    if (!open()) return error(\"@page missing '{'\");\n    var decls = comments(); // declarations\n\n    var decl;\n\n    while (decl = declaration()) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n\n    if (!close()) return error(\"@page missing '}'\");\n    return pos({\n      type: 'page',\n      selectors: sel,\n      declarations: decls\n    });\n  }\n  /**\r\n   * Parse document.\r\n   */\n\n\n  function atdocument() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?document *([^{]+)/);\n    if (!m) return;\n    var vendor = trim(m[1]);\n    var doc = trim(m[2]);\n    if (!open()) return error(\"@document missing '{'\");\n    var style = comments().concat(rules());\n    if (!close()) return error(\"@document missing '}'\");\n    return pos({\n      type: 'document',\n      document: doc,\n      vendor: vendor,\n      rules: style\n    });\n  }\n  /**\r\n   * Parse font-face.\r\n   */\n\n\n  function atfontface() {\n    var pos = position();\n    var m = match(/^@font-face\\s*/);\n    if (!m) return;\n    if (!open()) return error(\"@font-face missing '{'\");\n    var decls = comments(); // declarations\n\n    var decl;\n\n    while (decl = declaration()) {\n      decls.push(decl);\n      decls = decls.concat(comments());\n    }\n\n    if (!close()) return error(\"@font-face missing '}'\");\n    return pos({\n      type: 'font-face',\n      declarations: decls\n    });\n  }\n  /**\r\n   * Parse import\r\n   */\n\n\n  var atimport = _compileAtrule('import');\n  /**\r\n   * Parse charset\r\n   */\n\n\n  var atcharset = _compileAtrule('charset');\n  /**\r\n   * Parse namespace\r\n   */\n\n\n  var atnamespace = _compileAtrule('namespace');\n  /**\r\n   * Parse non-block at-rules\r\n   */\n\n\n  function _compileAtrule(name) {\n    var re = new RegExp('^@' + name + '\\\\s*([^;]+);');\n    return function () {\n      var pos = position();\n      var m = match(re);\n      if (!m) return;\n      var ret = {\n        type: name\n      };\n      ret[name] = m[1].trim();\n      return pos(ret);\n    };\n  }\n  /**\r\n   * Parse at rule.\r\n   */\n\n\n  function atrule() {\n    if (css[0] != '@') return;\n    return atkeyframes() || atmedia() || atcustommedia() || atsupports() || atimport() || atcharset() || atnamespace() || atdocument() || atpage() || athost() || atfontface();\n  }\n  /**\r\n   * Parse rule.\r\n   */\n\n\n  function rule() {\n    var pos = position();\n    var sel = selector();\n    if (!sel) return error('selector missing');\n    comments();\n    return pos({\n      type: 'rule',\n      selectors: sel,\n      declarations: declarations()\n    });\n  }\n\n  return addParent(stylesheet());\n};\n/**\r\n * Trim `str`.\r\n */\n\n\nfunction trim(str) {\n  return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\n}\n/**\r\n * Adds non-enumerable parent node reference to each node.\r\n */\n\n\nfunction addParent(obj, parent) {\n  var isNode = obj && typeof obj.type === 'string';\n  var childParent = isNode ? obj : parent;\n\n  for (var k in obj) {\n    var value = obj[k];\n\n    if (Array.isArray(value)) {\n      value.forEach(function (v) {\n        addParent(v, childParent);\n      });\n    } else if (value && typeof value === 'object') {\n      addParent(value, childParent);\n    }\n  }\n\n  if (isNode) {\n    Object.defineProperty(obj, 'parent', {\n      configurable: true,\n      writable: true,\n      enumerable: false,\n      value: parent || null\n    });\n  }\n\n  return obj;\n}","map":{"version":3,"sources":["C:/Users/jw/OneDrive/Documents/GitHub/ADES/node_modules/css/lib/parse/index.js"],"names":["commentre","module","exports","css","options","lineno","column","updatePosition","str","lines","match","length","i","lastIndexOf","position","start","line","node","Position","whitespace","end","source","prototype","content","errorsList","error","msg","err","Error","reason","filename","silent","push","stylesheet","rulesList","rules","type","parsingErrors","open","close","comments","charAt","atrule","rule","re","m","exec","slice","c","comment","pos","selector","trim","replace","split","map","s","declaration","prop","val","ret","property","value","declarations","decls","decl","keyframe","vals","values","atkeyframes","vendor","name","frame","frames","concat","keyframes","atsupports","supports","style","athost","atmedia","media","atcustommedia","atpage","sel","selectors","atdocument","doc","document","atfontface","atimport","_compileAtrule","atcharset","atnamespace","RegExp","addParent","obj","parent","isNode","childParent","k","Array","isArray","forEach","v","Object","defineProperty","configurable","writable","enumerable"],"mappings":"AAAA;AACA;AACA,IAAIA,SAAS,GAAG,iCAAhB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAcC,OAAd,EAAsB;AACrCA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA;AACF;AACA;;AAEE,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,MAAM,GAAG,CAAb;AAEA;AACF;AACA;;AAEE,WAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC3B,QAAIC,KAAK,GAAGD,GAAG,CAACE,KAAJ,CAAU,KAAV,CAAZ;AACA,QAAID,KAAJ,EAAWJ,MAAM,IAAII,KAAK,CAACE,MAAhB;AACX,QAAIC,CAAC,GAAGJ,GAAG,CAACK,WAAJ,CAAgB,IAAhB,CAAR;AACAP,IAAAA,MAAM,GAAG,CAACM,CAAD,GAAKJ,GAAG,CAACG,MAAJ,GAAaC,CAAlB,GAAsBN,MAAM,GAAGE,GAAG,CAACG,MAA5C;AACD;AAED;AACF;AACA;;;AAEE,WAASG,QAAT,GAAoB;AAClB,QAAIC,KAAK,GAAG;AAAEC,MAAAA,IAAI,EAAEX,MAAR;AAAgBC,MAAAA,MAAM,EAAEA;AAAxB,KAAZ;AACA,WAAO,UAASW,IAAT,EAAc;AACnBA,MAAAA,IAAI,CAACH,QAAL,GAAgB,IAAII,QAAJ,CAAaH,KAAb,CAAhB;AACAI,MAAAA,UAAU;AACV,aAAOF,IAAP;AACD,KAJD;AAKD;AAED;AACF;AACA;;;AAEE,WAASC,QAAT,CAAkBH,KAAlB,EAAyB;AACvB,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKK,GAAL,GAAW;AAAEJ,MAAAA,IAAI,EAAEX,MAAR;AAAgBC,MAAAA,MAAM,EAAEA;AAAxB,KAAX;AACA,SAAKe,MAAL,GAAcjB,OAAO,CAACiB,MAAtB;AACD;AAED;AACF;AACA;;;AAEEH,EAAAA,QAAQ,CAACI,SAAT,CAAmBC,OAAnB,GAA6BpB,GAA7B;AAEA;AACF;AACA;;AAEE,MAAIqB,UAAU,GAAG,EAAjB;;AAEA,WAASC,KAAT,CAAeC,GAAf,EAAoB;AAClB,QAAIC,GAAG,GAAG,IAAIC,KAAJ,CAAUxB,OAAO,CAACiB,MAAR,GAAiB,GAAjB,GAAuBhB,MAAvB,GAAgC,GAAhC,GAAsCC,MAAtC,GAA+C,IAA/C,GAAsDoB,GAAhE,CAAV;AACAC,IAAAA,GAAG,CAACE,MAAJ,GAAaH,GAAb;AACAC,IAAAA,GAAG,CAACG,QAAJ,GAAe1B,OAAO,CAACiB,MAAvB;AACAM,IAAAA,GAAG,CAACX,IAAJ,GAAWX,MAAX;AACAsB,IAAAA,GAAG,CAACrB,MAAJ,GAAaA,MAAb;AACAqB,IAAAA,GAAG,CAACN,MAAJ,GAAalB,GAAb;;AAEA,QAAIC,OAAO,CAAC2B,MAAZ,EAAoB;AAClBP,MAAAA,UAAU,CAACQ,IAAX,CAAgBL,GAAhB;AACD,KAFD,MAEO;AACL,YAAMA,GAAN;AACD;AACF;AAED;AACF;AACA;;;AAEE,WAASM,UAAT,GAAsB;AACpB,QAAIC,SAAS,GAAGC,KAAK,EAArB;AAEA,WAAO;AACLC,MAAAA,IAAI,EAAE,YADD;AAELH,MAAAA,UAAU,EAAE;AACVZ,QAAAA,MAAM,EAAEjB,OAAO,CAACiB,MADN;AAEVc,QAAAA,KAAK,EAAED,SAFG;AAGVG,QAAAA,aAAa,EAAEb;AAHL;AAFP,KAAP;AAQD;AAED;AACF;AACA;;;AAEE,WAASc,IAAT,GAAgB;AACd,WAAO5B,KAAK,CAAC,OAAD,CAAZ;AACD;AAED;AACF;AACA;;;AAEE,WAAS6B,KAAT,GAAiB;AACf,WAAO7B,KAAK,CAAC,IAAD,CAAZ;AACD;AAED;AACF;AACA;;;AAEE,WAASyB,KAAT,GAAiB;AACf,QAAIlB,IAAJ;AACA,QAAIkB,KAAK,GAAG,EAAZ;AACAhB,IAAAA,UAAU;AACVqB,IAAAA,QAAQ,CAACL,KAAD,CAAR;;AACA,WAAOhC,GAAG,CAACQ,MAAJ,IAAcR,GAAG,CAACsC,MAAJ,CAAW,CAAX,KAAiB,GAA/B,KAAuCxB,IAAI,GAAGyB,MAAM,MAAMC,IAAI,EAA9D,CAAP,EAA0E;AACxE,UAAI1B,IAAI,KAAK,KAAb,EAAoB;AAClBkB,QAAAA,KAAK,CAACH,IAAN,CAAWf,IAAX;AACAuB,QAAAA,QAAQ,CAACL,KAAD,CAAR;AACD;AACF;;AACD,WAAOA,KAAP;AACD;AAED;AACF;AACA;;;AAEE,WAASzB,KAAT,CAAekC,EAAf,EAAmB;AACjB,QAAIC,CAAC,GAAGD,EAAE,CAACE,IAAH,CAAQ3C,GAAR,CAAR;AACA,QAAI,CAAC0C,CAAL,EAAQ;AACR,QAAIrC,GAAG,GAAGqC,CAAC,CAAC,CAAD,CAAX;AACAtC,IAAAA,cAAc,CAACC,GAAD,CAAd;AACAL,IAAAA,GAAG,GAAGA,GAAG,CAAC4C,KAAJ,CAAUvC,GAAG,CAACG,MAAd,CAAN;AACA,WAAOkC,CAAP;AACD;AAED;AACF;AACA;;;AAEE,WAAS1B,UAAT,GAAsB;AACpBT,IAAAA,KAAK,CAAC,MAAD,CAAL;AACD;AAED;AACF;AACA;;;AAEE,WAAS8B,QAAT,CAAkBL,KAAlB,EAAyB;AACvB,QAAIa,CAAJ;AACAb,IAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;;AACA,WAAOa,CAAC,GAAGC,OAAO,EAAlB,EAAsB;AACpB,UAAID,CAAC,KAAK,KAAV,EAAiB;AACfb,QAAAA,KAAK,CAACH,IAAN,CAAWgB,CAAX;AACD;AACF;;AACD,WAAOb,KAAP;AACD;AAED;AACF;AACA;;;AAEE,WAASc,OAAT,GAAmB;AACjB,QAAIC,GAAG,GAAGpC,QAAQ,EAAlB;AACA,QAAI,OAAOX,GAAG,CAACsC,MAAJ,CAAW,CAAX,CAAP,IAAwB,OAAOtC,GAAG,CAACsC,MAAJ,CAAW,CAAX,CAAnC,EAAkD;AAElD,QAAI7B,CAAC,GAAG,CAAR;;AACA,WAAO,MAAMT,GAAG,CAACsC,MAAJ,CAAW7B,CAAX,CAAN,KAAwB,OAAOT,GAAG,CAACsC,MAAJ,CAAW7B,CAAX,CAAP,IAAwB,OAAOT,GAAG,CAACsC,MAAJ,CAAW7B,CAAC,GAAG,CAAf,CAAvD,CAAP;AAAkF,QAAEA,CAAF;AAAlF;;AACAA,IAAAA,CAAC,IAAI,CAAL;;AAEA,QAAI,OAAOT,GAAG,CAACsC,MAAJ,CAAW7B,CAAC,GAAC,CAAb,CAAX,EAA4B;AAC1B,aAAOa,KAAK,CAAC,wBAAD,CAAZ;AACD;;AAED,QAAIjB,GAAG,GAAGL,GAAG,CAAC4C,KAAJ,CAAU,CAAV,EAAanC,CAAC,GAAG,CAAjB,CAAV;AACAN,IAAAA,MAAM,IAAI,CAAV;AACAC,IAAAA,cAAc,CAACC,GAAD,CAAd;AACAL,IAAAA,GAAG,GAAGA,GAAG,CAAC4C,KAAJ,CAAUnC,CAAV,CAAN;AACAN,IAAAA,MAAM,IAAI,CAAV;AAEA,WAAO4C,GAAG,CAAC;AACTd,MAAAA,IAAI,EAAE,SADG;AAETa,MAAAA,OAAO,EAAEzC;AAFA,KAAD,CAAV;AAID;AAED;AACF;AACA;;;AAEE,WAAS2C,QAAT,GAAoB;AAClB,QAAIN,CAAC,GAAGnC,KAAK,CAAC,UAAD,CAAb;AACA,QAAI,CAACmC,CAAL,EAAQ;AACR;AACJ;;AACI,WAAOO,IAAI,CAACP,CAAC,CAAC,CAAD,CAAF,CAAJ,CACJQ,OADI,CACI,8CADJ,EACoD,EADpD,EAEJA,OAFI,CAEI,kCAFJ,EAEwC,UAASR,CAAT,EAAY;AACvD,aAAOA,CAAC,CAACQ,OAAF,CAAU,IAAV,EAAgB,QAAhB,CAAP;AACD,KAJI,EAKJC,KALI,CAKE,oBALF,EAMJC,GANI,CAMA,UAASC,CAAT,EAAY;AACf,aAAOA,CAAC,CAACH,OAAF,CAAU,SAAV,EAAqB,GAArB,CAAP;AACD,KARI,CAAP;AASD;AAED;AACF;AACA;;;AAEE,WAASI,WAAT,GAAuB;AACrB,QAAIP,GAAG,GAAGpC,QAAQ,EAAlB,CADqB,CAGrB;;AACA,QAAI4C,IAAI,GAAGhD,KAAK,CAAC,0CAAD,CAAhB;AACA,QAAI,CAACgD,IAAL,EAAW;AACXA,IAAAA,IAAI,GAAGN,IAAI,CAACM,IAAI,CAAC,CAAD,CAAL,CAAX,CANqB,CAQrB;;AACA,QAAI,CAAChD,KAAK,CAAC,OAAD,CAAV,EAAqB,OAAOe,KAAK,CAAC,sBAAD,CAAZ,CATA,CAWrB;;AACA,QAAIkC,GAAG,GAAGjD,KAAK,CAAC,uDAAD,CAAf;AAEA,QAAIkD,GAAG,GAAGV,GAAG,CAAC;AACZd,MAAAA,IAAI,EAAE,aADM;AAEZyB,MAAAA,QAAQ,EAAEH,IAAI,CAACL,OAAL,CAAarD,SAAb,EAAwB,EAAxB,CAFE;AAGZ8D,MAAAA,KAAK,EAAEH,GAAG,GAAGP,IAAI,CAACO,GAAG,CAAC,CAAD,CAAJ,CAAJ,CAAaN,OAAb,CAAqBrD,SAArB,EAAgC,EAAhC,CAAH,GAAyC;AAHvC,KAAD,CAAb,CAdqB,CAoBrB;;AACAU,IAAAA,KAAK,CAAC,SAAD,CAAL;AAEA,WAAOkD,GAAP;AACD;AAED;AACF;AACA;;;AAEE,WAASG,YAAT,GAAwB;AACtB,QAAIC,KAAK,GAAG,EAAZ;AAEA,QAAI,CAAC1B,IAAI,EAAT,EAAa,OAAOb,KAAK,CAAC,aAAD,CAAZ;AACbe,IAAAA,QAAQ,CAACwB,KAAD,CAAR,CAJsB,CAMtB;;AACA,QAAIC,IAAJ;;AACA,WAAOA,IAAI,GAAGR,WAAW,EAAzB,EAA6B;AAC3B,UAAIQ,IAAI,KAAK,KAAb,EAAoB;AAClBD,QAAAA,KAAK,CAAChC,IAAN,CAAWiC,IAAX;AACAzB,QAAAA,QAAQ,CAACwB,KAAD,CAAR;AACD;AACF;;AAED,QAAI,CAACzB,KAAK,EAAV,EAAc,OAAOd,KAAK,CAAC,aAAD,CAAZ;AACd,WAAOuC,KAAP;AACD;AAED;AACF;AACA;;;AAEE,WAASE,QAAT,GAAoB;AAClB,QAAIrB,CAAJ;AACA,QAAIsB,IAAI,GAAG,EAAX;AACA,QAAIjB,GAAG,GAAGpC,QAAQ,EAAlB;;AAEA,WAAO+B,CAAC,GAAGnC,KAAK,CAAC,qCAAD,CAAhB,EAAyD;AACvDyD,MAAAA,IAAI,CAACnC,IAAL,CAAUa,CAAC,CAAC,CAAD,CAAX;AACAnC,MAAAA,KAAK,CAAC,OAAD,CAAL;AACD;;AAED,QAAI,CAACyD,IAAI,CAACxD,MAAV,EAAkB;AAElB,WAAOuC,GAAG,CAAC;AACTd,MAAAA,IAAI,EAAE,UADG;AAETgC,MAAAA,MAAM,EAAED,IAFC;AAGTJ,MAAAA,YAAY,EAAEA,YAAY;AAHjB,KAAD,CAAV;AAKD;AAED;AACF;AACA;;;AAEE,WAASM,WAAT,GAAuB;AACrB,QAAInB,GAAG,GAAGpC,QAAQ,EAAlB;AACA,QAAI+B,CAAC,GAAGnC,KAAK,CAAC,yBAAD,CAAb;AAEA,QAAI,CAACmC,CAAL,EAAQ;AACR,QAAIyB,MAAM,GAAGzB,CAAC,CAAC,CAAD,CAAd,CALqB,CAOrB;;AACA,QAAIA,CAAC,GAAGnC,KAAK,CAAC,cAAD,CAAb;AACA,QAAI,CAACmC,CAAL,EAAQ,OAAOpB,KAAK,CAAC,yBAAD,CAAZ;AACR,QAAI8C,IAAI,GAAG1B,CAAC,CAAC,CAAD,CAAZ;AAEA,QAAI,CAACP,IAAI,EAAT,EAAa,OAAOb,KAAK,CAAC,wBAAD,CAAZ;AAEb,QAAI+C,KAAJ;AACA,QAAIC,MAAM,GAAGjC,QAAQ,EAArB;;AACA,WAAOgC,KAAK,GAAGN,QAAQ,EAAvB,EAA2B;AACzBO,MAAAA,MAAM,CAACzC,IAAP,CAAYwC,KAAZ;AACAC,MAAAA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAAclC,QAAQ,EAAtB,CAAT;AACD;;AAED,QAAI,CAACD,KAAK,EAAV,EAAc,OAAOd,KAAK,CAAC,wBAAD,CAAZ;AAEd,WAAOyB,GAAG,CAAC;AACTd,MAAAA,IAAI,EAAE,WADG;AAETmC,MAAAA,IAAI,EAAEA,IAFG;AAGTD,MAAAA,MAAM,EAAEA,MAHC;AAITK,MAAAA,SAAS,EAAEF;AAJF,KAAD,CAAV;AAMD;AAED;AACF;AACA;;;AAEE,WAASG,UAAT,GAAsB;AACpB,QAAI1B,GAAG,GAAGpC,QAAQ,EAAlB;AACA,QAAI+B,CAAC,GAAGnC,KAAK,CAAC,qBAAD,CAAb;AAEA,QAAI,CAACmC,CAAL,EAAQ;AACR,QAAIgC,QAAQ,GAAGzB,IAAI,CAACP,CAAC,CAAC,CAAD,CAAF,CAAnB;AAEA,QAAI,CAACP,IAAI,EAAT,EAAa,OAAOb,KAAK,CAAC,uBAAD,CAAZ;AAEb,QAAIqD,KAAK,GAAGtC,QAAQ,GAAGkC,MAAX,CAAkBvC,KAAK,EAAvB,CAAZ;AAEA,QAAI,CAACI,KAAK,EAAV,EAAc,OAAOd,KAAK,CAAC,uBAAD,CAAZ;AAEd,WAAOyB,GAAG,CAAC;AACTd,MAAAA,IAAI,EAAE,UADG;AAETyC,MAAAA,QAAQ,EAAEA,QAFD;AAGT1C,MAAAA,KAAK,EAAE2C;AAHE,KAAD,CAAV;AAKD;AAED;AACF;AACA;;;AAEE,WAASC,MAAT,GAAkB;AAChB,QAAI7B,GAAG,GAAGpC,QAAQ,EAAlB;AACA,QAAI+B,CAAC,GAAGnC,KAAK,CAAC,WAAD,CAAb;AAEA,QAAI,CAACmC,CAAL,EAAQ;AAER,QAAI,CAACP,IAAI,EAAT,EAAa,OAAOb,KAAK,CAAC,mBAAD,CAAZ;AAEb,QAAIqD,KAAK,GAAGtC,QAAQ,GAAGkC,MAAX,CAAkBvC,KAAK,EAAvB,CAAZ;AAEA,QAAI,CAACI,KAAK,EAAV,EAAc,OAAOd,KAAK,CAAC,mBAAD,CAAZ;AAEd,WAAOyB,GAAG,CAAC;AACTd,MAAAA,IAAI,EAAE,MADG;AAETD,MAAAA,KAAK,EAAE2C;AAFE,KAAD,CAAV;AAID;AAED;AACF;AACA;;;AAEE,WAASE,OAAT,GAAmB;AACjB,QAAI9B,GAAG,GAAGpC,QAAQ,EAAlB;AACA,QAAI+B,CAAC,GAAGnC,KAAK,CAAC,kBAAD,CAAb;AAEA,QAAI,CAACmC,CAAL,EAAQ;AACR,QAAIoC,KAAK,GAAG7B,IAAI,CAACP,CAAC,CAAC,CAAD,CAAF,CAAhB;AAEA,QAAI,CAACP,IAAI,EAAT,EAAa,OAAOb,KAAK,CAAC,oBAAD,CAAZ;AAEb,QAAIqD,KAAK,GAAGtC,QAAQ,GAAGkC,MAAX,CAAkBvC,KAAK,EAAvB,CAAZ;AAEA,QAAI,CAACI,KAAK,EAAV,EAAc,OAAOd,KAAK,CAAC,oBAAD,CAAZ;AAEd,WAAOyB,GAAG,CAAC;AACTd,MAAAA,IAAI,EAAE,OADG;AAET6C,MAAAA,KAAK,EAAEA,KAFE;AAGT9C,MAAAA,KAAK,EAAE2C;AAHE,KAAD,CAAV;AAKD;AAGD;AACF;AACA;;;AAEE,WAASI,aAAT,GAAyB;AACvB,QAAIhC,GAAG,GAAGpC,QAAQ,EAAlB;AACA,QAAI+B,CAAC,GAAGnC,KAAK,CAAC,yCAAD,CAAb;AACA,QAAI,CAACmC,CAAL,EAAQ;AAER,WAAOK,GAAG,CAAC;AACTd,MAAAA,IAAI,EAAE,cADG;AAETmC,MAAAA,IAAI,EAAEnB,IAAI,CAACP,CAAC,CAAC,CAAD,CAAF,CAFD;AAGToC,MAAAA,KAAK,EAAE7B,IAAI,CAACP,CAAC,CAAC,CAAD,CAAF;AAHF,KAAD,CAAV;AAKD;AAED;AACF;AACA;;;AAEE,WAASsC,MAAT,GAAkB;AAChB,QAAIjC,GAAG,GAAGpC,QAAQ,EAAlB;AACA,QAAI+B,CAAC,GAAGnC,KAAK,CAAC,UAAD,CAAb;AACA,QAAI,CAACmC,CAAL,EAAQ;AAER,QAAIuC,GAAG,GAAGjC,QAAQ,MAAM,EAAxB;AAEA,QAAI,CAACb,IAAI,EAAT,EAAa,OAAOb,KAAK,CAAC,mBAAD,CAAZ;AACb,QAAIuC,KAAK,GAAGxB,QAAQ,EAApB,CARgB,CAUhB;;AACA,QAAIyB,IAAJ;;AACA,WAAOA,IAAI,GAAGR,WAAW,EAAzB,EAA6B;AAC3BO,MAAAA,KAAK,CAAChC,IAAN,CAAWiC,IAAX;AACAD,MAAAA,KAAK,GAAGA,KAAK,CAACU,MAAN,CAAalC,QAAQ,EAArB,CAAR;AACD;;AAED,QAAI,CAACD,KAAK,EAAV,EAAc,OAAOd,KAAK,CAAC,mBAAD,CAAZ;AAEd,WAAOyB,GAAG,CAAC;AACTd,MAAAA,IAAI,EAAE,MADG;AAETiD,MAAAA,SAAS,EAAED,GAFF;AAGTrB,MAAAA,YAAY,EAAEC;AAHL,KAAD,CAAV;AAKD;AAED;AACF;AACA;;;AAEE,WAASsB,UAAT,GAAsB;AACpB,QAAIpC,GAAG,GAAGpC,QAAQ,EAAlB;AACA,QAAI+B,CAAC,GAAGnC,KAAK,CAAC,8BAAD,CAAb;AACA,QAAI,CAACmC,CAAL,EAAQ;AAER,QAAIyB,MAAM,GAAGlB,IAAI,CAACP,CAAC,CAAC,CAAD,CAAF,CAAjB;AACA,QAAI0C,GAAG,GAAGnC,IAAI,CAACP,CAAC,CAAC,CAAD,CAAF,CAAd;AAEA,QAAI,CAACP,IAAI,EAAT,EAAa,OAAOb,KAAK,CAAC,uBAAD,CAAZ;AAEb,QAAIqD,KAAK,GAAGtC,QAAQ,GAAGkC,MAAX,CAAkBvC,KAAK,EAAvB,CAAZ;AAEA,QAAI,CAACI,KAAK,EAAV,EAAc,OAAOd,KAAK,CAAC,uBAAD,CAAZ;AAEd,WAAOyB,GAAG,CAAC;AACTd,MAAAA,IAAI,EAAE,UADG;AAEToD,MAAAA,QAAQ,EAAED,GAFD;AAGTjB,MAAAA,MAAM,EAAEA,MAHC;AAITnC,MAAAA,KAAK,EAAE2C;AAJE,KAAD,CAAV;AAMD;AAED;AACF;AACA;;;AAEE,WAASW,UAAT,GAAsB;AACpB,QAAIvC,GAAG,GAAGpC,QAAQ,EAAlB;AACA,QAAI+B,CAAC,GAAGnC,KAAK,CAAC,gBAAD,CAAb;AACA,QAAI,CAACmC,CAAL,EAAQ;AAER,QAAI,CAACP,IAAI,EAAT,EAAa,OAAOb,KAAK,CAAC,wBAAD,CAAZ;AACb,QAAIuC,KAAK,GAAGxB,QAAQ,EAApB,CANoB,CAQpB;;AACA,QAAIyB,IAAJ;;AACA,WAAOA,IAAI,GAAGR,WAAW,EAAzB,EAA6B;AAC3BO,MAAAA,KAAK,CAAChC,IAAN,CAAWiC,IAAX;AACAD,MAAAA,KAAK,GAAGA,KAAK,CAACU,MAAN,CAAalC,QAAQ,EAArB,CAAR;AACD;;AAED,QAAI,CAACD,KAAK,EAAV,EAAc,OAAOd,KAAK,CAAC,wBAAD,CAAZ;AAEd,WAAOyB,GAAG,CAAC;AACTd,MAAAA,IAAI,EAAE,WADG;AAET2B,MAAAA,YAAY,EAAEC;AAFL,KAAD,CAAV;AAID;AAED;AACF;AACA;;;AAEE,MAAI0B,QAAQ,GAAGC,cAAc,CAAC,QAAD,CAA7B;AAEA;AACF;AACA;;;AAEE,MAAIC,SAAS,GAAGD,cAAc,CAAC,SAAD,CAA9B;AAEA;AACF;AACA;;;AAEE,MAAIE,WAAW,GAAGF,cAAc,CAAC,WAAD,CAAhC;AAEA;AACF;AACA;;;AAGE,WAASA,cAAT,CAAwBpB,IAAxB,EAA8B;AAC5B,QAAI3B,EAAE,GAAG,IAAIkD,MAAJ,CAAW,OAAOvB,IAAP,GAAc,cAAzB,CAAT;AACA,WAAO,YAAW;AAChB,UAAIrB,GAAG,GAAGpC,QAAQ,EAAlB;AACA,UAAI+B,CAAC,GAAGnC,KAAK,CAACkC,EAAD,CAAb;AACA,UAAI,CAACC,CAAL,EAAQ;AACR,UAAIe,GAAG,GAAG;AAAExB,QAAAA,IAAI,EAAEmC;AAAR,OAAV;AACAX,MAAAA,GAAG,CAACW,IAAD,CAAH,GAAY1B,CAAC,CAAC,CAAD,CAAD,CAAKO,IAAL,EAAZ;AACA,aAAOF,GAAG,CAACU,GAAD,CAAV;AACD,KAPD;AAQD;AAED;AACF;AACA;;;AAEE,WAASlB,MAAT,GAAkB;AAChB,QAAIvC,GAAG,CAAC,CAAD,CAAH,IAAU,GAAd,EAAmB;AAEnB,WAAOkE,WAAW,MACbW,OAAO,EADL,IAEFE,aAAa,EAFX,IAGFN,UAAU,EAHR,IAIFc,QAAQ,EAJN,IAKFE,SAAS,EALP,IAMFC,WAAW,EANT,IAOFP,UAAU,EAPR,IAQFH,MAAM,EARJ,IASFJ,MAAM,EATJ,IAUFU,UAAU,EAVf;AAWD;AAED;AACF;AACA;;;AAEE,WAAS9C,IAAT,GAAgB;AACd,QAAIO,GAAG,GAAGpC,QAAQ,EAAlB;AACA,QAAIsE,GAAG,GAAGjC,QAAQ,EAAlB;AAEA,QAAI,CAACiC,GAAL,EAAU,OAAO3D,KAAK,CAAC,kBAAD,CAAZ;AACVe,IAAAA,QAAQ;AAER,WAAOU,GAAG,CAAC;AACTd,MAAAA,IAAI,EAAE,MADG;AAETiD,MAAAA,SAAS,EAAED,GAFF;AAGTrB,MAAAA,YAAY,EAAEA,YAAY;AAHjB,KAAD,CAAV;AAKD;;AAED,SAAOgC,SAAS,CAAC9D,UAAU,EAAX,CAAhB;AACD,CAjjBD;AAmjBA;AACA;AACA;;;AAEA,SAASmB,IAAT,CAAc5C,GAAd,EAAmB;AACjB,SAAOA,GAAG,GAAGA,GAAG,CAAC6C,OAAJ,CAAY,YAAZ,EAA0B,EAA1B,CAAH,GAAmC,EAA7C;AACD;AAED;AACA;AACA;;;AAEA,SAAS0C,SAAT,CAAmBC,GAAnB,EAAwBC,MAAxB,EAAgC;AAC9B,MAAIC,MAAM,GAAGF,GAAG,IAAI,OAAOA,GAAG,CAAC5D,IAAX,KAAoB,QAAxC;AACA,MAAI+D,WAAW,GAAGD,MAAM,GAAGF,GAAH,GAASC,MAAjC;;AAEA,OAAK,IAAIG,CAAT,IAAcJ,GAAd,EAAmB;AACjB,QAAIlC,KAAK,GAAGkC,GAAG,CAACI,CAAD,CAAf;;AACA,QAAIC,KAAK,CAACC,OAAN,CAAcxC,KAAd,CAAJ,EAA0B;AACxBA,MAAAA,KAAK,CAACyC,OAAN,CAAc,UAASC,CAAT,EAAY;AAAET,QAAAA,SAAS,CAACS,CAAD,EAAIL,WAAJ,CAAT;AAA4B,OAAxD;AACD,KAFD,MAEO,IAAIrC,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;AAC7CiC,MAAAA,SAAS,CAACjC,KAAD,EAAQqC,WAAR,CAAT;AACD;AACF;;AAED,MAAID,MAAJ,EAAY;AACVO,IAAAA,MAAM,CAACC,cAAP,CAAsBV,GAAtB,EAA2B,QAA3B,EAAqC;AACnCW,MAAAA,YAAY,EAAE,IADqB;AAEnCC,MAAAA,QAAQ,EAAE,IAFyB;AAGnCC,MAAAA,UAAU,EAAE,KAHuB;AAInC/C,MAAAA,KAAK,EAAEmC,MAAM,IAAI;AAJkB,KAArC;AAMD;;AAED,SAAOD,GAAP;AACD","sourcesContent":["// http://www.w3.org/TR/CSS21/grammar.html\r\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\r\nvar commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g\r\n\r\nmodule.exports = function(css, options){\r\n  options = options || {};\r\n\r\n  /**\r\n   * Positional.\r\n   */\r\n\r\n  var lineno = 1;\r\n  var column = 1;\r\n\r\n  /**\r\n   * Update lineno and column based on `str`.\r\n   */\r\n\r\n  function updatePosition(str) {\r\n    var lines = str.match(/\\n/g);\r\n    if (lines) lineno += lines.length;\r\n    var i = str.lastIndexOf('\\n');\r\n    column = ~i ? str.length - i : column + str.length;\r\n  }\r\n\r\n  /**\r\n   * Mark position and patch `node.position`.\r\n   */\r\n\r\n  function position() {\r\n    var start = { line: lineno, column: column };\r\n    return function(node){\r\n      node.position = new Position(start);\r\n      whitespace();\r\n      return node;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Store position information for a node\r\n   */\r\n\r\n  function Position(start) {\r\n    this.start = start;\r\n    this.end = { line: lineno, column: column };\r\n    this.source = options.source;\r\n  }\r\n\r\n  /**\r\n   * Non-enumerable source string\r\n   */\r\n\r\n  Position.prototype.content = css;\r\n\r\n  /**\r\n   * Error `msg`.\r\n   */\r\n\r\n  var errorsList = [];\r\n\r\n  function error(msg) {\r\n    var err = new Error(options.source + ':' + lineno + ':' + column + ': ' + msg);\r\n    err.reason = msg;\r\n    err.filename = options.source;\r\n    err.line = lineno;\r\n    err.column = column;\r\n    err.source = css;\r\n\r\n    if (options.silent) {\r\n      errorsList.push(err);\r\n    } else {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parse stylesheet.\r\n   */\r\n\r\n  function stylesheet() {\r\n    var rulesList = rules();\r\n\r\n    return {\r\n      type: 'stylesheet',\r\n      stylesheet: {\r\n        source: options.source,\r\n        rules: rulesList,\r\n        parsingErrors: errorsList\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Opening brace.\r\n   */\r\n\r\n  function open() {\r\n    return match(/^{\\s*/);\r\n  }\r\n\r\n  /**\r\n   * Closing brace.\r\n   */\r\n\r\n  function close() {\r\n    return match(/^}/);\r\n  }\r\n\r\n  /**\r\n   * Parse ruleset.\r\n   */\r\n\r\n  function rules() {\r\n    var node;\r\n    var rules = [];\r\n    whitespace();\r\n    comments(rules);\r\n    while (css.length && css.charAt(0) != '}' && (node = atrule() || rule())) {\r\n      if (node !== false) {\r\n        rules.push(node);\r\n        comments(rules);\r\n      }\r\n    }\r\n    return rules;\r\n  }\r\n\r\n  /**\r\n   * Match `re` and return captures.\r\n   */\r\n\r\n  function match(re) {\r\n    var m = re.exec(css);\r\n    if (!m) return;\r\n    var str = m[0];\r\n    updatePosition(str);\r\n    css = css.slice(str.length);\r\n    return m;\r\n  }\r\n\r\n  /**\r\n   * Parse whitespace.\r\n   */\r\n\r\n  function whitespace() {\r\n    match(/^\\s*/);\r\n  }\r\n\r\n  /**\r\n   * Parse comments;\r\n   */\r\n\r\n  function comments(rules) {\r\n    var c;\r\n    rules = rules || [];\r\n    while (c = comment()) {\r\n      if (c !== false) {\r\n        rules.push(c);\r\n      }\r\n    }\r\n    return rules;\r\n  }\r\n\r\n  /**\r\n   * Parse comment.\r\n   */\r\n\r\n  function comment() {\r\n    var pos = position();\r\n    if ('/' != css.charAt(0) || '*' != css.charAt(1)) return;\r\n\r\n    var i = 2;\r\n    while (\"\" != css.charAt(i) && ('*' != css.charAt(i) || '/' != css.charAt(i + 1))) ++i;\r\n    i += 2;\r\n\r\n    if (\"\" === css.charAt(i-1)) {\r\n      return error('End of comment missing');\r\n    }\r\n\r\n    var str = css.slice(2, i - 2);\r\n    column += 2;\r\n    updatePosition(str);\r\n    css = css.slice(i);\r\n    column += 2;\r\n\r\n    return pos({\r\n      type: 'comment',\r\n      comment: str\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Parse selector.\r\n   */\r\n\r\n  function selector() {\r\n    var m = match(/^([^{]+)/);\r\n    if (!m) return;\r\n    /* @fix Remove all comments from selectors\r\n     * http://ostermiller.org/findcomment.html */\r\n    return trim(m[0])\r\n      .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n      .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, function(m) {\r\n        return m.replace(/,/g, '\\u200C');\r\n      })\r\n      .split(/\\s*(?![^(]*\\)),\\s*/)\r\n      .map(function(s) {\r\n        return s.replace(/\\u200C/g, ',');\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Parse declaration.\r\n   */\r\n\r\n  function declaration() {\r\n    var pos = position();\r\n\r\n    // prop\r\n    var prop = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n    if (!prop) return;\r\n    prop = trim(prop[0]);\r\n\r\n    // :\r\n    if (!match(/^:\\s*/)) return error(\"property missing ':'\");\r\n\r\n    // val\r\n    var val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n\r\n    var ret = pos({\r\n      type: 'declaration',\r\n      property: prop.replace(commentre, ''),\r\n      value: val ? trim(val[0]).replace(commentre, '') : ''\r\n    });\r\n\r\n    // ;\r\n    match(/^[;\\s]*/);\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * Parse declarations.\r\n   */\r\n\r\n  function declarations() {\r\n    var decls = [];\r\n\r\n    if (!open()) return error(\"missing '{'\");\r\n    comments(decls);\r\n\r\n    // declarations\r\n    var decl;\r\n    while (decl = declaration()) {\r\n      if (decl !== false) {\r\n        decls.push(decl);\r\n        comments(decls);\r\n      }\r\n    }\r\n\r\n    if (!close()) return error(\"missing '}'\");\r\n    return decls;\r\n  }\r\n\r\n  /**\r\n   * Parse keyframe.\r\n   */\r\n\r\n  function keyframe() {\r\n    var m;\r\n    var vals = [];\r\n    var pos = position();\r\n\r\n    while (m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/)) {\r\n      vals.push(m[1]);\r\n      match(/^,\\s*/);\r\n    }\r\n\r\n    if (!vals.length) return;\r\n\r\n    return pos({\r\n      type: 'keyframe',\r\n      values: vals,\r\n      declarations: declarations()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Parse keyframes.\r\n   */\r\n\r\n  function atkeyframes() {\r\n    var pos = position();\r\n    var m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n\r\n    if (!m) return;\r\n    var vendor = m[1];\r\n\r\n    // identifier\r\n    var m = match(/^([-\\w]+)\\s*/);\r\n    if (!m) return error(\"@keyframes missing name\");\r\n    var name = m[1];\r\n\r\n    if (!open()) return error(\"@keyframes missing '{'\");\r\n\r\n    var frame;\r\n    var frames = comments();\r\n    while (frame = keyframe()) {\r\n      frames.push(frame);\r\n      frames = frames.concat(comments());\r\n    }\r\n\r\n    if (!close()) return error(\"@keyframes missing '}'\");\r\n\r\n    return pos({\r\n      type: 'keyframes',\r\n      name: name,\r\n      vendor: vendor,\r\n      keyframes: frames\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Parse supports.\r\n   */\r\n\r\n  function atsupports() {\r\n    var pos = position();\r\n    var m = match(/^@supports *([^{]+)/);\r\n\r\n    if (!m) return;\r\n    var supports = trim(m[1]);\r\n\r\n    if (!open()) return error(\"@supports missing '{'\");\r\n\r\n    var style = comments().concat(rules());\r\n\r\n    if (!close()) return error(\"@supports missing '}'\");\r\n\r\n    return pos({\r\n      type: 'supports',\r\n      supports: supports,\r\n      rules: style\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Parse host.\r\n   */\r\n\r\n  function athost() {\r\n    var pos = position();\r\n    var m = match(/^@host\\s*/);\r\n\r\n    if (!m) return;\r\n\r\n    if (!open()) return error(\"@host missing '{'\");\r\n\r\n    var style = comments().concat(rules());\r\n\r\n    if (!close()) return error(\"@host missing '}'\");\r\n\r\n    return pos({\r\n      type: 'host',\r\n      rules: style\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Parse media.\r\n   */\r\n\r\n  function atmedia() {\r\n    var pos = position();\r\n    var m = match(/^@media *([^{]+)/);\r\n\r\n    if (!m) return;\r\n    var media = trim(m[1]);\r\n\r\n    if (!open()) return error(\"@media missing '{'\");\r\n\r\n    var style = comments().concat(rules());\r\n\r\n    if (!close()) return error(\"@media missing '}'\");\r\n\r\n    return pos({\r\n      type: 'media',\r\n      media: media,\r\n      rules: style\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Parse custom-media.\r\n   */\r\n\r\n  function atcustommedia() {\r\n    var pos = position();\r\n    var m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n    if (!m) return;\r\n\r\n    return pos({\r\n      type: 'custom-media',\r\n      name: trim(m[1]),\r\n      media: trim(m[2])\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Parse paged media.\r\n   */\r\n\r\n  function atpage() {\r\n    var pos = position();\r\n    var m = match(/^@page */);\r\n    if (!m) return;\r\n\r\n    var sel = selector() || [];\r\n\r\n    if (!open()) return error(\"@page missing '{'\");\r\n    var decls = comments();\r\n\r\n    // declarations\r\n    var decl;\r\n    while (decl = declaration()) {\r\n      decls.push(decl);\r\n      decls = decls.concat(comments());\r\n    }\r\n\r\n    if (!close()) return error(\"@page missing '}'\");\r\n\r\n    return pos({\r\n      type: 'page',\r\n      selectors: sel,\r\n      declarations: decls\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Parse document.\r\n   */\r\n\r\n  function atdocument() {\r\n    var pos = position();\r\n    var m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n    if (!m) return;\r\n\r\n    var vendor = trim(m[1]);\r\n    var doc = trim(m[2]);\r\n\r\n    if (!open()) return error(\"@document missing '{'\");\r\n\r\n    var style = comments().concat(rules());\r\n\r\n    if (!close()) return error(\"@document missing '}'\");\r\n\r\n    return pos({\r\n      type: 'document',\r\n      document: doc,\r\n      vendor: vendor,\r\n      rules: style\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Parse font-face.\r\n   */\r\n\r\n  function atfontface() {\r\n    var pos = position();\r\n    var m = match(/^@font-face\\s*/);\r\n    if (!m) return;\r\n\r\n    if (!open()) return error(\"@font-face missing '{'\");\r\n    var decls = comments();\r\n\r\n    // declarations\r\n    var decl;\r\n    while (decl = declaration()) {\r\n      decls.push(decl);\r\n      decls = decls.concat(comments());\r\n    }\r\n\r\n    if (!close()) return error(\"@font-face missing '}'\");\r\n\r\n    return pos({\r\n      type: 'font-face',\r\n      declarations: decls\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Parse import\r\n   */\r\n\r\n  var atimport = _compileAtrule('import');\r\n\r\n  /**\r\n   * Parse charset\r\n   */\r\n\r\n  var atcharset = _compileAtrule('charset');\r\n\r\n  /**\r\n   * Parse namespace\r\n   */\r\n\r\n  var atnamespace = _compileAtrule('namespace');\r\n\r\n  /**\r\n   * Parse non-block at-rules\r\n   */\r\n\r\n\r\n  function _compileAtrule(name) {\r\n    var re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n    return function() {\r\n      var pos = position();\r\n      var m = match(re);\r\n      if (!m) return;\r\n      var ret = { type: name };\r\n      ret[name] = m[1].trim();\r\n      return pos(ret);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parse at rule.\r\n   */\r\n\r\n  function atrule() {\r\n    if (css[0] != '@') return;\r\n\r\n    return atkeyframes()\r\n      || atmedia()\r\n      || atcustommedia()\r\n      || atsupports()\r\n      || atimport()\r\n      || atcharset()\r\n      || atnamespace()\r\n      || atdocument()\r\n      || atpage()\r\n      || athost()\r\n      || atfontface();\r\n  }\r\n\r\n  /**\r\n   * Parse rule.\r\n   */\r\n\r\n  function rule() {\r\n    var pos = position();\r\n    var sel = selector();\r\n\r\n    if (!sel) return error('selector missing');\r\n    comments();\r\n\r\n    return pos({\r\n      type: 'rule',\r\n      selectors: sel,\r\n      declarations: declarations()\r\n    });\r\n  }\r\n\r\n  return addParent(stylesheet());\r\n};\r\n\r\n/**\r\n * Trim `str`.\r\n */\r\n\r\nfunction trim(str) {\r\n  return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\n\r\n/**\r\n * Adds non-enumerable parent node reference to each node.\r\n */\r\n\r\nfunction addParent(obj, parent) {\r\n  var isNode = obj && typeof obj.type === 'string';\r\n  var childParent = isNode ? obj : parent;\r\n\r\n  for (var k in obj) {\r\n    var value = obj[k];\r\n    if (Array.isArray(value)) {\r\n      value.forEach(function(v) { addParent(v, childParent); });\r\n    } else if (value && typeof value === 'object') {\r\n      addParent(value, childParent);\r\n    }\r\n  }\r\n\r\n  if (isNode) {\r\n    Object.defineProperty(obj, 'parent', {\r\n      configurable: true,\r\n      writable: true,\r\n      enumerable: false,\r\n      value: parent || null\r\n    });\r\n  }\r\n\r\n  return obj;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}