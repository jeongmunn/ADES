{"version":3,"sources":["logo.svg","firebase.js","components/Home.js","components/SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","Home","logout","a","signOut","Button","onClick","SignIn","useState","email","setEmail","password","setPassword","register","createUserWithEmailAndPassword","errorCode","code","errorMessage","message","console","log","login","signInWithEmailAndPassword","className","placeholder","type","onChange","event","target","value","variant","App","user","setUser","onAuthStateChanged","currentUser","error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAAe,I,qBCmBTA,EAAcC,YAXG,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOXC,EAAOC,YAAQV,G,eCDNW,EAXF,WACT,IAAMC,EAAM,uCAAG,sBAAAC,EAAA,sEACLC,YAAQL,GADH,2CAAH,qDAGZ,OACI,gCACI,uCACA,cAACM,EAAA,EAAD,CAAQC,QAASJ,EAAjB,0BC+CGK,G,MAvDA,WACX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAQ,uCAAG,8BAAAV,EAAA,+EAEUW,YACff,EACAU,EACAE,GALK,8DAQHI,EAAY,KAAMC,KAClBC,EAAe,KAAMC,QAC3BC,QAAQC,IAAIL,GACZI,QAAQC,IAAIH,GAXH,yDAAH,qDAeRI,EAAK,uCAAG,8BAAAlB,EAAA,+EAEamB,YACfvB,EACAU,EACAE,GALE,8DAQAI,EAAY,KAAMC,KAClBC,EAAe,KAAMC,QAC3BC,QAAQC,IAAIL,GACZI,QAAQC,IAAIH,GAXN,yDAAH,qDAeX,OACI,sBAAKM,UAAU,SAAf,UACI,yCACA,uBAAOC,YAAY,QAAQC,KAAK,QAAQC,SAAU,SAACC,GAC/CjB,EAASiB,EAAMC,OAAOC,UAE1B,uBAAOL,YAAY,WAAWC,KAAK,WAAWC,SAAU,SAACC,GACrDf,EAAYe,EAAMC,OAAOC,UAE7B,cAACxB,EAAA,EAAD,CAAQyB,QAAQ,oBAAoBxB,QAASe,EAA7C,sBACA,yCACA,uBAAOG,YAAY,QAAQC,KAAK,QAAQC,SAAU,SAACC,GAC/CjB,EAASiB,EAAMC,OAAOC,UAE1B,uBAAOL,YAAY,WAAWC,KAAK,WAAWC,SAAU,SAACC,GACrDf,EAAYe,EAAMC,OAAOC,UAE7B,cAACxB,EAAA,EAAD,CAAQyB,QAAQ,oBAAoBxB,QAASO,EAA7C,0B,MC9BGkB,MArBf,WACE,MAAwBvB,mBAAS,IAAjC,mBAAOwB,EAAP,KAAaC,EAAb,KAaA,OAZAC,YAAmBnC,GAAM,SAACoC,GACxB,IACEF,EAAQE,GACRhB,QAAQC,IAAIe,GACZ,MAAOC,GACP,IAAMrB,EAAYqB,EAAMpB,KAClBC,EAAemB,EAAMlB,QAC3BC,QAAQC,IAAIL,GACZI,QAAQC,IAAIH,OAKd,8BACGe,EAAO,cAAC,EAAD,IAAS,cAAC,EAAD,OCbRK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a110eb06.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAFY9L3JNCYGf5APtJM9QallQ8TLXvFWDU\",\r\n  authDomain: \"quizment-ae4a6.firebaseapp.com\",\r\n  projectId: \"quizment-ae4a6\",\r\n  storageBucket: \"quizment-ae4a6.appspot.com\",\r\n  messagingSenderId: \"774729961857\",\r\n  appId: \"1:774729961857:web:87e44344039ae5dd875880\",\r\n  measurementId: \"G-4GXXKNTKV9\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\n//authentication\r\nconst auth = getAuth(firebaseApp);\r\n\r\n// export\r\nexport { auth };\r\n\r\n","import logo from '../logo.svg';\r\nimport '../App.css';\r\nimport React from 'react'\r\nimport { auth } from '../firebase.js';\r\nimport {\r\n    onAuthStateChanged,\r\n    signOut\r\n} from \"firebase/auth\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Home = () => {\r\n    const logout = async () => {\r\n        await signOut(auth);\r\n    };\r\n    return (\r\n        <div>\r\n            <h1>Hello</h1>\r\n            <Button onClick={logout}>Sign Out</Button>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import '../SignIn.css';\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword\r\n} from \"firebase/auth\";\r\nimport { auth } from '../firebase.js';\r\nimport React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst SignIn = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const register = async () => {\r\n        try {\r\n            const user = await createUserWithEmailAndPassword(\r\n                auth,\r\n                email,\r\n                password\r\n            );\r\n        } catch (error) {\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            console.log(errorCode);\r\n            console.log(errorMessage);\r\n        }\r\n    };\r\n\r\n    const login = async () => {\r\n        try {\r\n            const user = await signInWithEmailAndPassword(\r\n                auth,\r\n                email,\r\n                password\r\n            );\r\n        } catch (error) {\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            console.log(errorCode);\r\n            console.log(errorMessage);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"signin\">\r\n            <h1>Sign in</h1>\r\n            <input placeholder=\"email\" type=\"email\" onChange={(event) => {\r\n                setEmail(event.target.value);\r\n            }} />\r\n            <input placeholder=\"password\" type=\"password\" onChange={(event) => {\r\n                setPassword(event.target.value);\r\n            }} />\r\n            <Button variant=\"outline-secondary\" onClick={login}> Sign In</Button>\r\n            <h1>Sign up</h1>\r\n            <input placeholder=\"email\" type=\"email\" onChange={(event) => {\r\n                setEmail(event.target.value);\r\n            }} />\r\n            <input placeholder=\"password\" type=\"password\" onChange={(event) => {\r\n                setPassword(event.target.value);\r\n            }} />\r\n            <Button variant=\"outline-secondary\" onClick={register}>Sign Up</Button>\r\n        </div>\r\n    )\r\n}\r\nexport default SignIn;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Home from './components/Home';\r\nimport SignIn from './components/SignIn';\r\nimport {\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport { auth } from './firebase.js';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState({});\r\n  onAuthStateChanged(auth, (currentUser) => {\r\n    try {\r\n      setUser(currentUser);\r\n      console.log(currentUser);\r\n    } catch (error) {\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(errorCode);\r\n      console.log(errorMessage);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {user ? <Home />:<SignIn />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}