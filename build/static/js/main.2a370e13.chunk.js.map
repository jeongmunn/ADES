{"version":3,"sources":["logo.svg","firebase.js","components/Home.js","components/UploadReward.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","Home","logout","a","signOut","className","src","logo","alt","href","target","rel","onClick","UploadReward","state","rewardName","rewardPoints","pictureURL","handleName","event","setState","value","handlePoints","handleURL","handleSubmit","preventDefault","reward","ptsRequired","url","console","log","JSON","stringify","axios","post","then","res","data","onSubmit","this","type","name","onChange","React","Component","App","useState","user","setUser","onAuthStateChanged","currentUser","error","errorCode","code","errorMessage","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAAe,MAA0B,iC,wBCmBnCA,EAAcC,YAXG,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOXC,EAAOC,YAAQV,G,OCINW,EAjBF,WACT,IAAMC,EAAM,uCAAG,sBAAAC,EAAA,sEACLC,YAAQL,GADH,2CAAH,qDAGZ,OACI,8BACI,yBAAQM,UAAU,aAAlB,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACS,8CADT,0BAGA,mBAAGH,UAAU,WAAWI,KAAK,sBAAsBC,OAAO,SAASC,IAAI,sBAAvE,yBACA,wBAAQC,QAASV,EAAjB,4B,qDCjBVW,G,kNACJC,MAAQ,CACNC,WAAY,GACZC,aAAc,GACdC,WAAY,I,EAGdC,WAAa,SAAAC,GACX,EAAKC,SAAS,CAAEL,WAAaI,EAAMT,OAAOW,S,EAG5CC,aAAe,SAAAH,GACb,EAAKC,SAAS,CAAEJ,aAAeG,EAAMT,OAAOW,S,EAG9CE,UAAY,SAAAJ,GACV,EAAKC,SAAS,CAAEH,WAAaE,EAAMT,OAAOW,S,EAG5CG,aAAe,SAAAL,GACbA,EAAMM,iBAEN,IAAMC,EAAS,CACXX,WAAY,EAAKD,MAAMC,WACvBY,YAAa,EAAKb,MAAME,aACxBY,IAAK,EAAKd,MAAMG,YAGpBY,QAAQC,IAAI,YAAcC,KAAKC,UAAUN,IAEzCO,IAAMC,KAAN,qCAAiD,CAAER,WAChDS,MAAK,SAAAC,GACJP,QAAQC,IAAIM,GACZP,QAAQC,IAAIM,EAAIC,U,4CAGtB,WACE,OACI,qBAAKhC,UAAU,eAAf,SACA,uBAAMiC,SAAUC,KAAKf,aAArB,UACE,kDAEE,uBAAOgB,KAAK,OAAOC,KAAK,aAAaC,SAAUH,KAAKrB,gBAEtD,sDAEE,uBAAOsB,KAAK,SAASC,KAAK,aAAaC,SAAUH,KAAKjB,kBAExD,kDAEE,uBAAOkB,KAAK,OAAOC,KAAK,aAAaC,SAAUH,KAAKhB,eAEtD,wBAAQiB,KAAK,SAAb,0B,GApDiBG,IAAMC,YA0DlB/B,ICjCAgC,MApBf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAYA,OAXAC,YAAmBlD,GAAM,SAACmD,GACxB,IACEF,EAAQE,GACR,MAAOC,GACP,IAAMC,EAAYD,EAAME,KAClBC,EAAeH,EAAMI,QAC3B1B,QAAQC,IAAIsB,GACZvB,QAAQC,IAAIwB,OAKd,qBAAKjD,UAAU,MAAf,SACG0C,EAAO,cAAC,EAAD,IAAS,cAAC,EAAD,OCZRS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2a370e13.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAFY9L3JNCYGf5APtJM9QallQ8TLXvFWDU\",\r\n  authDomain: \"quizment-ae4a6.firebaseapp.com\",\r\n  projectId: \"quizment-ae4a6\",\r\n  storageBucket: \"quizment-ae4a6.appspot.com\",\r\n  messagingSenderId: \"774729961857\",\r\n  appId: \"1:774729961857:web:87e44344039ae5dd875880\",\r\n  measurementId: \"G-4GXXKNTKV9\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\n//authentication\r\nconst auth = getAuth(firebaseApp);\r\n\r\n// export\r\nexport { auth };\r\n\r\n","import logo from '../logo.svg';\r\nimport '../App.css';\r\nimport React from 'react'\r\nimport { auth } from '../firebase.js';\r\nimport {\r\n    onAuthStateChanged,\r\n    signOut\r\n} from \"firebase/auth\";\r\n\r\nconst Home = () => {\r\n    const logout = async () => {\r\n        await signOut(auth);\r\n    };\r\n    return (\r\n        <div>\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p>\r\n                    Edit <code>src/App.js</code> and save to reload.\r\n                </p>\r\n                <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Learn React</a>\r\n                <button onClick={logout}>Sign Out</button>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { TwitterAuthProvider } from '@firebase/auth';\r\n\r\nclass UploadReward extends React.Component {\r\n  state = {\r\n    rewardName: '',\r\n    rewardPoints: '',\r\n    pictureURL: ''\r\n  }\r\n\r\n  handleName = event => {\r\n    this.setState({ rewardName : event.target.value, });\r\n  }\r\n\r\n  handlePoints = event => {\r\n    this.setState({ rewardPoints : event.target.value, });\r\n  }\r\n\r\n  handleURL = event => {\r\n    this.setState({ pictureURL : event.target.value, });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const reward = {\r\n        rewardName: this.state.rewardName,\r\n        ptsRequired: this.state.rewardPoints,\r\n        url: this.state.pictureURL\r\n    };\r\n\r\n    console.log(\"reward : \" + JSON.stringify(reward));\r\n\r\n    axios.post(`https://localhost:8081/api/rewards`, { reward })\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n      })\r\n  }\r\n  render() {\r\n    return (\r\n        <div className=\"uploadReward\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Reward Name :\r\n            <input type=\"text\" name=\"rewardName\" onChange={this.handleName} />\r\n          </label>\r\n          <label>\r\n            Points Required :\r\n            <input type=\"number\" name=\"rewardName\" onChange={this.handlePoints} />\r\n          </label>\r\n          <label>\r\n            Picture URL :\r\n            <input type=\"file\" name=\"rewardName\" onChange={this.handleURL} />\r\n          </label>\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n      </div>\r\n    )\r\n}\r\n}\r\nexport default UploadReward;\r\n","import React, { useState } from 'react';\r\nimport Home from './components/Home';\r\nimport SignIn from './components/SignIn';\r\nimport UploadRewards from './components/UploadReward'\r\nimport {\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport { auth } from './firebase.js';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState({});\r\n  onAuthStateChanged(auth, (currentUser) => {\r\n    try {\r\n      setUser(currentUser);\r\n    } catch (error) {\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(errorCode);\r\n      console.log(errorMessage);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {user ? <Home />:<UploadRewards />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}