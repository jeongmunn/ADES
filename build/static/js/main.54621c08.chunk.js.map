{"version":3,"sources":["logo.svg","firebase.js","components/Home.js","components/SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","Home","logout","a","signOut","className","src","logo","alt","href","target","rel","onClick","SignIn","useState","email","setEmail","password","setPassword","register","createUserWithEmailAndPassword","errorCode","code","errorMessage","message","console","log","login","signInWithEmailAndPassword","placeholder","type","onChange","event","value","App","user","setUser","onAuthStateChanged","currentUser","error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAAe,MAA0B,iC,wBCmBnCA,EAAcC,YAXG,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOXC,EAAOC,YAAQV,G,OCINW,EAjBF,WACT,IAAMC,EAAM,uCAAG,sBAAAC,EAAA,sEACLC,YAAQL,GADH,2CAAH,qDAGZ,OACI,8BACI,yBAAQM,UAAU,aAAlB,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACS,8CADT,0BAGA,mBAAGH,UAAU,WAAWI,KAAK,sBAAsBC,OAAO,SAASC,IAAI,sBAAvE,yBACA,wBAAQC,QAASV,EAAjB,4BC+CDW,G,MA5DA,WACX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAIMC,EAAQ,uCAAG,8BAAAhB,EAAA,+EAEUiB,YACfrB,EACAgB,EACAE,GALK,8DAQHI,EAAY,KAAMC,KAClBC,EAAe,KAAMC,QAC3BC,QAAQC,IAAIL,GACZI,QAAQC,IAAIH,GAXH,yDAAH,qDAeRI,EAAK,uCAAG,8BAAAxB,EAAA,+EAEayB,YACf7B,EACAgB,EACAE,GALE,8DAUAI,EAAY,KAAMC,KAClBC,EAAe,KAAMC,QAC3BC,QAAQC,IAAIL,GACZI,QAAQC,IAAIH,GAbN,yDAAH,qDAiBX,OACI,sBAAKlB,UAAU,SAAf,UACI,yCACA,uBAAOwB,YAAY,QAAQC,KAAK,QAAQC,SAAU,SAACC,GAC/ChB,EAASgB,EAAMtB,OAAOuB,UAE1B,uBAAOJ,YAAY,WAAWC,KAAK,WAAWC,SAAU,SAACC,GACrDd,EAAYc,EAAMtB,OAAOuB,UAE7B,wBAAQrB,QAASe,EAAjB,sBAEA,yCACA,uBAAOE,YAAY,QAAQC,KAAK,QAAQC,SAAU,SAACC,GAC/ChB,EAASgB,EAAMtB,OAAOuB,UAE1B,uBAAOJ,YAAY,WAAWC,KAAK,WAAWC,SAAU,SAACC,GACrDd,EAAYc,EAAMtB,OAAOuB,UAE7B,wBAAQrB,QAASO,EAAjB,0BClCGe,MAtBf,WACE,MAAwBpB,mBAAS,IAAjC,mBAAOqB,EAAP,KAAaC,EAAb,KAcA,OAbA,oBACAC,YAAmBtC,GAAM,SAACuC,GACxB,IACEF,EAAQE,GACRb,QAAQC,IAAIY,GACZ,MAAOC,GACP,IAAMlB,EAAYkB,EAAMjB,KAClBC,EAAegB,EAAMf,QAC3BC,QAAQC,IAAIL,GACZI,QAAQC,IAAIH,OAKd,qBAAKlB,UAAU,MAAf,SACG8B,EAAO,cAAC,EAAD,IAAS,cAAC,EAAD,OCbRK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.54621c08.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAFY9L3JNCYGf5APtJM9QallQ8TLXvFWDU\",\n  authDomain: \"quizment-ae4a6.firebaseapp.com\",\n  projectId: \"quizment-ae4a6\",\n  storageBucket: \"quizment-ae4a6.appspot.com\",\n  messagingSenderId: \"774729961857\",\n  appId: \"1:774729961857:web:87e44344039ae5dd875880\",\n  measurementId: \"G-4GXXKNTKV9\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\n//authentication\nconst auth = getAuth(firebaseApp);\n\n// export\nexport { auth };\n\n","import logo from '../logo.svg';\nimport '../App.css';\nimport React from 'react'\nimport { auth } from '../firebase.js';\nimport {\n    onAuthStateChanged,\n    signOut\n} from \"firebase/auth\";\n\nconst Home = () => {\n    const logout = async () => {\n        await signOut(auth);\n    };\n    return (\n        <div>\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Learn React</a>\n                <button onClick={logout}>Sign Out</button>\n            </header>\n        </div>\n    )\n}\nexport default Home;","import '../SignIn.css';\nimport {\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword\n} from \"firebase/auth\";\nimport { auth } from '../firebase.js';\nimport React, { useState } from 'react'\n\nconst SignIn = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    // const [loginEmail, setLoginEmail] = useState(\"\");\n    // const [loginPassword, setLoginPassword] = useState(\"\");\n\n    const register = async () => {\n        try {\n            const user = await createUserWithEmailAndPassword(\n                auth,\n                email,\n                password\n            );\n        } catch (error) {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            console.log(errorCode);\n            console.log(errorMessage);\n        }\n    };\n\n    const login = async () => {\n        try {\n            const user = await signInWithEmailAndPassword(\n                auth,\n                email,\n                password\n            );\n            // console.log(JSON.stringify(user.user.uid));\n\n        } catch (error) {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            console.log(errorCode);\n            console.log(errorMessage);\n        }\n    };\n\n    return (\n        <div className=\"signin\">\n            <h1>Sign in</h1>\n            <input placeholder=\"email\" type=\"email\" onChange={(event) => {\n                setEmail(event.target.value);\n            }} />\n            <input placeholder=\"password\" type=\"password\" onChange={(event) => {\n                setPassword(event.target.value);\n            }} />\n            <button onClick={login}> Sign In</button>\n\n            <h1>Sign up</h1>\n            <input placeholder=\"email\" type=\"email\" onChange={(event) => {\n                setEmail(event.target.value);\n            }} />\n            <input placeholder=\"password\" type=\"password\" onChange={(event) => {\n                setPassword(event.target.value);\n            }} />\n            <button onClick={register}>Sign Up</button>\n        </div>\n    )\n}\nexport default SignIn;\n","import React, { useState } from 'react';\nimport Home from './components/Home';\nimport SignIn from './components/SignIn';\nimport {\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { auth } from './firebase.js';\n\nfunction App() {\n  const [user, setUser] = useState({});\n  user = null;\n  onAuthStateChanged(auth, (currentUser) => {\n    try {\n      setUser(currentUser);\n      console.log(currentUser);\n    } catch (error) {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      {user ? <Home />:<SignIn />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}